{
  "spark": [
    {
      "name": "Machine",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 4
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.ExecuteProgram",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 35
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 47
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.IncPC",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 22
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoAdd",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 28
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoSub",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 37
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoMul",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 46
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoDiv",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 55
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoLdr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 64
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoStr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 74
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoMov",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 84
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectIncPC",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 172
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 179
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 186
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 193
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 200
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 207
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 215
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 223
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "machine.adb",
      "line": 204,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 200
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__24.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 205,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 200
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__25.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 40,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 37
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__48.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 67,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 64
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__77.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 70,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 64
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__78.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 22,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.IncPC",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__95.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 197,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 193
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__120.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 198,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 193
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__121.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 31,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 28
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__173.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 77,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 74
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__202.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 80,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 74
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__203.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 190,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 186
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__228.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 191,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 186
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__229.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectIncPC",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 172
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__246.trace",
      "msg_id": 0,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectIncPC",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 172
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__250.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 58,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 55
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__273.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 170,
      "col": 7,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__357.trace",
      "msg_id": 1,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 233,
      "col": 10,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__363.trace",
      "msg_id": 2,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__403.trace",
      "msg_id": 3,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__428.trace",
      "msg_id": 4,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__453.trace",
      "msg_id": 5,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__480.trace",
      "msg_id": 6,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__512.trace",
      "msg_id": 7,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__544.trace",
      "msg_id": 8,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__566.trace",
      "msg_id": 9,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 290,
      "col": 23,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__570.trace",
      "msg_id": 10,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 20,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__571.trace",
      "msg_id": 11,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__587.trace",
      "msg_id": 12,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__605.trace",
      "msg_id": 13,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__614.trace",
      "msg_id": 14,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 175,
      "col": 16,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__624.trace",
      "msg_id": 15,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 318,
      "col": 8,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__629.trace",
      "msg_id": 16,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 320,
      "col": 15,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__630.trace",
      "msg_id": 17,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 242,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__633.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 245,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__634.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__635.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__636.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__637.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__638.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__639.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__640.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__641.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__642.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__643.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__644.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__645.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__646.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__647.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__648.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__649.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__650.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__651.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__652.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__653.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__654.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__655.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__656.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__657.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 246,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__658.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__659.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__660.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__661.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 182,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__662.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 183,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__663.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 183,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__664.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 184,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__665.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 252,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__666.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__667.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__668.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__669.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__670.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 189,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__671.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 190,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__672.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 190,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__673.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 191,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__674.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 255,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__675.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__676.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__677.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__678.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__679.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 196,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__680.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 197,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__681.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 197,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__682.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 198,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__683.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__684.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__685.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__686.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__687.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__688.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__689.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__690.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 203,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__691.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 204,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__692.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 204,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__693.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 205,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__694.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 265,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__695.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__696.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__697.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__698.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 271,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__699.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 271,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__700.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__701.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__702.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__703.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 208,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__704.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 211,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__705.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 212,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__706.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 212,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__707.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 212,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__708.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 213,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__709.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 275,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__710.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__711.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 279,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__712.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 279,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__713.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__714.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__715.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__716.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__717.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__718.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 216,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__719.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 219,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__720.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 220,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__721.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 220,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__722.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 220,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__723.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 221,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__724.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 285,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__725.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__726.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 287,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__727.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 287,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__728.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 226,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__729.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 227,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__730.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 228,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__731.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 288,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__732.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__733.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 290,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__734.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 290,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__735.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 295,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__736.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 295,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__737.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 297,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__738.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 297,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__739.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 300,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__740.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 300,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__741.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__742.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 302,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__743.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 302,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__744.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__745.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__746.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 306,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__747.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 306,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__748.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 309,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__749.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 309,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__750.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__751.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 311,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__752.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__753.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 314,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__754.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 177,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__755.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 316,
      "col": 21,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__756.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 241,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__757.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 241,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__758.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 318,
      "col": 8,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__759.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 86,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 84
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__780.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 212,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 207
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__810.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 212,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 207
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__811.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 213,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 207
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__812.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 183,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 179
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__837.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 184,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 179
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__838.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 227,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 223
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__861.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 228,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 223
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__862.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 220,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 215
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__892.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 220,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 215
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__893.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 221,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 215
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__894.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 34,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1007.trace",
      "msg_id": 18,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 43,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1023.trace",
      "msg_id": 19,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 52,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1039.trace",
      "msg_id": 20,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 61,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1055.trace",
      "msg_id": 21,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 71,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1073.trace",
      "msg_id": 22,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 81,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1091.trace",
      "msg_id": 23,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 89,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1104.trace",
      "msg_id": 24,
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 37,
      "col": 29,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1138.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 38,
      "col": 29,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1139.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 35,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1140.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 104,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1141.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 107,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1142.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1143.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1144.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1145.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1146.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1147.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1148.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1149.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1150.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1151.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1152.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1153.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1154.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1155.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1156.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1157.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1158.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1159.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1160.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1161.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1162.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1163.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1164.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1165.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1166.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1167.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1168.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1169.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1170.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1171.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1172.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1173.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1174.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1175.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1176.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1177.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1178.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1179.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1180.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1181.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1182.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1183.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1184.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1185.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 70,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1186.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1187.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1188.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1189.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1190.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 80,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1191.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1192.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1193.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1194.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1195.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 134,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1196.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 138,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1197.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1198.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 140,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1199.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 141,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1200.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1201.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1202.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1203.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 148,
      "col": 21,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1204.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 103,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1205.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 103,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1206.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 150,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1207.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 49,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 46
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1230.trace",
      "how_proved": "flow"
    }
  ],
  "proof": [
    {
      "file": "machine.adb",
      "line": 216,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 163,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 163,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 216,
      "check_col": 36,
      "tracefile": "machine.adb_216_36_machine.adb_284_23_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "216": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -2147483648, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -2147483648, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 0, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 0, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1), others => (Op => NOP, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 25,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 290,
      "col": 43,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 290,
      "check_col": 43,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 309,
      "col": 25,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 309,
      "check_col": 25,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 125,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 125,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_143_19_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 26,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 284,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 300,
      "col": 22,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 300,
      "check_col": 22,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 141,
      "col": 19,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 141,
      "check_col": 19,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 257,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 78,
      "col": 33,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 149,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 78,
      "check_col": 33,
      "tracefile": "machine.adb_78_33_machine.adb_128_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 27,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 297,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 297,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 42,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 203,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 203,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 42,
      "check_col": 29,
      "tracefile": "machine.adb_42_29_machine.adb_116_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "42": [
            {
              "name": "Regs",
              "value": "(1 => 1, others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => 1, others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => SUB, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 28,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 134,
      "col": 43,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 134,
      "check_col": 43,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 295,
      "col": 46,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 295,
      "check_col": 46,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 54,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 269,
      "check_col": 54,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 304,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 271,
      "col": 57,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 271,
      "check_col": 57,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 1.60000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_252_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "182": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "183": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 29,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 251,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 274,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_285_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "216": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "219": [
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "220": [
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 30,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 101,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 101,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_138_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JMP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 31,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 254,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 279,
      "col": 32,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 279,
      "check_col": 32,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 208,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 163,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 163,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 208,
      "check_col": 36,
      "tracefile": "machine.adb_208_36_machine.adb_274_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "208": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -2147483648, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -2147483648, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 0, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 0, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1), others => (Op => NOP, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => -1, StrRa => 1, StrOffs => -1, StrRb => 1, MovRd => 1, MovOffs => -1, JmpOffs => -1, JzRa => 1, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 32,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 254,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 167,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_117_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "42": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "43": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => SUB, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 33,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 68,
      "col": 33,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 149,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 68,
      "check_col": 33,
      "tracefile": "machine.adb_68_33_machine.adb_125_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 34,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 129,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 129,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_141_19_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 35,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 32,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 269,
      "check_col": 32,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 251,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 565,
              "time": 1.70000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 573,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_265_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "203": [
            {
              "name": "NewRegs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "204": [
            {
              "name": "NewRegs",
              "value": "(0 => 1, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 36,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 274,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 131,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 114,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 114,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_132_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "88": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "89": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MOV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 37,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 271,
      "col": 35,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 271,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 274,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 274,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 284,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 296,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_123_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "61": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 1, DivRs2 => 0, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => DIV, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 1, DivRs2 => 0, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 38,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 154,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 154,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_129_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "80": [
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "81": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 39,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 257,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 284,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 148,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 14,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 148,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 139,
              "time": 1.60000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 139,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_311_25_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 40,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 167,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_114_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "33": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "34": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 41,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 138,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 138,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 35,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 281,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 133,
              "time": 1.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 133,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_288_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "226": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "227": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MOV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 42,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 67,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 67,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_146_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 43,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 287,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 287,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 208,
      "col": 36,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 169,
              "time": 1.60000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 169,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 208,
      "check_col": 36,
      "tracefile": "machine.adb_208_36_machine.adb_274_24_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "208": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 44,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 279,
      "col": 54,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 279,
      "check_col": 54,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_275_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "208": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "211": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "212": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(0 => 0, others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 45,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 78,
      "col": 33,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 149,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 78,
      "check_col": 33,
      "tracefile": "machine.adb_78_33_machine.adb_128_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 46,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 257,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 257,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 302,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 302,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 261,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 112,
              "time": 1.70000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 112,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_300_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JMP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 47,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 251,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 251,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 254,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 130,
              "time": 1.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 130,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_309_25_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 48,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 57,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 281,
      "check_col": 57,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 287,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 287,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 51,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 682,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 682,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 51,
      "check_col": 29,
      "tracefile": "machine.adb_51_29_machine.adb_119_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "51": [
            {
              "name": "Regs",
              "value": "(1 => 2, others => -2)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => 2, others => -2)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 49,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 60,
      "col": 29,
      "rule": "VC_DIVISION_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 134,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 134,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 60,
      "check_col": 29,
      "tracefile": "machine.adb_60_29_machine.adb_122_16_division_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 50,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 216,
      "col": 36,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 169,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 169,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 216,
      "check_col": 36,
      "tracefile": "machine.adb_216_36_machine.adb_284_23_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "216": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 51,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_255_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "189": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "190": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => SUB, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 52,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 197,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 759,
              "time": 1.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 759,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 197,
      "check_col": 35,
      "tracefile": "machine.adb_197_35_machine.adb_257_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "196": [
            {
              "name": "NewRegs",
              "value": "(0 => -2, 1 => 2, others => 0)",
              "kind": "variable"
            }
          ],
          "197": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2, 1 => 2, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2, 1 => 2, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 53,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_258_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "196": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "197": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 54,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 153,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 153,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_126_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "70": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "71": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(0 => 0, others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 55,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 140,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 140,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 33,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 189,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 189,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 33,
      "check_col": 29,
      "tracefile": "machine.adb_33_29_machine.adb_113_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "33": [
            {
              "name": "Regs",
              "value": "(others => -1073741825)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1073741825)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1073741825)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 56,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 190,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 217,
              "time": 1.60000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 217,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 190,
      "check_col": 35,
      "tracefile": "machine.adb_190_35_machine.adb_254_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "189": [
            {
              "name": "NewRegs",
              "value": "(0 => -2147483648, 1 => 1, others => 0)",
              "kind": "variable"
            }
          ],
          "190": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => 1, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => 1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => SUB, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 57,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 168,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 168,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_120_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "51": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "52": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 58,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 204,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 993,
              "time": 2.00000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 993,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 204,
      "check_col": 35,
      "tracefile": "machine.adb_204_35_machine.adb_264_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "203": [
            {
              "name": "NewRegs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "204": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 59,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 131,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 68,
      "col": 33,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 149,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 68,
      "check_col": 33,
      "tracefile": "machine.adb_68_33_machine.adb_125_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 60,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 284,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 284,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 316,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 14,
              "time": 4.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 316,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 4.19999986886978E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 242,
      "col": 15,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 242,
      "check_col": 15,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 183,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 208,
              "time": 1.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 208,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 183,
      "check_col": 35,
      "tracefile": "machine.adb_183_35_machine.adb_251_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "182": [
            {
              "name": "NewRegs",
              "value": "(0 => -1073741825, others => 0)",
              "kind": "variable"
            }
          ],
          "183": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1073741825, others => 0)",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1073741825, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 61,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 204,
      "col": 35,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 204,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 176,
      "col": 46,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 81,
              "time": 1.10000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 81,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 176,
      "check_col": 46,
      "tracefile": "machine.adb_176_46_machine.adb_314_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "175": [
            {
              "name": "NewPC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "176": [
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            }
          ],
          "231": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "232": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "233": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "240": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "241": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewPC",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "242": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 62,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 104,
      "col": 15,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 104,
      "check_col": 15,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 60,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 289,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 289,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 60,
      "check_col": 29,
      "tracefile": "machine.adb_60_29_machine.adb_122_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 63,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 306,
      "col": 52,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 306,
      "check_col": 52,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Machine",
          "sloc": [
            {
              "file": "machine.ads",
              "line": 4
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoSub",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 37
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoMov",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 84
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoAdd",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 28
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 200
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoStr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 74
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 193
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.IncPC",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 22
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoLdr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 64
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 207
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 186
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 179
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 223
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoDiv",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 55
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 215
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoMul",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 46
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "marking": 1.19450001511723E-03,
    "globals (basic)": 1.01180998608470E-02,
    "globals/properties (advanced)": 1.94914992898703E-02,
    "flow analysis": 1.02420598268509E-01,
    "codepeer results": 5.80000005356851E-06,
    "init_why_sections": 2.28999997489154E-04,
    "translation of standard": 3.12040001153946E-03,
    "translation of compilation unit": 6.02735988795757E-02,
    "proof": 8.24583816528320E+00
  }
}
