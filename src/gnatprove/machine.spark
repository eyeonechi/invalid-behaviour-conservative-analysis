{
  "spark": [
    {
      "name": "Machine",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 4
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.ExecuteProgram",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 35
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour",
      "sloc": [
        {
          "file": "machine.ads",
          "line": 47
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.IncPC",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 22
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoAdd",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 28
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoSub",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 37
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoMul",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 46
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoDiv",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 55
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoLdr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 64
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoStr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 74
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DoMov",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 84
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectIncPC",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 172
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 176
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 183
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 190
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 197
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 204
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 212
        }
      ],
      "spark": "all"
    },
    {
      "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
      "sloc": [
        {
          "file": "machine.adb",
          "line": 220
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "machine.adb",
      "line": 58,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 55
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__22.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 194,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 190
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__47.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 195,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 190
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__48.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 170,
      "col": 7,
      "rule": "UNUSED",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "msg_id": 0,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 230,
      "col": 10,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__138.trace",
      "msg_id": 1,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 239,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__369.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 242,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__370.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__371.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__372.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__373.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__374.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__375.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__376.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__377.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__378.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__379.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__380.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__381.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__382.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__383.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__384.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__385.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__386.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__387.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__388.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__389.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__390.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__391.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__392.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__393.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 243,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__394.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__395.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__396.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__397.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__398.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__399.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__400.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__401.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__402.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__403.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 179,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__404.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 180,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__405.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 180,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__406.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 181,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__407.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 254,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__408.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__409.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__410.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__411.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__412.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__413.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__414.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__415.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__416.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__417.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 186,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__418.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 187,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__419.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 187,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__420.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 188,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__421.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 262,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__422.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__423.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__424.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__425.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__426.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__427.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__428.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__429.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__430.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__431.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 193,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__432.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 194,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__433.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 194,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__434.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 195,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__435.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 270,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__436.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 273,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__437.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 273,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__438.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__439.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__440.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__441.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 200,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__442.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 201,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__443.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 201,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__444.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 202,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__445.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 277,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__446.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__447.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__448.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__449.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__450.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__451.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__452.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__453.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__454.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__455.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 205,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__456.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 208,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__457.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 209,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__458.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 209,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__459.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 209,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__460.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 210,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__461.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 287,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__462.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__463.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__464.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__465.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 293,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__466.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 293,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__467.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 293,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__468.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__469.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__470.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__471.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 213,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__472.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 216,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__473.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 217,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__474.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 217,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__475.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 217,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__476.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 218,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__477.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 297,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__478.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 299,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__479.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 301,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__480.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__481.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 24,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__482.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 223,
      "col": 18,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__483.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 224,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__484.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 225,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__485.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 305,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__486.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 312,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__487.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 312,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__488.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 314,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__489.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 314,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__490.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 317,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__491.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 317,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__492.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 319,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__493.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 319,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__494.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 321,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__495.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 321,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__496.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 323,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__497.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 323,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__498.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 326,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__499.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 326,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__500.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 328,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__501.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 330,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__502.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 333,
      "col": 25,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__503.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 336,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__504.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 338,
      "col": 21,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__505.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 238,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__506.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 238,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__507.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 86,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 84
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__528.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 34,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__641.trace",
      "msg_id": 2,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 43,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__657.trace",
      "msg_id": 3,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 52,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__673.trace",
      "msg_id": 4,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 61,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__689.trace",
      "msg_id": 5,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 71,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__707.trace",
      "msg_id": 6,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 81,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__725.trace",
      "msg_id": 7,
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 89,
      "col": 11,
      "rule": "INEFFECTIVE",
      "severity": "warning",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__738.trace",
      "msg_id": 8,
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 37,
      "col": 29,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__772.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 38,
      "col": 29,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__773.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.ads",
      "line": 35,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__774.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 104,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__775.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 107,
      "col": 14,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__776.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__777.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__778.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__779.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__780.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__781.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__782.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__783.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__784.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__785.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__786.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__787.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__788.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__789.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__790.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__791.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__792.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__793.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__794.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__795.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__796.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__797.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__798.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__799.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 108,
      "col": 26,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__800.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__801.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__802.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__803.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__804.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__805.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__806.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__807.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__808.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__809.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__810.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__811.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__812.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__813.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__814.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__815.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__816.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__817.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__818.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__819.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 70,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__820.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__821.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__822.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__823.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__824.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 80,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__825.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__826.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__827.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__828.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__829.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 134,
      "col": 23,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__830.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 138,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__831.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__832.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 140,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__833.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 141,
      "col": 19,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__834.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__835.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__836.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__837.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 148,
      "col": 21,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__838.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 103,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__839.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 103,
      "col": 53,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__840.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 150,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__841.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 49,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoMul",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 46
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__864.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 187,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 183
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__889.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 188,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 183
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__890.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 209,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 204
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__949.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 209,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 204
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__950.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 210,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 204
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__951.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 40,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoSub",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 37
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__974.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 180,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 176
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__999.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 181,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 176
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1000.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 224,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 220
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1023.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 225,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 220
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1024.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 217,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 212
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1054.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 217,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 212
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1055.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 218,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 212
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1056.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 67,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 64
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1085.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 70,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoLdr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 64
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1086.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 22,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.IncPC",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1103.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 201,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 197
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1128.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 202,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 197
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1129.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 31,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoAdd",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 28
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1152.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 77,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 74
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1181.trace",
      "how_proved": "flow"
    },
    {
      "file": "machine.adb",
      "line": 80,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Machine.DoStr",
        "sloc": [
          {
            "file": "machine.adb",
            "line": 74
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "machine__flow__1182.trace",
      "how_proved": "flow"
    }
  ],
  "proof": [
    {
      "file": "machine.adb",
      "line": 293,
      "col": 53,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 293,
      "check_col": 53,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 125,
              "time": 1.70000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 125,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_143_19_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 9,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 286,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 321,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 321,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 141,
      "col": 19,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 141,
      "check_col": 19,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 78,
      "col": 33,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 78,
      "check_col": 33,
      "tracefile": "machine.adb_78_33_machine.adb_128_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 10,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 192,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 192,
              "time": 3.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 256,
      "check_col": 36,
      "tracefile": "machine.adb_256_36_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => 1, 1 => -2147483648, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 0, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "256": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => 1, 1 => -2147483648, others => 0)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => SUB, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 0, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 11,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 269,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 286,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 42,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 203,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 203,
              "time": 3.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 42,
      "check_col": 29,
      "tracefile": "machine.adb_42_29_machine.adb_116_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "42": [
            {
              "name": "Regs",
              "value": "(1 => 1, others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => 1, others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => SUB, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 0, SubRs1 => 0, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 12,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 134,
      "col": 43,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 134,
      "check_col": 43,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 261,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 286,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 286,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 293,
      "col": 31,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 293,
      "check_col": 31,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 304,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 556,
              "time": 2.70000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 565,
              "time": 3.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_277_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "200": [
            {
              "name": "NewRegs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "201": [
            {
              "name": "NewRegs",
              "value": "(0 => 1, others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "277": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 13,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 81,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 81,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_336_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "336": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 14,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 51,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 266,
      "check_col": 51,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 50,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 281,
      "check_col": 50,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 143,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 143,
              "time": 3.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 281,
      "check_col": 36,
      "tracefile": "machine.adb_281_36_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147418114, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            }
          ],
          "281": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147418114, others => 0)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 15,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 201,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 983,
              "time": 3.40000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 993,
              "time": 4.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 201,
      "check_col": 35,
      "tracefile": "machine.adb_201_35_machine.adb_276_24_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "200": [
            {
              "name": "NewRegs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "201": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147483648, 1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 16,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 31,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 250,
      "check_col": 31,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 48,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 48,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 101,
              "time": 1.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 101,
              "time": 3.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_138_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JMP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 17,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 261,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 269,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 253,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 276,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 317,
      "col": 22,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 317,
      "check_col": 22,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 253,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 2.00000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_117_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "42": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "43": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => SUB, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 18,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 125,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 125,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 68,
      "col": 33,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 68,
      "check_col": 33,
      "tracefile": "machine.adb_68_33_machine.adb_125_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 19,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 129,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 129,
              "time": 2.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_141_19_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 20,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 168,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 2.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_287_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "205": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "208": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "209": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(0 => 0, others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "287": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 21,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 133,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 147,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_305_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "223": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "224": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "305": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MOV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 22,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 250,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 196,
              "time": 2.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_254_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "179": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "180": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "254": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 23,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 182,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 196,
              "time": 3.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_262_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "186": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "187": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "262": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => SUB, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 24,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 269,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 269,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 326,
      "col": 25,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 326,
      "check_col": 25,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.89999997615814E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 131,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 114,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 114,
              "time": 2.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_132_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "88": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "89": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MOV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 25,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 31,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 266,
      "check_col": 31,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 299,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 299,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 98,
              "time": 1.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 112,
              "time": 3.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_317_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ],
          "317": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JMP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 26,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 284,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 296,
              "time": 3.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_123_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(1 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "61": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 1, DivRs2 => 0, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => DIV, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 1, DivRs2 => 0, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 1, DivRs1 => 1, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 27,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 154,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 154,
              "time": 3.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_129_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "80": [
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "81": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 28,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 31,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 258,
      "check_col": 31,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 213,
      "col": 36,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 213,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 194,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 194,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 2.30000004172325E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 201,
      "col": 35,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 201,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 323,
      "col": 52,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 323,
      "check_col": 52,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 148,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 14,
              "time": 3.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 148,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 3.79999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 304,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 304,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 31,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 283,
      "check_col": 31,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 205,
      "col": 36,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 205,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 2.30000004172325E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 167,
              "time": 2.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_114_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "33": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "34": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 29,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 138,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 138,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 256,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 266,
      "col": 40,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 266,
      "check_col": 40,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.70000001788139E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 67,
              "time": 2.00000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 67,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_146_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 30,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 205,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 205,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 2.00000002980232E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 338,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 14,
              "time": 5.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 338,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 5.89999973773956E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 314,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 314,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 276,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 264,
      "col": 37,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 694,
              "time": 3.10000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 696,
              "time": 3.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 264,
      "check_col": 37,
      "tracefile": "machine.adb_264_37_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => 2, 1 => -2, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 1, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "264": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => 2, 1 => -2, others => 0)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 1, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 31,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 293,
      "col": 39,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 293,
      "check_col": 39,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 116,
              "time": 1.70000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 130,
              "time": 3.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_326_25_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ],
          "326": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => JZ, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 32,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 78,
      "col": 33,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.30000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 78,
      "check_col": 33,
      "tracefile": "machine.adb_78_33_machine.adb_128_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "78": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 33,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 49,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 258,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.70000001788139E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 301,
      "col": 26,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 301,
      "check_col": 26,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 291,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 296,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.89999997615814E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 256,
      "col": 46,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 256,
      "check_col": 46,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 50,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 291,
      "check_col": 50,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 180,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.20000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 180,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 2.19999998807907E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 253,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 253,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 312,
      "col": 46,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 312,
      "check_col": 46,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 39,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 283,
      "check_col": 39,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 248,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.70000001788139E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 273,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 273,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 281,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 281,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 122,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 122,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 51,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 682,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 682,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 51,
      "check_col": 29,
      "tracefile": "machine.adb_51_29_machine.adb_119_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "51": [
            {
              "name": "Regs",
              "value": "(1 => 2, others => -2)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(1 => 2, others => -2)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 34,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 60,
      "col": 29,
      "rule": "VC_DIVISION_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 134,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 134,
              "time": 2.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 60,
      "check_col": 29,
      "tracefile": "machine.adb_60_29_machine.adb_122_16_division_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 35,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 258,
      "col": 39,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 258,
      "check_col": 39,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.89999997615814E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 197,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_270_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "193": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "194": [
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "270": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 36,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 113,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 113,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 319,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 319,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 153,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 153,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_126_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "70": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "71": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(0 => 0, others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 37,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 140,
      "col": 28,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 140,
      "check_col": 28,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 33,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 189,
              "time": 1.60000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 189,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 33,
      "check_col": 29,
      "tracefile": "machine.adb_33_29_machine.adb_113_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "33": [
            {
              "name": "Regs",
              "value": "(others => -1073741825)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -1073741825)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -1073741825)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 38,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 128,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 128,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 24,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 168,
              "time": 1.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 168,
              "time": 2.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 24,
      "check_col": 40,
      "tracefile": "machine.adb_24_40_machine.adb_120_16_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "24": [
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            }
          ],
          "51": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "52": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => MUL, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 39,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 192,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 192,
              "time": 2.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 248,
      "check_col": 36,
      "tracefile": "machine.adb_248_36_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1073741825, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "248": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1073741825, others => 0)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => ADD, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 40,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 250,
      "col": 39,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 250,
      "check_col": 39,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 187,
      "col": 35,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 187,
      "check_col": 35,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.89999997615814E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 131,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 131,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 248,
      "col": 46,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 248,
      "check_col": 46,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 296,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 116,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 116,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 68,
      "col": 33,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 149,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 68,
      "check_col": 33,
      "tracefile": "machine.adb_68_33_machine.adb_125_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "68": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => -2147483648)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => LDR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -1, StrRa => 0, StrOffs => -1, StrRb => 0, MovRd => 0, MovOffs => -1, JmpOffs => -1, JzRa => 0, JzOffs => -1))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 41,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 283,
      "col": 53,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 283,
      "check_col": 53,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 261,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 261,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 276,
      "col": 24,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 276,
      "check_col": 24,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 291,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 143,
              "time": 2.00000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 143,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 291,
      "check_col": 36,
      "tracefile": "machine.adb_291_36_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147418114, others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            }
          ],
          "291": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -2147418114, others => 0)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(1 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => -65535, StrRa => 0, StrOffs => -65535, StrRb => 0, MovRd => 0, MovOffs => -65535, JmpOffs => -65535, JzRa => 0, JzOffs => -65535))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 42,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 239,
      "col": 15,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.60000000000000E-01
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 239,
      "check_col": 15,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 1.59999996423721E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 213,
      "col": 36,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.40000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 213,
      "check_col": 36,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.40000000596046E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 104,
      "col": 15,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.30000000000000E-01
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 104,
      "check_col": 15,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 1.29999995231628E-01
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 119,
      "col": 16,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 119,
      "check_col": 16,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "machine.adb",
      "line": 174,
      "col": 44,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 169,
              "time": 2.50000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 183,
              "time": 1.90000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 174,
      "check_col": 44,
      "tracefile": "machine.adb_174_44_machine.adb_297_22_range_check.trace",
      "cntexmp": {
        "machine.adb": {
          "213": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            }
          ],
          "216": [
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "217": [
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "228": [
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "229": [
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "230": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "237": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "238": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "DetectInvalidBehaviour'Result",
              "value": "False",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Mem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewMem",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "NewRegs",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "65536",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "239": [
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ],
          "297": [
            {
              "name": "PC",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "47": [
            {
              "name": "Prog",
              "value": "(65536 => (Op => STR, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 43,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 60,
      "col": 29,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Machine.ExecuteProgram",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 35
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (other)",
              "steps": 289,
              "time": 2.20000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 289,
              "time": 1.70000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 60,
      "check_col": 29,
      "tracefile": "machine.adb_60_29_machine.adb_122_16_overflow_check.trace",
      "cntexmp": {
        "machine.adb": {
          "20": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "60": [
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            }
          ],
          "100": [
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "101": [
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            }
          ],
          "102": [
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "103": [
            {
              "name": "A",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "CycleCount",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Inst",
              "value": "(AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0, others => ?)",
              "kind": "variable"
            },
            {
              "name": "Memory",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "PC",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Regs",
              "value": "(0 => -1, others => 0)",
              "kind": "variable"
            },
            {
              "name": "Result",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Ret",
              "value": "Success",
              "kind": "variable"
            }
          ],
          "104": [
            {
              "name": "Inst",
              "value": "(AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0, others => ?)",
              "kind": "variable"
            }
          ]
        },
        "machine.ads": {
          "35": [
            {
              "name": "Prog",
              "value": "(1 => (Op => DIV, AddRd => 1, AddRs1 => 1, AddRs2 => 1, SubRd => 1, SubRs1 => 1, SubRs2 => 1, MulRd => 1, MulRs1 => 1, MulRs2 => 1, DivRd => 0, DivRs1 => 0, DivRs2 => 1, RetRs => 1, LdrRd => 1, LdrRs => 1, LdrOffs => 0, StrRa => 1, StrOffs => 0, StrRb => 1, MovRd => 1, MovOffs => 0, JmpOffs => 0, JzRa => 1, JzOffs => 0), others => (Op => NOP, AddRd => 0, AddRs1 => 0, AddRs2 => 0, SubRd => 0, SubRs1 => 0, SubRs2 => 0, MulRd => 0, MulRs1 => 0, MulRs2 => 0, DivRd => 0, DivRs1 => 0, DivRs2 => 0, RetRs => 0, LdrRd => 0, LdrRs => 0, LdrOffs => 0, StrRa => 0, StrOffs => 0, StrRb => 0, MovRd => 0, MovOffs => 0, JmpOffs => 0, JzRa => 0, JzOffs => 0))",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 44,
      "how_proved": "prover"
    },
    {
      "file": "machine.adb",
      "line": 296,
      "col": 23,
      "rule": "VC_DISCRIMINANT_CHECK",
      "severity": "info",
      "entity": {
        "name": "Machine.DetectInvalidBehaviour",
        "sloc": [
          {
            "file": "machine.ads",
            "line": 47
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "machine.adb",
      "check_line": 296,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoDiv",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 55
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoMul",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 46
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoDiv",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 197
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Machine",
          "sloc": [
            {
              "file": "machine.ads",
              "line": 4
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoMul",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 190
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoLdr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 204
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoSub",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 183
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoAdd",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 176
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoSub",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 37
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoMov",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 220
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectDoStr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 212
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoMov",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 84
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoAdd",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 28
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoStr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 74
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.IncPC",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 22
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DoLdr",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 64
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Machine.DetectInvalidBehaviour.DetectIncPC",
          "sloc": [
            {
              "file": "machine.adb",
              "line": 172
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "marking": 1.31149997469038E-03,
    "globals (basic)": 1.10879000276327E-02,
    "globals/properties (advanced)": 1.90418995916843E-02,
    "flow analysis": 1.12690597772598E-01,
    "codepeer results": 6.59999977870029E-06,
    "init_why_sections": 2.82499997410923E-04,
    "translation of standard": 3.80060006864369E-03,
    "translation of compilation unit": 6.53747022151947E-02,
    "proof": 1.62621650695801E+01
  }
}
