(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_short_integer__ref =
  { mutable short_short_integer__content "model_trace:" "name:" : short_short_integer }
 
 function short_short_integer__ref___projection 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer__rep
 use        Standard__short_short_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__short_short_integer.short_short_integer) : int =
  (Standard__short_short_integer.short_short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_short_integer.short_short_integer, 
 predicate in_range = Standard__short_short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer =
  < range -32768 32767 >
 
 function first 
   : int =
  ( -32768 )
 
 function last 
   : int =
  32767
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_integer__ref =
  { mutable short_integer__content "model_trace:" "name:" : short_integer }
 
 function short_integer__ref___projection 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer__rep
 use        Standard__short_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__short_integer.short_integer) : int =
  (Standard__short_integer.short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_integer.short_integer, 
 predicate in_range = Standard__short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer__ref =
  { mutable integer__content "model_trace:" "name:" : integer }
 
 function integer__ref___projection 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc 
   (x : integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
 use        Standard__integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer.integer) : int =
  (Standard__integer.integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer.integer, 
 predicate in_range = Standard__integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_integer__ref =
  { mutable long_integer__content "model_trace:" "name:" : long_integer }
 
 function long_integer__ref___projection 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer__rep
 use        Standard__long_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__long_integer.long_integer) : int =
  (Standard__long_integer.long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_integer.long_integer, 
 predicate in_range = Standard__long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_long_integer__ref =
  { mutable long_long_integer__content "model_trace:" "name:" : long_long_integer }
 
 function long_long_integer__ref___projection 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer__rep
 use        Standard__long_long_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__long_long_integer.long_long_integer) : int =
  (Standard__long_long_integer.long_long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_long_integer.long_long_integer, 
 predicate in_range = Standard__long_long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural =
  < range 0 2147483647 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type natural__ref =
  { mutable natural__content "model_trace:" "name:" : natural }
 
 function natural__ref___projection 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc 
   (x : natural__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
 use        Standard__natural
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__natural.natural) : int =
  (Standard__natural.natural'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__natural.natural, 
 predicate in_range = Standard__natural.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive =
  < range 1 2147483647 >
 
 function first 
   : int =
  1
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive__ref =
  { mutable positive__content "model_trace:" "name:" : positive }
 
 function positive__ref___projection 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc 
   (x : positive__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
 use        Standard__positive
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__positive.positive) : int =
  (Standard__positive.positive'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__positive.positive, 
 predicate in_range = Standard__positive.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type short_float 
 
 function first 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range 
   (x : Float32.t)  =
  (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = short_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_float__ref =
  { mutable short_float__content "model_trace:" "name:" : short_float }
 
 function short_float__ref___projection 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float__rep
 use        Standard__short_float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__short_float.short_float, 
 predicate in_range = Standard__short_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type float 
 
 function first 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range 
   (x : Float32.t)  =
  (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type float__ref =
  { mutable float__content "model_trace:" "name:" : float }
 
 function float__ref___projection 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc 
   (x : float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float__rep
 use        Standard__float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__float.float, 
 predicate in_range = Standard__float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type long_float 
 
 function first 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range 
   (x : Float64.t)  =
  (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_float__ref =
  { mutable long_float__content "model_trace:" "name:" : long_float }
 
 function long_float__ref___projection 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float__rep
 use        Standard__long_float
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Standard__long_float.long_float, 
 predicate in_range = Standard__long_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  255
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type character__ref =
  { mutable character__content "model_trace:" "name:" : character }
 
 function character__ref___projection 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc 
   (x : character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
 use        Standard__character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__character.character, 
 predicate in_range = Standard__character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_character__ref =
  { mutable wide_character__content "model_trace:" "name:" : wide_character }
 
 function wide_character__ref___projection 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character__rep
 use        Standard__wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_character.wide_character, 
 predicate in_range = Standard__wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_wide_character__ref =
  { mutable wide_wide_character__content "model_trace:" "name:" : wide_wide_character }
 
 function wide_wide_character__ref___projection 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character__rep
 use        Standard__wide_wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_wide_character.wide_wide_character, 
 predicate in_range = Standard__wide_wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_91   : int.
   (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
    ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_91   : int.
    (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
     ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__character.component_type, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character__rep
 use        Array__Int__Standard__character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__character.component_type, 
 function to_rep = Standard__character__rep.to_rep, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get, 
 function bool_eq = Array__Int__Standard__character.bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__integer__rep

 type component_type =
  Standard__character.character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string 
   (x : Main.__image) : string
 
 function from_string 
   (x : string) : Main.__image
 
 type string__ref =
  { mutable string__content "model_trace:" "name:" : string }
 
 function string__ref___projection 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character
 use        Standard__wide_character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_98   : int.
   (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
    ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_98   : int.
    (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
     ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__wide_character.component_type, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character__rep
 use        Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__wide_character.component_type, 
 function to_rep = Standard__wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_character.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_character

 type component_type =
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref =
  { mutable wide_string__content "model_trace:" "name:" : wide_string }
 
 function wide_string__ref___projection 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character
 use        Standard__wide_wide_character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_105   : int.
   (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
    ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_105   : int.
    (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
     ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_wide_character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_wide_character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character__rep
 use        Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 function to_rep = Standard__wide_wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_wide_character.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_wide_character

 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref =
  { mutable wide_wide_string__content "model_trace:" "name:" : wide_wide_string }
 
 function wide_wide_string__ref___projection 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for fixed-point operation for type at system.ads:1, created in Why.Gen.Scalars.Create_Fixed_Point_Theory_If_Needed *)
module Fixed_Point__1_1000000000
 use import "_gnatprove_standard".Main
 use import "int".Int

 function num_small 
   : int =
  1
 
 function den_small 
   : int =
  1000000000
 
 clone export "ada__model".Fixed_Point_Rep with
 function num_small = num_small, 
 function den_small = den_small

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration 
 
 function num_small 
   : Main.__fixed =
  1
 
 function den_small 
   : Main.__fixed =
  1000000000
 
 function first 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type duration__ref =
  { mutable duration__content "model_trace:" "name:" : duration }
 
 function duration__ref___projection 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref =
  { mutable integer_8__content "model_trace:" "name:" : integer_8 }
 
 function integer_8__ref___projection 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8__rep
 use        Standard__integer_8
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_8.integer_8) : int =
  (Standard__integer_8.integer_8'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_8.integer_8, 
 predicate in_range = Standard__integer_8.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 =
  < range -32768 32767 >
 
 function first 
   : int =
  ( -32768 )
 
 function last 
   : int =
  32767
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref =
  { mutable integer_16__content "model_trace:" "name:" : integer_16 }
 
 function integer_16__ref___projection 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16__rep
 use        Standard__integer_16
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_16.integer_16) : int =
  (Standard__integer_16.integer_16'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_16.integer_16, 
 predicate in_range = Standard__integer_16.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref =
  { mutable integer_32__content "model_trace:" "name:" : integer_32 }
 
 function integer_32__ref___projection 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32__rep
 use        Standard__integer_32
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_32.integer_32) : int =
  (Standard__integer_32.integer_32'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_32.integer_32, 
 predicate in_range = Standard__integer_32.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref =
  { mutable integer_64__content "model_trace:" "name:" : integer_64 }
 
 function integer_64__ref___projection 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64__rep
 use        Standard__integer_64
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_64.integer_64) : int =
  (Standard__integer_64.integer_64'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_64.integer_64, 
 predicate in_range = Standard__integer_64.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type universal_integer__ref =
  { mutable universal_integer__content "model_trace:" "name:" : universal_integer }
 
 function universal_integer__ref___projection 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer__rep
 use        Standard__universal_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__universal_integer.universal_integer) : int =
  (Standard__universal_integer.universal_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__universal_integer.universal_integer, 
 predicate in_range = Standard__universal_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Instruction__opcode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type opcode 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  10
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = opcode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type opcode__ref =
  { mutable opcode__content "model_trace:" "name:" : opcode }
 
 function opcode__ref___projection 
   (a : opcode__ref) : opcode =
  a.opcode__content
 
 meta "model_projection" function opcode__ref___projection
 
 meta "inline : no" function opcode__ref___projection
 
 val opcode__havoc 
   (x : opcode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Instruction__opcode__rep
 use        Instruction__opcode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__opcode.opcode, 
 predicate in_range = Instruction__opcode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "num_regs" defined at instruction.ads:8, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__num_regs
 use import "_gnatprove_standard".Main

 function num_regs #"instruction.ads" 8 0 0#"model" "model_trace:7506" "name:NUM_REGS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TregB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tregB =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tregB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tregB__ref =
  { mutable tregB__content "model_trace:" "name:" : tregB }
 
 function tregB__ref___projection 
   (a : tregB__ref) : tregB =
  a.tregB__content
 
 meta "model_projection" function tregB__ref___projection
 
 meta "inline : no" function tregB__ref___projection
 
 val tregB__havoc 
   (x : tregB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TregB__rep
 use        Instruction__TregB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__TregB.tregB) : int =
  (Instruction__TregB.tregB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__TregB.tregB, 
 predicate in_range = Instruction__TregB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__reg
 use import "_gnatprove_standard".Main
 use import "int".Int

 type reg =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = reg, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type reg__ref =
  { mutable reg__content "model_trace:" "name:" : reg }
 
 function reg__ref___projection 
   (a : reg__ref) : reg =
  a.reg__content
 
 meta "model_projection" function reg__ref___projection
 
 meta "inline : no" function reg__ref___projection
 
 val reg__havoc 
   (x : reg__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__reg__rep
 use        Instruction__reg
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__reg.reg) : int =
  (Instruction__reg.reg'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__reg.reg, 
 predicate in_range = Instruction__reg.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "memory_size" defined at instruction.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"instruction.ads" 15 0 0#"model" "model_trace:7529" "name:MEMORY_SIZE" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TaddrB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type taddrB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = taddrB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type taddrB__ref =
  { mutable taddrB__content "model_trace:" "name:" : taddrB }
 
 function taddrB__ref___projection 
   (a : taddrB__ref) : taddrB =
  a.taddrB__content
 
 meta "model_projection" function taddrB__ref___projection
 
 meta "inline : no" function taddrB__ref___projection
 
 val taddrB__havoc 
   (x : taddrB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TaddrB__rep
 use        Instruction__TaddrB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__TaddrB.taddrB) : int =
  (Instruction__TaddrB.taddrB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__TaddrB.taddrB, 
 predicate in_range = Instruction__TaddrB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__addr
 use import "_gnatprove_standard".Main
 use import "int".Int

 type addr =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = addr, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type addr__ref =
  { mutable addr__content "model_trace:" "name:" : addr }
 
 function addr__ref___projection 
   (a : addr__ref) : addr =
  a.addr__content
 
 meta "model_projection" function addr__ref___projection
 
 meta "inline : no" function addr__ref___projection
 
 val addr__havoc 
   (x : addr__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__addr__rep
 use        Instruction__addr
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__addr.addr) : int =
  (Instruction__addr.addr'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__addr.addr, 
 predicate in_range = Instruction__addr.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__ToffsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type toffsetB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = toffsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type toffsetB__ref =
  { mutable toffsetB__content "model_trace:" "name:" : toffsetB }
 
 function toffsetB__ref___projection 
   (a : toffsetB__ref) : toffsetB =
  a.toffsetB__content
 
 meta "model_projection" function toffsetB__ref___projection
 
 meta "inline : no" function toffsetB__ref___projection
 
 val toffsetB__havoc 
   (x : toffsetB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__ToffsetB__rep
 use        Instruction__ToffsetB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__ToffsetB.toffsetB) : int =
  (Instruction__ToffsetB.toffsetB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__ToffsetB.toffsetB, 
 predicate in_range = Instruction__ToffsetB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type offset =
  < range -65535 65535 >
 
 function first 
   : int =
  ( -65535 )
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type offset__ref =
  { mutable offset__content "model_trace:" "name:" : offset }
 
 function offset__ref___projection 
   (a : offset__ref) : offset =
  a.offset__content
 
 meta "model_projection" function offset__ref___projection
 
 meta "inline : no" function offset__ref___projection
 
 val offset__havoc 
   (x : offset__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__offset__rep
 use        Instruction__offset
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__offset.offset) : int =
  (Instruction__offset.offset'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__offset.offset, 
 predicate in_range = Instruction__offset.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "instr" defined at instruction.ads:25, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg__rep
 use        Instruction__offset
 use        Instruction__offset__rep

 type __split_discrs =
  { rec__instruction__instr__op "model_trace:.7576" "name:Op" : Instruction__opcode.opcode }
 
 function __split_discrs___projection 
   (a : __split_discrs) : Instruction__opcode.opcode =
  a.rec__instruction__instr__op
 
 meta "model_projection" function __split_discrs___projection
 
 meta "inline : no" function __split_discrs___projection
 
 type __split_discrs__ref =
  { mutable __split_discrs__content "model_trace:" "name:" : __split_discrs }
 
 function __split_discrs__ref___projection 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___projection
 
 meta "inline : no" function __split_discrs__ref___projection
 
 val __split_discrs__havoc 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields =
  { rec__instruction__instr__addrd "model_trace:.7597" "name:AddRd" : Instruction__reg.reg; rec__instruction__instr__addrs1 "model_trace:.7607" "name:AddRs1" : Instruction__reg.reg; rec__instruction__instr__addrs2 "model_trace:.7617" "name:AddRs2" : Instruction__reg.reg; rec__instruction__instr__subrd "model_trace:.7631" "name:SubRd" : Instruction__reg.reg; rec__instruction__instr__subrs1 "model_trace:.7641" "name:SubRs1" : Instruction__reg.reg; rec__instruction__instr__subrs2 "model_trace:.7651" "name:SubRs2" : Instruction__reg.reg; rec__instruction__instr__mulrd "model_trace:.7665" "name:MulRd" : Instruction__reg.reg; rec__instruction__instr__mulrs1 "model_trace:.7675" "name:MulRs1" : Instruction__reg.reg; rec__instruction__instr__mulrs2 "model_trace:.7685" "name:MulRs2" : Instruction__reg.reg; rec__instruction__instr__divrd "model_trace:.7699" "name:DivRd" : Instruction__reg.reg; rec__instruction__instr__divrs1 "model_trace:.7709" "name:DivRs1" : Instruction__reg.reg; rec__instruction__instr__divrs2 "model_trace:.7719" "name:DivRs2" : Instruction__reg.reg; rec__instruction__instr__retrs "model_trace:.7733" "name:RetRs" : Instruction__reg.reg; rec__instruction__instr__ldrrd "model_trace:.7747" "name:LdrRd" : Instruction__reg.reg; rec__instruction__instr__ldrrs "model_trace:.7757" "name:LdrRs" : Instruction__reg.reg; rec__instruction__instr__ldroffs "model_trace:.7767" "name:LdrOffs" : Instruction__offset.offset; rec__instruction__instr__strra "model_trace:.7781" "name:StrRa" : Instruction__reg.reg; rec__instruction__instr__stroffs "model_trace:.7791" "name:StrOffs" : Instruction__offset.offset; rec__instruction__instr__strrb "model_trace:.7801" "name:StrRb" : Instruction__reg.reg; rec__instruction__instr__movrd "model_trace:.7815" "name:MovRd" : Instruction__reg.reg; rec__instruction__instr__movoffs "model_trace:.7825" "name:MovOffs" : Instruction__offset.offset; rec__instruction__instr__jmpoffs "model_trace:.7839" "name:JmpOffs" : Instruction__offset.offset; rec__instruction__instr__jzra "model_trace:.7853" "name:JzRa" : Instruction__reg.reg; rec__instruction__instr__jzoffs "model_trace:.7863" "name:JzOffs" : Instruction__offset.offset }
 
 function __split_fields_AddRd__projection "model_trace:.7597" "name:AddRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrd
 
 meta "model_projection" function __split_fields_AddRd__projection
 
 meta "inline : no" function __split_fields_AddRd__projection
 
 function __split_fields_AddRs1__projection "model_trace:.7607" "name:AddRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrs1
 
 meta "model_projection" function __split_fields_AddRs1__projection
 
 meta "inline : no" function __split_fields_AddRs1__projection
 
 function __split_fields_AddRs2__projection "model_trace:.7617" "name:AddRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrs2
 
 meta "model_projection" function __split_fields_AddRs2__projection
 
 meta "inline : no" function __split_fields_AddRs2__projection
 
 function __split_fields_SubRd__projection "model_trace:.7631" "name:SubRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrd
 
 meta "model_projection" function __split_fields_SubRd__projection
 
 meta "inline : no" function __split_fields_SubRd__projection
 
 function __split_fields_SubRs1__projection "model_trace:.7641" "name:SubRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrs1
 
 meta "model_projection" function __split_fields_SubRs1__projection
 
 meta "inline : no" function __split_fields_SubRs1__projection
 
 function __split_fields_SubRs2__projection "model_trace:.7651" "name:SubRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrs2
 
 meta "model_projection" function __split_fields_SubRs2__projection
 
 meta "inline : no" function __split_fields_SubRs2__projection
 
 function __split_fields_MulRd__projection "model_trace:.7665" "name:MulRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrd
 
 meta "model_projection" function __split_fields_MulRd__projection
 
 meta "inline : no" function __split_fields_MulRd__projection
 
 function __split_fields_MulRs1__projection "model_trace:.7675" "name:MulRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrs1
 
 meta "model_projection" function __split_fields_MulRs1__projection
 
 meta "inline : no" function __split_fields_MulRs1__projection
 
 function __split_fields_MulRs2__projection "model_trace:.7685" "name:MulRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrs2
 
 meta "model_projection" function __split_fields_MulRs2__projection
 
 meta "inline : no" function __split_fields_MulRs2__projection
 
 function __split_fields_DivRd__projection "model_trace:.7699" "name:DivRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrd
 
 meta "model_projection" function __split_fields_DivRd__projection
 
 meta "inline : no" function __split_fields_DivRd__projection
 
 function __split_fields_DivRs1__projection "model_trace:.7709" "name:DivRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrs1
 
 meta "model_projection" function __split_fields_DivRs1__projection
 
 meta "inline : no" function __split_fields_DivRs1__projection
 
 function __split_fields_DivRs2__projection "model_trace:.7719" "name:DivRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrs2
 
 meta "model_projection" function __split_fields_DivRs2__projection
 
 meta "inline : no" function __split_fields_DivRs2__projection
 
 function __split_fields_RetRs__projection "model_trace:.7733" "name:RetRs" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__retrs
 
 meta "model_projection" function __split_fields_RetRs__projection
 
 meta "inline : no" function __split_fields_RetRs__projection
 
 function __split_fields_LdrRd__projection "model_trace:.7747" "name:LdrRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__ldrrd
 
 meta "model_projection" function __split_fields_LdrRd__projection
 
 meta "inline : no" function __split_fields_LdrRd__projection
 
 function __split_fields_LdrRs__projection "model_trace:.7757" "name:LdrRs" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__ldrrs
 
 meta "model_projection" function __split_fields_LdrRs__projection
 
 meta "inline : no" function __split_fields_LdrRs__projection
 
 function __split_fields_LdrOffs__projection "model_trace:.7767" "name:LdrOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__ldroffs
 
 meta "model_projection" function __split_fields_LdrOffs__projection
 
 meta "inline : no" function __split_fields_LdrOffs__projection
 
 function __split_fields_StrRa__projection "model_trace:.7781" "name:StrRa" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__strra
 
 meta "model_projection" function __split_fields_StrRa__projection
 
 meta "inline : no" function __split_fields_StrRa__projection
 
 function __split_fields_StrOffs__projection "model_trace:.7791" "name:StrOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__stroffs
 
 meta "model_projection" function __split_fields_StrOffs__projection
 
 meta "inline : no" function __split_fields_StrOffs__projection
 
 function __split_fields_StrRb__projection "model_trace:.7801" "name:StrRb" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__strrb
 
 meta "model_projection" function __split_fields_StrRb__projection
 
 meta "inline : no" function __split_fields_StrRb__projection
 
 function __split_fields_MovRd__projection "model_trace:.7815" "name:MovRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__movrd
 
 meta "model_projection" function __split_fields_MovRd__projection
 
 meta "inline : no" function __split_fields_MovRd__projection
 
 function __split_fields_MovOffs__projection "model_trace:.7825" "name:MovOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__movoffs
 
 meta "model_projection" function __split_fields_MovOffs__projection
 
 meta "inline : no" function __split_fields_MovOffs__projection
 
 function __split_fields_JmpOffs__projection "model_trace:.7839" "name:JmpOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__jmpoffs
 
 meta "model_projection" function __split_fields_JmpOffs__projection
 
 meta "inline : no" function __split_fields_JmpOffs__projection
 
 function __split_fields_JzRa__projection "model_trace:.7853" "name:JzRa" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__jzra
 
 meta "model_projection" function __split_fields_JzRa__projection
 
 meta "inline : no" function __split_fields_JzRa__projection
 
 function __split_fields_JzOffs__projection "model_trace:.7863" "name:JzOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__jzoffs
 
 meta "model_projection" function __split_fields_JzOffs__projection
 
 meta "inline : no" function __split_fields_JzOffs__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content "model_trace:" "name:" : __split_fields }
 
 function __split_fields__ref___projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_discrs "model_trace:" "name:" : __split_discrs; __split_fields "model_trace:" "name:" : __split_fields; attr__constrained "model_trace:" "name:" : bool }
 
 function __rep___projection 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep___projection
 
 meta "inline : no" function __rep___projection
 
 function __rep___2__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___2__projection
 
 meta "inline : no" function __rep___2__projection
 
 function __rep___3__projection 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep___3__projection
 
 meta "inline : no" function __rep___3__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 
 function of_base 
   (a : __rep) : __rep =
  a
 
 val rec__instruction__instr__op_ 
   (a : __rep) : Instruction__opcode.opcode
  requires {  true }
  ensures {  (result = a.__split_discrs.rec__instruction__instr__op) }
 
 predicate instruction__instr__addrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrd) }
 
 predicate instruction__instr__addrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrs1) }
 
 predicate instruction__instr__addrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrs2) }
 
 predicate instruction__instr__subrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrd) }
 
 predicate instruction__instr__subrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrs1) }
 
 predicate instruction__instr__subrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrs2) }
 
 predicate instruction__instr__mulrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrd) }
 
 predicate instruction__instr__mulrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrs1) }
 
 predicate instruction__instr__mulrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrs2) }
 
 predicate instruction__instr__divrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrd) }
 
 predicate instruction__instr__divrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrs1) }
 
 predicate instruction__instr__divrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrs2) }
 
 predicate instruction__instr__retrs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 5)
 
 val rec__instruction__instr__retrs_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__retrs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__retrs) }
 
 predicate instruction__instr__ldrrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldrrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__ldrrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldrrd) }
 
 predicate instruction__instr__ldrrs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldrrs_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__ldrrs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldrrs) }
 
 predicate instruction__instr__ldroffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldroffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__ldroffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldroffs) }
 
 predicate instruction__instr__strra__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__strra_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__strra__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__strra) }
 
 predicate instruction__instr__stroffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__stroffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__stroffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__stroffs) }
 
 predicate instruction__instr__strrb__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__strrb_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__strrb__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__strrb) }
 
 predicate instruction__instr__movrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 8)
 
 val rec__instruction__instr__movrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__movrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__movrd) }
 
 predicate instruction__instr__movoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 8)
 
 val rec__instruction__instr__movoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__movoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__movoffs) }
 
 predicate instruction__instr__jmpoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 9)
 
 val rec__instruction__instr__jmpoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__jmpoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jmpoffs) }
 
 predicate instruction__instr__jzra__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 10)
 
 val rec__instruction__instr__jzra_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__jzra__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jzra) }
 
 predicate instruction__instr__jzoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 10)
 
 val rec__instruction__instr__jzoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__jzoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jzoffs) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = (Instruction__opcode__rep.to_rep b.__split_discrs.rec__instruction__instr__op)) /\ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (instruction__instr__addrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrd)) ) /\ ( (instruction__instr__addrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrs1)) ) ) /\ ( (instruction__instr__addrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrs2)) ) ) /\ ( (instruction__instr__subrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrd)) ) ) /\ ( (instruction__instr__subrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrs1)) ) ) /\ ( (instruction__instr__subrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrs2)) ) ) /\ ( (instruction__instr__mulrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrd)) ) ) /\ ( (instruction__instr__mulrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrs1)) ) ) /\ ( (instruction__instr__mulrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrs2)) ) ) /\ ( (instruction__instr__divrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrd)) ) ) /\ ( (instruction__instr__divrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrs1)) ) ) /\ ( (instruction__instr__divrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrs2)) ) ) /\ ( (instruction__instr__retrs__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__retrs) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__retrs)) ) ) /\ ( (instruction__instr__ldrrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__ldrrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__ldrrd)) ) ) /\ ( (instruction__instr__ldrrs__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__ldrrs) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__ldrrs)) ) ) /\ ( (instruction__instr__ldroffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__ldroffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__ldroffs)) ) ) /\ ( (instruction__instr__strra__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__strra) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__strra)) ) ) /\ ( (instruction__instr__stroffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__stroffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__stroffs)) ) ) /\ ( (instruction__instr__strrb__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__strrb) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__strrb)) ) ) /\ ( (instruction__instr__movrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__movrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__movrd)) ) ) /\ ( (instruction__instr__movoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__movoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__movoffs)) ) ) /\ ( (instruction__instr__jmpoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__jmpoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__jmpoffs)) ) ) /\ ( (instruction__instr__jzra__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__jzra) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__jzra)) ) ) /\ ( (instruction__instr__jzoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__jzoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__jzoffs)) ) ) )) then (
   True) else (
   False))

end

(* Module for axiomatizing type "instr" defined at instruction.ads:25, created in Gnat2Why.Types.Translate_Type *)
module Instruction__instr
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type instr =
  __rep
 
 function value__size 
   : int
 
 function object__size 
   (a : instr) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : instr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : instr.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : instr.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : instr) (b : instr) : bool
 
 function dummy 
   : instr
 
 type instr__ref =
  { mutable instr__content "model_trace:" "name:" : instr }
 
 function instr__ref___projection 
   (a : instr__ref) : instr =
  a.instr__content
 
 meta "model_projection" function instr__ref___projection
 
 meta "inline : no" function instr__ref___projection
 
 val instr__havoc 
   (x : instr__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at instruction.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__debugprintinstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"instruction.ads" 78 0 0#"model_projected" "name:Inst" "model_trace:7922" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at instruction.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Instruction__debugprintinstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"debug.ads" 4 0 0#"model_projected" "model_trace:7964" "name:Item" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:8, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"debug.ads" 8 0 0#"model_projected" "name:Item" "model_trace:7987" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put_line__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:12, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__2__item
 use import "_gnatprove_standard".Main

 function item #"debug.ads" 12 0 0#"model" "name:Item" "model_trace:8010" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:12, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__3__item
 use import "_gnatprove_standard".Main

 function item #"debug.ads" 20 0 0#"model" "name:Item" "model_trace:8047" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nul" defined at a-chlat1.ads:25, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nul
 use import "_gnatprove_standard".Main

 function nul #"a-chlat1.ads" 25 0 0#"model" "model_trace:8128" "name:NUL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "soh" defined at a-chlat1.ads:26, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__soh
 use import "_gnatprove_standard".Main

 function soh #"a-chlat1.ads" 26 0 0#"model" "model_trace:8141" "name:SOH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "stx" defined at a-chlat1.ads:27, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__stx
 use import "_gnatprove_standard".Main

 function stx #"a-chlat1.ads" 27 0 0#"model" "model_trace:8154" "name:STX" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "etx" defined at a-chlat1.ads:28, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__etx
 use import "_gnatprove_standard".Main

 function etx #"a-chlat1.ads" 28 0 0#"model" "model_trace:8167" "name:ETX" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "eot" defined at a-chlat1.ads:29, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__eot
 use import "_gnatprove_standard".Main

 function eot #"a-chlat1.ads" 29 0 0#"model" "model_trace:8180" "name:EOT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "enq" defined at a-chlat1.ads:30, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__enq
 use import "_gnatprove_standard".Main

 function enq #"a-chlat1.ads" 30 0 0#"model" "model_trace:8193" "name:ENQ" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ack" defined at a-chlat1.ads:31, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ack
 use import "_gnatprove_standard".Main

 function ack #"a-chlat1.ads" 31 0 0#"model" "model_trace:8206" "name:ACK" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bel" defined at a-chlat1.ads:32, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bel
 use import "_gnatprove_standard".Main

 function bel #"a-chlat1.ads" 32 0 0#"model" "model_trace:8219" "name:BEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bs" defined at a-chlat1.ads:33, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bs
 use import "_gnatprove_standard".Main

 function bs #"a-chlat1.ads" 33 0 0#"model" "model_trace:8232" "name:BS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ht" defined at a-chlat1.ads:34, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ht
 use import "_gnatprove_standard".Main

 function ht #"a-chlat1.ads" 34 0 0#"model" "model_trace:8245" "name:HT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lf" defined at a-chlat1.ads:35, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lf
 use import "_gnatprove_standard".Main

 function lf #"a-chlat1.ads" 35 0 0#"model" "model_trace:8258" "name:LF" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vt" defined at a-chlat1.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vt
 use import "_gnatprove_standard".Main

 function vt #"a-chlat1.ads" 36 0 0#"model" "model_trace:8271" "name:VT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ff" defined at a-chlat1.ads:37, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ff
 use import "_gnatprove_standard".Main

 function ff #"a-chlat1.ads" 37 0 0#"model" "model_trace:8284" "name:FF" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cr" defined at a-chlat1.ads:38, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cr
 use import "_gnatprove_standard".Main

 function cr #"a-chlat1.ads" 38 0 0#"model" "model_trace:8297" "name:CR" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "so" defined at a-chlat1.ads:39, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__so
 use import "_gnatprove_standard".Main

 function so__ #"a-chlat1.ads" 39 0 0#"model" "model_trace:8310" "name:SO" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "si" defined at a-chlat1.ads:40, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__si
 use import "_gnatprove_standard".Main

 function si #"a-chlat1.ads" 40 0 0#"model" "model_trace:8323" "name:SI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dle" defined at a-chlat1.ads:42, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dle
 use import "_gnatprove_standard".Main

 function dle #"a-chlat1.ads" 42 0 0#"model" "model_trace:8336" "name:DLE" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc1" defined at a-chlat1.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc1
 use import "_gnatprove_standard".Main

 function dc1 #"a-chlat1.ads" 43 0 0#"model" "model_trace:8349" "name:DC1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc2" defined at a-chlat1.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc2
 use import "_gnatprove_standard".Main

 function dc2 #"a-chlat1.ads" 44 0 0#"model" "model_trace:8362" "name:DC2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc3" defined at a-chlat1.ads:45, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc3
 use import "_gnatprove_standard".Main

 function dc3 #"a-chlat1.ads" 45 0 0#"model" "model_trace:8375" "name:DC3" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc4" defined at a-chlat1.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc4
 use import "_gnatprove_standard".Main

 function dc4 #"a-chlat1.ads" 46 0 0#"model" "model_trace:8388" "name:DC4" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nak" defined at a-chlat1.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nak
 use import "_gnatprove_standard".Main

 function nak #"a-chlat1.ads" 47 0 0#"model" "model_trace:8401" "name:NAK" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "syn" defined at a-chlat1.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__syn
 use import "_gnatprove_standard".Main

 function syn #"a-chlat1.ads" 48 0 0#"model" "model_trace:8414" "name:SYN" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "etb" defined at a-chlat1.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__etb
 use import "_gnatprove_standard".Main

 function etb #"a-chlat1.ads" 49 0 0#"model" "model_trace:8427" "name:ETB" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "can" defined at a-chlat1.ads:50, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__can
 use import "_gnatprove_standard".Main

 function can #"a-chlat1.ads" 50 0 0#"model" "model_trace:8440" "name:CAN" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "em" defined at a-chlat1.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__em
 use import "_gnatprove_standard".Main

 function em #"a-chlat1.ads" 51 0 0#"model" "model_trace:8453" "name:EM" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sub" defined at a-chlat1.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sub
 use import "_gnatprove_standard".Main

 function sub #"a-chlat1.ads" 52 0 0#"model" "model_trace:8466" "name:SUB" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "esc" defined at a-chlat1.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__esc
 use import "_gnatprove_standard".Main

 function esc #"a-chlat1.ads" 53 0 0#"model" "model_trace:8479" "name:ESC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fs" defined at a-chlat1.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fs
 use import "_gnatprove_standard".Main

 function fs #"a-chlat1.ads" 54 0 0#"model" "model_trace:8492" "name:FS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "gs" defined at a-chlat1.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__gs
 use import "_gnatprove_standard".Main

 function gs #"a-chlat1.ads" 55 0 0#"model" "model_trace:8505" "name:GS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "rs" defined at a-chlat1.ads:56, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__rs
 use import "_gnatprove_standard".Main

 function rs #"a-chlat1.ads" 56 0 0#"model" "model_trace:8518" "name:RS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "us" defined at a-chlat1.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__us
 use import "_gnatprove_standard".Main

 function us #"a-chlat1.ads" 57 0 0#"model" "model_trace:8531" "name:US" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "space" defined at a-chlat1.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__space
 use import "_gnatprove_standard".Main

 function space #"a-chlat1.ads" 63 0 0#"model" "model_trace:8544" "name:Space" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "exclamation" defined at a-chlat1.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__exclamation
 use import "_gnatprove_standard".Main

 function exclamation #"a-chlat1.ads" 64 0 0#"model" "model_trace:8554" "name:Exclamation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "quotation" defined at a-chlat1.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__quotation
 use import "_gnatprove_standard".Main

 function quotation #"a-chlat1.ads" 65 0 0#"model" "model_trace:8564" "name:Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "number_sign" defined at a-chlat1.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__number_sign
 use import "_gnatprove_standard".Main

 function number_sign #"a-chlat1.ads" 66 0 0#"model" "model_trace:8574" "name:Number_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dollar_sign" defined at a-chlat1.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dollar_sign
 use import "_gnatprove_standard".Main

 function dollar_sign #"a-chlat1.ads" 67 0 0#"model" "model_trace:8584" "name:Dollar_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "percent_sign" defined at a-chlat1.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__percent_sign
 use import "_gnatprove_standard".Main

 function percent_sign #"a-chlat1.ads" 68 0 0#"model" "model_trace:8594" "name:Percent_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ampersand" defined at a-chlat1.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ampersand
 use import "_gnatprove_standard".Main

 function ampersand #"a-chlat1.ads" 69 0 0#"model" "model_trace:8604" "name:Ampersand" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "apostrophe" defined at a-chlat1.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__apostrophe
 use import "_gnatprove_standard".Main

 function apostrophe #"a-chlat1.ads" 70 0 0#"model" "model_trace:8614" "name:Apostrophe" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_parenthesis" defined at a-chlat1.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_parenthesis
 use import "_gnatprove_standard".Main

 function left_parenthesis #"a-chlat1.ads" 71 0 0#"model" "model_trace:8624" "name:Left_Parenthesis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_parenthesis" defined at a-chlat1.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_parenthesis
 use import "_gnatprove_standard".Main

 function right_parenthesis #"a-chlat1.ads" 72 0 0#"model" "model_trace:8634" "name:Right_Parenthesis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "asterisk" defined at a-chlat1.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__asterisk
 use import "_gnatprove_standard".Main

 function asterisk #"a-chlat1.ads" 73 0 0#"model" "model_trace:8644" "name:Asterisk" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plus_sign" defined at a-chlat1.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plus_sign
 use import "_gnatprove_standard".Main

 function plus_sign #"a-chlat1.ads" 74 0 0#"model" "model_trace:8654" "name:Plus_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "comma" defined at a-chlat1.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__comma
 use import "_gnatprove_standard".Main

 function comma #"a-chlat1.ads" 75 0 0#"model" "model_trace:8664" "name:Comma" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "hyphen" defined at a-chlat1.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__hyphen
 use import "_gnatprove_standard".Main

 function hyphen #"a-chlat1.ads" 76 0 0#"model" "model_trace:8674" "name:Hyphen" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "full_stop" defined at a-chlat1.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__full_stop
 use import "_gnatprove_standard".Main

 function full_stop #"a-chlat1.ads" 78 0 0#"model" "model_trace:8694" "name:Full_Stop" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "solidus" defined at a-chlat1.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__solidus
 use import "_gnatprove_standard".Main

 function solidus #"a-chlat1.ads" 79 0 0#"model" "model_trace:8704" "name:Solidus" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "colon" defined at a-chlat1.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__colon
 use import "_gnatprove_standard".Main

 function colon #"a-chlat1.ads" 83 0 0#"model" "model_trace:8714" "name:Colon" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "semicolon" defined at a-chlat1.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__semicolon
 use import "_gnatprove_standard".Main

 function semicolon #"a-chlat1.ads" 84 0 0#"model" "model_trace:8724" "name:Semicolon" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "less_than_sign" defined at a-chlat1.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__less_than_sign
 use import "_gnatprove_standard".Main

 function less_than_sign #"a-chlat1.ads" 85 0 0#"model" "model_trace:8734" "name:Less_Than_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "equals_sign" defined at a-chlat1.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__equals_sign
 use import "_gnatprove_standard".Main

 function equals_sign #"a-chlat1.ads" 86 0 0#"model" "model_trace:8744" "name:Equals_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "greater_than_sign" defined at a-chlat1.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__greater_than_sign
 use import "_gnatprove_standard".Main

 function greater_than_sign #"a-chlat1.ads" 87 0 0#"model" "model_trace:8754" "name:Greater_Than_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "question" defined at a-chlat1.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__question
 use import "_gnatprove_standard".Main

 function question #"a-chlat1.ads" 88 0 0#"model" "model_trace:8764" "name:Question" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "commercial_at" defined at a-chlat1.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__commercial_at
 use import "_gnatprove_standard".Main

 function commercial_at #"a-chlat1.ads" 89 0 0#"model" "model_trace:8774" "name:Commercial_At" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_square_bracket" defined at a-chlat1.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_square_bracket
 use import "_gnatprove_standard".Main

 function left_square_bracket #"a-chlat1.ads" 93 0 0#"model" "model_trace:8784" "name:Left_Square_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reverse_solidus" defined at a-chlat1.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reverse_solidus
 use import "_gnatprove_standard".Main

 function reverse_solidus #"a-chlat1.ads" 94 0 0#"model" "model_trace:8794" "name:Reverse_Solidus" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_square_bracket" defined at a-chlat1.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_square_bracket
 use import "_gnatprove_standard".Main

 function right_square_bracket #"a-chlat1.ads" 95 0 0#"model" "model_trace:8804" "name:Right_Square_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "circumflex" defined at a-chlat1.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__circumflex
 use import "_gnatprove_standard".Main

 function circumflex #"a-chlat1.ads" 96 0 0#"model" "model_trace:8814" "name:Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "low_line" defined at a-chlat1.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__low_line
 use import "_gnatprove_standard".Main

 function low_line #"a-chlat1.ads" 97 0 0#"model" "model_trace:8824" "name:Low_Line" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "grave" defined at a-chlat1.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__grave
 use import "_gnatprove_standard".Main

 function grave #"a-chlat1.ads" 99 0 0#"model" "model_trace:8834" "name:Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a" defined at a-chlat1.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a
 use import "_gnatprove_standard".Main

 function lc_a #"a-chlat1.ads" 100 0 0#"model" "model_trace:8844" "name:LC_A" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_b" defined at a-chlat1.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_b
 use import "_gnatprove_standard".Main

 function lc_b #"a-chlat1.ads" 101 0 0#"model" "model_trace:8854" "name:LC_B" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_c" defined at a-chlat1.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_c
 use import "_gnatprove_standard".Main

 function lc_c #"a-chlat1.ads" 102 0 0#"model" "model_trace:8864" "name:LC_C" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_d" defined at a-chlat1.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_d
 use import "_gnatprove_standard".Main

 function lc_d #"a-chlat1.ads" 103 0 0#"model" "model_trace:8874" "name:LC_D" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e" defined at a-chlat1.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e
 use import "_gnatprove_standard".Main

 function lc_e #"a-chlat1.ads" 104 0 0#"model" "model_trace:8884" "name:LC_E" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_f" defined at a-chlat1.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_f
 use import "_gnatprove_standard".Main

 function lc_f #"a-chlat1.ads" 105 0 0#"model" "model_trace:8894" "name:LC_F" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_g" defined at a-chlat1.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_g
 use import "_gnatprove_standard".Main

 function lc_g #"a-chlat1.ads" 106 0 0#"model" "model_trace:8904" "name:LC_G" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_h" defined at a-chlat1.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_h
 use import "_gnatprove_standard".Main

 function lc_h #"a-chlat1.ads" 107 0 0#"model" "model_trace:8914" "name:LC_H" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i" defined at a-chlat1.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i
 use import "_gnatprove_standard".Main

 function lc_i #"a-chlat1.ads" 108 0 0#"model" "model_trace:8924" "name:LC_I" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_j" defined at a-chlat1.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_j
 use import "_gnatprove_standard".Main

 function lc_j #"a-chlat1.ads" 109 0 0#"model" "model_trace:8934" "name:LC_J" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_k" defined at a-chlat1.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_k
 use import "_gnatprove_standard".Main

 function lc_k #"a-chlat1.ads" 110 0 0#"model" "model_trace:8944" "name:LC_K" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_l" defined at a-chlat1.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_l
 use import "_gnatprove_standard".Main

 function lc_l #"a-chlat1.ads" 111 0 0#"model" "model_trace:8954" "name:LC_L" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_m" defined at a-chlat1.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_m
 use import "_gnatprove_standard".Main

 function lc_m #"a-chlat1.ads" 112 0 0#"model" "model_trace:8964" "name:LC_M" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_n" defined at a-chlat1.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_n
 use import "_gnatprove_standard".Main

 function lc_n #"a-chlat1.ads" 113 0 0#"model" "model_trace:8974" "name:LC_N" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o" defined at a-chlat1.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o
 use import "_gnatprove_standard".Main

 function lc_o #"a-chlat1.ads" 114 0 0#"model" "model_trace:8984" "name:LC_O" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_p" defined at a-chlat1.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_p
 use import "_gnatprove_standard".Main

 function lc_p #"a-chlat1.ads" 115 0 0#"model" "model_trace:8994" "name:LC_P" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_q" defined at a-chlat1.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_q
 use import "_gnatprove_standard".Main

 function lc_q #"a-chlat1.ads" 116 0 0#"model" "model_trace:9004" "name:LC_Q" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_r" defined at a-chlat1.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_r
 use import "_gnatprove_standard".Main

 function lc_r #"a-chlat1.ads" 117 0 0#"model" "model_trace:9014" "name:LC_R" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_s" defined at a-chlat1.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_s
 use import "_gnatprove_standard".Main

 function lc_s #"a-chlat1.ads" 118 0 0#"model" "model_trace:9024" "name:LC_S" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_t" defined at a-chlat1.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_t
 use import "_gnatprove_standard".Main

 function lc_t #"a-chlat1.ads" 119 0 0#"model" "model_trace:9034" "name:LC_T" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u" defined at a-chlat1.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u
 use import "_gnatprove_standard".Main

 function lc_u #"a-chlat1.ads" 120 0 0#"model" "model_trace:9044" "name:LC_U" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_v" defined at a-chlat1.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_v
 use import "_gnatprove_standard".Main

 function lc_v #"a-chlat1.ads" 121 0 0#"model" "model_trace:9054" "name:LC_V" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_w" defined at a-chlat1.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_w
 use import "_gnatprove_standard".Main

 function lc_w #"a-chlat1.ads" 122 0 0#"model" "model_trace:9064" "name:LC_W" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_x" defined at a-chlat1.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_x
 use import "_gnatprove_standard".Main

 function lc_x #"a-chlat1.ads" 123 0 0#"model" "model_trace:9074" "name:LC_X" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y" defined at a-chlat1.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y
 use import "_gnatprove_standard".Main

 function lc_y #"a-chlat1.ads" 124 0 0#"model" "model_trace:9084" "name:LC_Y" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_z" defined at a-chlat1.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_z
 use import "_gnatprove_standard".Main

 function lc_z #"a-chlat1.ads" 125 0 0#"model" "model_trace:9094" "name:LC_Z" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_curly_bracket" defined at a-chlat1.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_curly_bracket
 use import "_gnatprove_standard".Main

 function left_curly_bracket #"a-chlat1.ads" 126 0 0#"model" "model_trace:9104" "name:Left_Curly_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vertical_line" defined at a-chlat1.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vertical_line
 use import "_gnatprove_standard".Main

 function vertical_line #"a-chlat1.ads" 127 0 0#"model" "model_trace:9114" "name:Vertical_Line" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_curly_bracket" defined at a-chlat1.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_curly_bracket
 use import "_gnatprove_standard".Main

 function right_curly_bracket #"a-chlat1.ads" 128 0 0#"model" "model_trace:9124" "name:Right_Curly_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "tilde" defined at a-chlat1.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__tilde
 use import "_gnatprove_standard".Main

 function tilde #"a-chlat1.ads" 129 0 0#"model" "model_trace:9134" "name:Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "del" defined at a-chlat1.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__del
 use import "_gnatprove_standard".Main

 function del #"a-chlat1.ads" 130 0 0#"model" "model_trace:9144" "name:DEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_128" defined at a-chlat1.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_128
 use import "_gnatprove_standard".Main

 function reserved_128 #"a-chlat1.ads" 141 0 0#"model" "model_trace:9197" "name:Reserved_128" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_129" defined at a-chlat1.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_129
 use import "_gnatprove_standard".Main

 function reserved_129 #"a-chlat1.ads" 142 0 0#"model" "model_trace:9210" "name:Reserved_129" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bph" defined at a-chlat1.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bph
 use import "_gnatprove_standard".Main

 function bph #"a-chlat1.ads" 143 0 0#"model" "model_trace:9223" "name:BPH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nbh" defined at a-chlat1.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nbh
 use import "_gnatprove_standard".Main

 function nbh #"a-chlat1.ads" 144 0 0#"model" "model_trace:9236" "name:NBH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_132" defined at a-chlat1.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_132
 use import "_gnatprove_standard".Main

 function reserved_132 #"a-chlat1.ads" 145 0 0#"model" "model_trace:9249" "name:Reserved_132" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nel" defined at a-chlat1.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nel
 use import "_gnatprove_standard".Main

 function nel #"a-chlat1.ads" 146 0 0#"model" "model_trace:9262" "name:NEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ssa" defined at a-chlat1.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ssa
 use import "_gnatprove_standard".Main

 function ssa #"a-chlat1.ads" 147 0 0#"model" "model_trace:9275" "name:SSA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "esa" defined at a-chlat1.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__esa
 use import "_gnatprove_standard".Main

 function esa #"a-chlat1.ads" 148 0 0#"model" "model_trace:9288" "name:ESA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "hts" defined at a-chlat1.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__hts
 use import "_gnatprove_standard".Main

 function hts #"a-chlat1.ads" 149 0 0#"model" "model_trace:9301" "name:HTS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "htj" defined at a-chlat1.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__htj
 use import "_gnatprove_standard".Main

 function htj #"a-chlat1.ads" 150 0 0#"model" "model_trace:9314" "name:HTJ" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vts" defined at a-chlat1.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vts
 use import "_gnatprove_standard".Main

 function vts #"a-chlat1.ads" 151 0 0#"model" "model_trace:9327" "name:VTS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pld" defined at a-chlat1.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pld
 use import "_gnatprove_standard".Main

 function pld #"a-chlat1.ads" 152 0 0#"model" "model_trace:9340" "name:PLD" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plu" defined at a-chlat1.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plu
 use import "_gnatprove_standard".Main

 function plu #"a-chlat1.ads" 153 0 0#"model" "model_trace:9353" "name:PLU" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ri" defined at a-chlat1.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ri
 use import "_gnatprove_standard".Main

 function ri #"a-chlat1.ads" 154 0 0#"model" "model_trace:9366" "name:RI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ss2" defined at a-chlat1.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ss2
 use import "_gnatprove_standard".Main

 function ss2 #"a-chlat1.ads" 155 0 0#"model" "model_trace:9379" "name:SS2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ss3" defined at a-chlat1.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ss3
 use import "_gnatprove_standard".Main

 function ss3 #"a-chlat1.ads" 156 0 0#"model" "model_trace:9392" "name:SS3" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dcs" defined at a-chlat1.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dcs
 use import "_gnatprove_standard".Main

 function dcs #"a-chlat1.ads" 158 0 0#"model" "model_trace:9405" "name:DCS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pu1" defined at a-chlat1.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pu1
 use import "_gnatprove_standard".Main

 function pu1 #"a-chlat1.ads" 159 0 0#"model" "model_trace:9418" "name:PU1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pu2" defined at a-chlat1.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pu2
 use import "_gnatprove_standard".Main

 function pu2 #"a-chlat1.ads" 160 0 0#"model" "model_trace:9431" "name:PU2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sts" defined at a-chlat1.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sts
 use import "_gnatprove_standard".Main

 function sts #"a-chlat1.ads" 161 0 0#"model" "model_trace:9444" "name:STS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cch" defined at a-chlat1.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cch
 use import "_gnatprove_standard".Main

 function cch #"a-chlat1.ads" 162 0 0#"model" "model_trace:9457" "name:CCH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "mw" defined at a-chlat1.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__mw
 use import "_gnatprove_standard".Main

 function mw #"a-chlat1.ads" 163 0 0#"model" "model_trace:9470" "name:MW" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "spa" defined at a-chlat1.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__spa
 use import "_gnatprove_standard".Main

 function spa #"a-chlat1.ads" 164 0 0#"model" "model_trace:9483" "name:SPA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "epa" defined at a-chlat1.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__epa
 use import "_gnatprove_standard".Main

 function epa #"a-chlat1.ads" 165 0 0#"model" "model_trace:9496" "name:EPA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sos" defined at a-chlat1.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sos
 use import "_gnatprove_standard".Main

 function sos #"a-chlat1.ads" 167 0 0#"model" "model_trace:9509" "name:SOS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_153" defined at a-chlat1.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_153
 use import "_gnatprove_standard".Main

 function reserved_153 #"a-chlat1.ads" 168 0 0#"model" "model_trace:9522" "name:Reserved_153" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sci" defined at a-chlat1.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sci
 use import "_gnatprove_standard".Main

 function sci #"a-chlat1.ads" 169 0 0#"model" "model_trace:9535" "name:SCI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "csi" defined at a-chlat1.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__csi
 use import "_gnatprove_standard".Main

 function csi #"a-chlat1.ads" 170 0 0#"model" "model_trace:9548" "name:CSI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "st" defined at a-chlat1.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__st
 use import "_gnatprove_standard".Main

 function st #"a-chlat1.ads" 171 0 0#"model" "model_trace:9561" "name:ST" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "osc" defined at a-chlat1.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__osc
 use import "_gnatprove_standard".Main

 function osc #"a-chlat1.ads" 172 0 0#"model" "model_trace:9574" "name:OSC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pm" defined at a-chlat1.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pm
 use import "_gnatprove_standard".Main

 function pm #"a-chlat1.ads" 173 0 0#"model" "model_trace:9587" "name:PM" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "apc" defined at a-chlat1.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__apc
 use import "_gnatprove_standard".Main

 function apc #"a-chlat1.ads" 174 0 0#"model" "model_trace:9600" "name:APC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "no_break_space" defined at a-chlat1.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__no_break_space
 use import "_gnatprove_standard".Main

 function no_break_space #"a-chlat1.ads" 182 0 0#"model" "model_trace:9613" "name:No_Break_Space" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inverted_exclamation" defined at a-chlat1.ads:184, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__inverted_exclamation
 use import "_gnatprove_standard".Main

 function inverted_exclamation #"a-chlat1.ads" 184 0 0#"model" "model_trace:9636" "name:Inverted_Exclamation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cent_sign" defined at a-chlat1.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cent_sign
 use import "_gnatprove_standard".Main

 function cent_sign #"a-chlat1.ads" 185 0 0#"model" "model_trace:9649" "name:Cent_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pound_sign" defined at a-chlat1.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pound_sign
 use import "_gnatprove_standard".Main

 function pound_sign #"a-chlat1.ads" 186 0 0#"model" "model_trace:9662" "name:Pound_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "currency_sign" defined at a-chlat1.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__currency_sign
 use import "_gnatprove_standard".Main

 function currency_sign #"a-chlat1.ads" 187 0 0#"model" "model_trace:9675" "name:Currency_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "yen_sign" defined at a-chlat1.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__yen_sign
 use import "_gnatprove_standard".Main

 function yen_sign #"a-chlat1.ads" 188 0 0#"model" "model_trace:9688" "name:Yen_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "broken_bar" defined at a-chlat1.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__broken_bar
 use import "_gnatprove_standard".Main

 function broken_bar #"a-chlat1.ads" 189 0 0#"model" "model_trace:9701" "name:Broken_Bar" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "section_sign" defined at a-chlat1.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__section_sign
 use import "_gnatprove_standard".Main

 function section_sign #"a-chlat1.ads" 190 0 0#"model" "model_trace:9714" "name:Section_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "diaeresis" defined at a-chlat1.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__diaeresis
 use import "_gnatprove_standard".Main

 function diaeresis #"a-chlat1.ads" 191 0 0#"model" "model_trace:9727" "name:Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "copyright_sign" defined at a-chlat1.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__copyright_sign
 use import "_gnatprove_standard".Main

 function copyright_sign #"a-chlat1.ads" 192 0 0#"model" "model_trace:9740" "name:Copyright_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "feminine_ordinal_indicator" defined at a-chlat1.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__feminine_ordinal_indicator
 use import "_gnatprove_standard".Main

 function feminine_ordinal_indicator #"a-chlat1.ads" 193 0 0#"model" "model_trace:9753" "name:Feminine_Ordinal_Indicator" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_angle_quotation" defined at a-chlat1.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_angle_quotation
 use import "_gnatprove_standard".Main

 function left_angle_quotation #"a-chlat1.ads" 194 0 0#"model" "model_trace:9766" "name:Left_Angle_Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "not_sign" defined at a-chlat1.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__not_sign
 use import "_gnatprove_standard".Main

 function not_sign #"a-chlat1.ads" 195 0 0#"model" "model_trace:9779" "name:Not_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "soft_hyphen" defined at a-chlat1.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__soft_hyphen
 use import "_gnatprove_standard".Main

 function soft_hyphen #"a-chlat1.ads" 196 0 0#"model" "model_trace:9792" "name:Soft_Hyphen" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "registered_trade_mark_sign" defined at a-chlat1.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__registered_trade_mark_sign
 use import "_gnatprove_standard".Main

 function registered_trade_mark_sign #"a-chlat1.ads" 197 0 0#"model" "model_trace:9805" "name:Registered_Trade_Mark_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "macron" defined at a-chlat1.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__macron
 use import "_gnatprove_standard".Main

 function macron #"a-chlat1.ads" 198 0 0#"model" "model_trace:9818" "name:Macron" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "degree_sign" defined at a-chlat1.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__degree_sign
 use import "_gnatprove_standard".Main

 function degree_sign #"a-chlat1.ads" 202 0 0#"model" "model_trace:9831" "name:Degree_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plus_minus_sign" defined at a-chlat1.ads:204, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plus_minus_sign
 use import "_gnatprove_standard".Main

 function plus_minus_sign #"a-chlat1.ads" 204 0 0#"model" "model_trace:9854" "name:Plus_Minus_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_two" defined at a-chlat1.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_two
 use import "_gnatprove_standard".Main

 function superscript_two #"a-chlat1.ads" 205 0 0#"model" "model_trace:9867" "name:Superscript_Two" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_three" defined at a-chlat1.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_three
 use import "_gnatprove_standard".Main

 function superscript_three #"a-chlat1.ads" 206 0 0#"model" "model_trace:9880" "name:Superscript_Three" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "acute" defined at a-chlat1.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__acute
 use import "_gnatprove_standard".Main

 function acute #"a-chlat1.ads" 207 0 0#"model" "model_trace:9893" "name:Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "micro_sign" defined at a-chlat1.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__micro_sign
 use import "_gnatprove_standard".Main

 function micro_sign #"a-chlat1.ads" 208 0 0#"model" "model_trace:9906" "name:Micro_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pilcrow_sign" defined at a-chlat1.ads:209, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pilcrow_sign
 use import "_gnatprove_standard".Main

 function pilcrow_sign #"a-chlat1.ads" 209 0 0#"model" "model_trace:9919" "name:Pilcrow_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "middle_dot" defined at a-chlat1.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__middle_dot
 use import "_gnatprove_standard".Main

 function middle_dot #"a-chlat1.ads" 211 0 0#"model" "model_trace:9942" "name:Middle_Dot" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cedilla" defined at a-chlat1.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cedilla
 use import "_gnatprove_standard".Main

 function cedilla #"a-chlat1.ads" 212 0 0#"model" "model_trace:9955" "name:Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_one" defined at a-chlat1.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_one
 use import "_gnatprove_standard".Main

 function superscript_one #"a-chlat1.ads" 213 0 0#"model" "model_trace:9968" "name:Superscript_One" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "masculine_ordinal_indicator" defined at a-chlat1.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__masculine_ordinal_indicator
 use import "_gnatprove_standard".Main

 function masculine_ordinal_indicator #"a-chlat1.ads" 214 0 0#"model" "model_trace:9981" "name:Masculine_Ordinal_Indicator" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_angle_quotation" defined at a-chlat1.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_angle_quotation
 use import "_gnatprove_standard".Main

 function right_angle_quotation #"a-chlat1.ads" 215 0 0#"model" "model_trace:9994" "name:Right_Angle_Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_one_quarter" defined at a-chlat1.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_one_quarter
 use import "_gnatprove_standard".Main

 function fraction_one_quarter #"a-chlat1.ads" 216 0 0#"model" "model_trace:10007" "name:Fraction_One_Quarter" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_one_half" defined at a-chlat1.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_one_half
 use import "_gnatprove_standard".Main

 function fraction_one_half #"a-chlat1.ads" 217 0 0#"model" "model_trace:10020" "name:Fraction_One_Half" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_three_quarters" defined at a-chlat1.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_three_quarters
 use import "_gnatprove_standard".Main

 function fraction_three_quarters #"a-chlat1.ads" 218 0 0#"model" "model_trace:10033" "name:Fraction_Three_Quarters" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inverted_question" defined at a-chlat1.ads:219, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__inverted_question
 use import "_gnatprove_standard".Main

 function inverted_question #"a-chlat1.ads" 219 0 0#"model" "model_trace:10046" "name:Inverted_Question" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_grave" defined at a-chlat1.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_grave
 use import "_gnatprove_standard".Main

 function uc_a_grave #"a-chlat1.ads" 223 0 0#"model" "model_trace:10059" "name:UC_A_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_acute" defined at a-chlat1.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_acute
 use import "_gnatprove_standard".Main

 function uc_a_acute #"a-chlat1.ads" 224 0 0#"model" "model_trace:10072" "name:UC_A_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_circumflex" defined at a-chlat1.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_circumflex
 use import "_gnatprove_standard".Main

 function uc_a_circumflex #"a-chlat1.ads" 225 0 0#"model" "model_trace:10085" "name:UC_A_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_tilde" defined at a-chlat1.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_tilde
 use import "_gnatprove_standard".Main

 function uc_a_tilde #"a-chlat1.ads" 226 0 0#"model" "model_trace:10098" "name:UC_A_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_diaeresis" defined at a-chlat1.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_diaeresis
 use import "_gnatprove_standard".Main

 function uc_a_diaeresis #"a-chlat1.ads" 227 0 0#"model" "model_trace:10111" "name:UC_A_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_ring" defined at a-chlat1.ads:228, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_ring
 use import "_gnatprove_standard".Main

 function uc_a_ring #"a-chlat1.ads" 228 0 0#"model" "model_trace:10124" "name:UC_A_Ring" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_ae_diphthong" defined at a-chlat1.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_ae_diphthong
 use import "_gnatprove_standard".Main

 function uc_ae_diphthong #"a-chlat1.ads" 229 0 0#"model" "model_trace:10137" "name:UC_AE_Diphthong" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_c_cedilla" defined at a-chlat1.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_c_cedilla
 use import "_gnatprove_standard".Main

 function uc_c_cedilla #"a-chlat1.ads" 230 0 0#"model" "model_trace:10150" "name:UC_C_Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_grave" defined at a-chlat1.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_grave
 use import "_gnatprove_standard".Main

 function uc_e_grave #"a-chlat1.ads" 231 0 0#"model" "model_trace:10163" "name:UC_E_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_acute" defined at a-chlat1.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_acute
 use import "_gnatprove_standard".Main

 function uc_e_acute #"a-chlat1.ads" 232 0 0#"model" "model_trace:10176" "name:UC_E_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_circumflex" defined at a-chlat1.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_circumflex
 use import "_gnatprove_standard".Main

 function uc_e_circumflex #"a-chlat1.ads" 233 0 0#"model" "model_trace:10189" "name:UC_E_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_diaeresis" defined at a-chlat1.ads:234, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_diaeresis
 use import "_gnatprove_standard".Main

 function uc_e_diaeresis #"a-chlat1.ads" 234 0 0#"model" "model_trace:10202" "name:UC_E_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_grave" defined at a-chlat1.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_grave
 use import "_gnatprove_standard".Main

 function uc_i_grave #"a-chlat1.ads" 235 0 0#"model" "model_trace:10215" "name:UC_I_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_acute" defined at a-chlat1.ads:236, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_acute
 use import "_gnatprove_standard".Main

 function uc_i_acute #"a-chlat1.ads" 236 0 0#"model" "model_trace:10228" "name:UC_I_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_circumflex" defined at a-chlat1.ads:237, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_circumflex
 use import "_gnatprove_standard".Main

 function uc_i_circumflex #"a-chlat1.ads" 237 0 0#"model" "model_trace:10241" "name:UC_I_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_diaeresis" defined at a-chlat1.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_diaeresis
 use import "_gnatprove_standard".Main

 function uc_i_diaeresis #"a-chlat1.ads" 238 0 0#"model" "model_trace:10254" "name:UC_I_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_icelandic_eth" defined at a-chlat1.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_icelandic_eth
 use import "_gnatprove_standard".Main

 function uc_icelandic_eth #"a-chlat1.ads" 242 0 0#"model" "model_trace:10267" "name:UC_Icelandic_Eth" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_n_tilde" defined at a-chlat1.ads:243, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_n_tilde
 use import "_gnatprove_standard".Main

 function uc_n_tilde #"a-chlat1.ads" 243 0 0#"model" "model_trace:10280" "name:UC_N_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_grave" defined at a-chlat1.ads:244, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_grave
 use import "_gnatprove_standard".Main

 function uc_o_grave #"a-chlat1.ads" 244 0 0#"model" "model_trace:10293" "name:UC_O_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_acute" defined at a-chlat1.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_acute
 use import "_gnatprove_standard".Main

 function uc_o_acute #"a-chlat1.ads" 245 0 0#"model" "model_trace:10306" "name:UC_O_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_circumflex" defined at a-chlat1.ads:246, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_circumflex
 use import "_gnatprove_standard".Main

 function uc_o_circumflex #"a-chlat1.ads" 246 0 0#"model" "model_trace:10319" "name:UC_O_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_tilde" defined at a-chlat1.ads:247, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_tilde
 use import "_gnatprove_standard".Main

 function uc_o_tilde #"a-chlat1.ads" 247 0 0#"model" "model_trace:10332" "name:UC_O_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_diaeresis" defined at a-chlat1.ads:248, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_diaeresis
 use import "_gnatprove_standard".Main

 function uc_o_diaeresis #"a-chlat1.ads" 248 0 0#"model" "model_trace:10345" "name:UC_O_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "multiplication_sign" defined at a-chlat1.ads:249, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__multiplication_sign
 use import "_gnatprove_standard".Main

 function multiplication_sign #"a-chlat1.ads" 249 0 0#"model" "model_trace:10358" "name:Multiplication_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_oblique_stroke" defined at a-chlat1.ads:250, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_oblique_stroke
 use import "_gnatprove_standard".Main

 function uc_o_oblique_stroke #"a-chlat1.ads" 250 0 0#"model" "model_trace:10371" "name:UC_O_Oblique_Stroke" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_grave" defined at a-chlat1.ads:251, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_grave
 use import "_gnatprove_standard".Main

 function uc_u_grave #"a-chlat1.ads" 251 0 0#"model" "model_trace:10384" "name:UC_U_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_acute" defined at a-chlat1.ads:252, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_acute
 use import "_gnatprove_standard".Main

 function uc_u_acute #"a-chlat1.ads" 252 0 0#"model" "model_trace:10397" "name:UC_U_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_circumflex" defined at a-chlat1.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_circumflex
 use import "_gnatprove_standard".Main

 function uc_u_circumflex #"a-chlat1.ads" 253 0 0#"model" "model_trace:10410" "name:UC_U_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_diaeresis" defined at a-chlat1.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_diaeresis
 use import "_gnatprove_standard".Main

 function uc_u_diaeresis #"a-chlat1.ads" 254 0 0#"model" "model_trace:10423" "name:UC_U_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_y_acute" defined at a-chlat1.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_y_acute
 use import "_gnatprove_standard".Main

 function uc_y_acute #"a-chlat1.ads" 255 0 0#"model" "model_trace:10436" "name:UC_Y_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_icelandic_thorn" defined at a-chlat1.ads:256, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_icelandic_thorn
 use import "_gnatprove_standard".Main

 function uc_icelandic_thorn #"a-chlat1.ads" 256 0 0#"model" "model_trace:10449" "name:UC_Icelandic_Thorn" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_german_sharp_s" defined at a-chlat1.ads:257, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_german_sharp_s
 use import "_gnatprove_standard".Main

 function lc_german_sharp_s #"a-chlat1.ads" 257 0 0#"model" "model_trace:10462" "name:LC_German_Sharp_S" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_grave" defined at a-chlat1.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_grave
 use import "_gnatprove_standard".Main

 function lc_a_grave #"a-chlat1.ads" 261 0 0#"model" "model_trace:10475" "name:LC_A_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_acute" defined at a-chlat1.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_acute
 use import "_gnatprove_standard".Main

 function lc_a_acute #"a-chlat1.ads" 262 0 0#"model" "model_trace:10488" "name:LC_A_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_circumflex" defined at a-chlat1.ads:263, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_circumflex
 use import "_gnatprove_standard".Main

 function lc_a_circumflex #"a-chlat1.ads" 263 0 0#"model" "model_trace:10501" "name:LC_A_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_tilde" defined at a-chlat1.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_tilde
 use import "_gnatprove_standard".Main

 function lc_a_tilde #"a-chlat1.ads" 264 0 0#"model" "model_trace:10514" "name:LC_A_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_diaeresis" defined at a-chlat1.ads:265, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_diaeresis
 use import "_gnatprove_standard".Main

 function lc_a_diaeresis #"a-chlat1.ads" 265 0 0#"model" "model_trace:10527" "name:LC_A_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_ring" defined at a-chlat1.ads:266, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_ring
 use import "_gnatprove_standard".Main

 function lc_a_ring #"a-chlat1.ads" 266 0 0#"model" "model_trace:10540" "name:LC_A_Ring" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_ae_diphthong" defined at a-chlat1.ads:267, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_ae_diphthong
 use import "_gnatprove_standard".Main

 function lc_ae_diphthong #"a-chlat1.ads" 267 0 0#"model" "model_trace:10553" "name:LC_AE_Diphthong" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_c_cedilla" defined at a-chlat1.ads:268, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_c_cedilla
 use import "_gnatprove_standard".Main

 function lc_c_cedilla #"a-chlat1.ads" 268 0 0#"model" "model_trace:10566" "name:LC_C_Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_grave" defined at a-chlat1.ads:269, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_grave
 use import "_gnatprove_standard".Main

 function lc_e_grave #"a-chlat1.ads" 269 0 0#"model" "model_trace:10579" "name:LC_E_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_acute" defined at a-chlat1.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_acute
 use import "_gnatprove_standard".Main

 function lc_e_acute #"a-chlat1.ads" 270 0 0#"model" "model_trace:10592" "name:LC_E_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_circumflex" defined at a-chlat1.ads:271, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_circumflex
 use import "_gnatprove_standard".Main

 function lc_e_circumflex #"a-chlat1.ads" 271 0 0#"model" "model_trace:10605" "name:LC_E_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_diaeresis" defined at a-chlat1.ads:272, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_diaeresis
 use import "_gnatprove_standard".Main

 function lc_e_diaeresis #"a-chlat1.ads" 272 0 0#"model" "model_trace:10618" "name:LC_E_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_grave" defined at a-chlat1.ads:273, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_grave
 use import "_gnatprove_standard".Main

 function lc_i_grave #"a-chlat1.ads" 273 0 0#"model" "model_trace:10631" "name:LC_I_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_acute" defined at a-chlat1.ads:274, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_acute
 use import "_gnatprove_standard".Main

 function lc_i_acute #"a-chlat1.ads" 274 0 0#"model" "model_trace:10644" "name:LC_I_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_circumflex" defined at a-chlat1.ads:275, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_circumflex
 use import "_gnatprove_standard".Main

 function lc_i_circumflex #"a-chlat1.ads" 275 0 0#"model" "model_trace:10657" "name:LC_I_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_diaeresis" defined at a-chlat1.ads:276, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_diaeresis
 use import "_gnatprove_standard".Main

 function lc_i_diaeresis #"a-chlat1.ads" 276 0 0#"model" "model_trace:10670" "name:LC_I_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_icelandic_eth" defined at a-chlat1.ads:279, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_icelandic_eth
 use import "_gnatprove_standard".Main

 function lc_icelandic_eth #"a-chlat1.ads" 279 0 0#"model" "model_trace:10683" "name:LC_Icelandic_Eth" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_n_tilde" defined at a-chlat1.ads:280, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_n_tilde
 use import "_gnatprove_standard".Main

 function lc_n_tilde #"a-chlat1.ads" 280 0 0#"model" "model_trace:10696" "name:LC_N_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_grave" defined at a-chlat1.ads:281, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_grave
 use import "_gnatprove_standard".Main

 function lc_o_grave #"a-chlat1.ads" 281 0 0#"model" "model_trace:10709" "name:LC_O_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_acute" defined at a-chlat1.ads:282, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_acute
 use import "_gnatprove_standard".Main

 function lc_o_acute #"a-chlat1.ads" 282 0 0#"model" "model_trace:10722" "name:LC_O_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_circumflex" defined at a-chlat1.ads:283, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_circumflex
 use import "_gnatprove_standard".Main

 function lc_o_circumflex #"a-chlat1.ads" 283 0 0#"model" "model_trace:10735" "name:LC_O_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_tilde" defined at a-chlat1.ads:284, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_tilde
 use import "_gnatprove_standard".Main

 function lc_o_tilde #"a-chlat1.ads" 284 0 0#"model" "model_trace:10748" "name:LC_O_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_diaeresis" defined at a-chlat1.ads:285, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_diaeresis
 use import "_gnatprove_standard".Main

 function lc_o_diaeresis #"a-chlat1.ads" 285 0 0#"model" "model_trace:10761" "name:LC_O_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "division_sign" defined at a-chlat1.ads:286, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__division_sign
 use import "_gnatprove_standard".Main

 function division_sign #"a-chlat1.ads" 286 0 0#"model" "model_trace:10774" "name:Division_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_oblique_stroke" defined at a-chlat1.ads:287, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_oblique_stroke
 use import "_gnatprove_standard".Main

 function lc_o_oblique_stroke #"a-chlat1.ads" 287 0 0#"model" "model_trace:10787" "name:LC_O_Oblique_Stroke" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_grave" defined at a-chlat1.ads:288, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_grave
 use import "_gnatprove_standard".Main

 function lc_u_grave #"a-chlat1.ads" 288 0 0#"model" "model_trace:10800" "name:LC_U_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_acute" defined at a-chlat1.ads:289, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_acute
 use import "_gnatprove_standard".Main

 function lc_u_acute #"a-chlat1.ads" 289 0 0#"model" "model_trace:10813" "name:LC_U_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_circumflex" defined at a-chlat1.ads:290, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_circumflex
 use import "_gnatprove_standard".Main

 function lc_u_circumflex #"a-chlat1.ads" 290 0 0#"model" "model_trace:10826" "name:LC_U_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_diaeresis" defined at a-chlat1.ads:291, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_diaeresis
 use import "_gnatprove_standard".Main

 function lc_u_diaeresis #"a-chlat1.ads" 291 0 0#"model" "model_trace:10839" "name:LC_U_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y_acute" defined at a-chlat1.ads:292, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y_acute
 use import "_gnatprove_standard".Main

 function lc_y_acute #"a-chlat1.ads" 292 0 0#"model" "model_trace:10852" "name:LC_Y_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_icelandic_thorn" defined at a-chlat1.ads:293, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_icelandic_thorn
 use import "_gnatprove_standard".Main

 function lc_icelandic_thorn #"a-chlat1.ads" 293 0 0#"model" "model_trace:10865" "name:LC_Icelandic_Thorn" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y_diaeresis" defined at a-chlat1.ads:294, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y_diaeresis
 use import "_gnatprove_standard".Main

 function lc_y_diaeresis #"a-chlat1.ads" 294 0 0#"model" "model_trace:10878" "name:LC_Y_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__returncode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type returncode 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = returncode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type returncode__ref =
  { mutable returncode__content "model_trace:" "name:" : returncode }
 
 function returncode__ref___projection 
   (a : returncode__ref) : returncode =
  a.returncode__content
 
 meta "model_projection" function returncode__ref___projection
 
 meta "inline : no" function returncode__ref___projection
 
 val returncode__havoc 
   (x : returncode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__returncode__rep
 use        Machine__returncode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__returncode.returncode, 
 predicate in_range = Machine__returncode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "max_program_length" defined at machine.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__max_program_length
 use import "_gnatprove_standard".Main

 function max_program_length #"machine.ads" 15 0 0#"model" "model_trace:7292" "name:MAX_PROGRAM_LENGTH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramcounterB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tprogramcounterB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tprogramcounterB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tprogramcounterB__ref =
  { mutable tprogramcounterB__content "model_trace:" "name:" : tprogramcounterB }
 
 function tprogramcounterB__ref___projection 
   (a : tprogramcounterB__ref) : tprogramcounterB =
  a.tprogramcounterB__content
 
 meta "model_projection" function tprogramcounterB__ref___projection
 
 meta "inline : no" function tprogramcounterB__ref___projection
 
 val tprogramcounterB__havoc 
   (x : tprogramcounterB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramcounterB__rep
 use        Machine__TprogramcounterB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__TprogramcounterB.tprogramcounterB) : int =
  (Machine__TprogramcounterB.tprogramcounterB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__TprogramcounterB.tprogramcounterB, 
 predicate in_range = Machine__TprogramcounterB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__programcounter
 use import "_gnatprove_standard".Main
 use import "int".Int

 type programcounter =
  < range 1 65536 >
 
 function first 
   : int =
  1
 
 function last 
   : int =
  65536
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = programcounter, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type programcounter__ref =
  { mutable programcounter__content "model_trace:" "name:" : programcounter }
 
 function programcounter__ref___projection 
   (a : programcounter__ref) : programcounter =
  a.programcounter__content
 
 meta "model_projection" function programcounter__ref___projection
 
 meta "inline : no" function programcounter__ref___projection
 
 val programcounter__havoc 
   (x : programcounter__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__programcounter__rep
 use        Machine__programcounter
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__programcounter.programcounter) : int =
  (Machine__programcounter.programcounter'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__programcounter.programcounter, 
 predicate in_range = Machine__programcounter.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "TprogramB" defined at machine.ads:22, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Instruction__instr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Instruction__instr.instr
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_154   : int.
   (if (( (a__first <= temp___idx_154) /\ (temp___idx_154 <= a__last) )) then (
    ((Instruction__instr.bool_eq (get a temp___idx_154) (get b ((b__first - a__first) + temp___idx_154))) = True)) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_154   : int.
    (if (( (a__first <= temp___idx_154) /\ (temp___idx_154 <= a__last) )) then (
     ((Instruction__instr.bool_eq (get a temp___idx_154) (get b ((b__first - a__first) + temp___idx_154))) = True)) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "TprogramB" defined at machine.ads:22, created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Instruction__instr__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Instruction__instr

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Instruction__instr.component_type, 
 type map = Array__Int__Instruction__instr.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Instruction__instr.get

end

(* Module for axiomatizing type "TprogramB" defined at machine.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr
 use        Machine__TprogramcounterB
 use        Machine__TprogramcounterB__rep
 use        Machine__programcounter
 use        Array__Int__Instruction__instr

 type component_type =
  Instruction__instr.instr
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Instruction__instr.map, 
 function array_bool_eq = Array__Int__Instruction__instr.bool_eq, 
 type index_base_type = Machine__TprogramcounterB.tprogramcounterB, 
 type index_rep_type = int, 
 function to_rep = Machine__TprogramcounterB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Machine__TprogramcounterB.in_range, 
 predicate index_dynamic_property = Machine__programcounter.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tprogramB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tprogramB__ref =
  { mutable tprogramB__content "model_trace:" "name:" : tprogramB }
 
 function tprogramB__ref___projection 
   (a : tprogramB__ref) : tprogramB =
  a.tprogramB__content
 
 meta "model_projection" function tprogramB__ref___projection
 
 meta "inline : no" function tprogramB__ref___projection
 
 val tprogramB__havoc 
   (x : tprogramB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "program" defined at machine.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Machine__program
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr
 use        Array__Int__Instruction__instr

 type component_type =
  Instruction__instr.instr
 
 function first 
   : int =
  1
 
 function last 
   : int =
  65536
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Instruction__instr.map, 
 function array_bool_eq = Array__Int__Instruction__instr.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "prog" defined at machine.ads:35, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.ads" 35 0 0#"model_projected" "model_trace:7334" "name:Prog" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.ads" 36 0 0#"model" "model_trace:7343" "name:Cycles" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prog" defined at machine.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.ads" 47 0 0#"model_projected" "name:Prog" "model_trace:7379" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.ads" 48 0 0#"model" "name:Cycles" "model_trace:7388" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.ads:48, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Machine__detectinvalidbehaviour
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function detectinvalidbehaviour 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) : bool
 
 predicate detectinvalidbehaviour__function_guard 
   (result : bool) (prog : Array__Int__Instruction__instr.map) (cycles : int) 

end

(* Module for axiomatizing type "TintegervalB" defined at machine.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Machine__TintegervalB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tintegervalB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tintegervalB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tintegervalB__ref =
  { mutable tintegervalB__content "model_trace:" "name:" : tintegervalB }
 
 function tintegervalB__ref___projection 
   (a : tintegervalB__ref) : tintegervalB =
  a.tintegervalB__content
 
 meta "model_projection" function tintegervalB__ref___projection
 
 meta "inline : no" function tintegervalB__ref___projection
 
 val tintegervalB__havoc 
   (x : tintegervalB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TintegervalB" defined at machine.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Machine__TintegervalB__rep
 use        Machine__TintegervalB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__TintegervalB.tintegervalB) : int =
  (Machine__TintegervalB.tintegervalB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__TintegervalB.tintegervalB, 
 predicate in_range = Machine__TintegervalB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integerval" defined at machine.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Machine__integerval
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integerval =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integerval, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integerval__ref =
  { mutable integerval__content "model_trace:" "name:" : integerval }
 
 function integerval__ref___projection 
   (a : integerval__ref) : integerval =
  a.integerval__content
 
 meta "model_projection" function integerval__ref___projection
 
 meta "inline : no" function integerval__ref___projection
 
 val integerval__havoc 
   (x : integerval__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integerval" defined at machine.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Machine__integerval__rep
 use        Machine__integerval
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__integerval.integerval) : int =
  (Machine__integerval.integerval'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__integerval.integerval, 
 predicate in_range = Machine__integerval.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "datavalstates" defined at machine.adb:24, created in Gnat2Why.Types.Translate_Type *)
module Machine__datavalstates
 use import "_gnatprove_standard".Main
 use import "int".Int

 type datavalstates 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  1
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = datavalstates, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type datavalstates__ref =
  { mutable datavalstates__content "model_trace:" "name:" : datavalstates }
 
 function datavalstates__ref___projection 
   (a : datavalstates__ref) : datavalstates =
  a.datavalstates__content
 
 meta "model_projection" function datavalstates__ref___projection
 
 meta "inline : no" function datavalstates__ref___projection
 
 val datavalstates__havoc 
   (x : datavalstates__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "datavalstates" defined at machine.adb:24, created in Gnat2Why.Types.Translate_Type *)
module Machine__datavalstates__rep
 use        Machine__datavalstates
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__datavalstates.datavalstates, 
 predicate in_range = Machine__datavalstates.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "dataval" defined at machine.adb:28, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Machine__integerval__rep
 use        Machine__datavalstates
 use        Machine__datavalstates__rep

 type __split_discrs =
  { rec__machine__dataval__state "model_trace:.2371" "name:State" : Machine__datavalstates.datavalstates }
 
 function __split_discrs___2__projection 
   (a : __split_discrs) : Machine__datavalstates.datavalstates =
  a.rec__machine__dataval__state
 
 meta "model_projection" function __split_discrs___2__projection
 
 meta "inline : no" function __split_discrs___2__projection
 
 type __split_discrs__ref =
  { mutable __split_discrs__content "model_trace:" "name:" : __split_discrs }
 
 function __split_discrs__ref___2__projection 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___2__projection
 
 meta "inline : no" function __split_discrs__ref___2__projection
 
 val __split_discrs__havoc 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields =
  { rec__machine__dataval__garbage "model_trace:.2389" "name:Garbage" : Machine__integerval.integerval; rec__machine__dataval__value "model_trace:.2403" "name:Value" : Machine__integerval.integerval }
 
 function __split_fields_Garbage__projection "model_trace:.2389" "name:Garbage" 
   (a : __split_fields) : Machine__integerval.integerval =
  a.rec__machine__dataval__garbage
 
 meta "model_projection" function __split_fields_Garbage__projection
 
 meta "inline : no" function __split_fields_Garbage__projection
 
 function __split_fields_Value__projection "model_trace:.2403" "name:Value" 
   (a : __split_fields) : Machine__integerval.integerval =
  a.rec__machine__dataval__value
 
 meta "model_projection" function __split_fields_Value__projection
 
 meta "inline : no" function __split_fields_Value__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content "model_trace:" "name:" : __split_fields }
 
 function __split_fields__ref___2__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___2__projection
 
 meta "inline : no" function __split_fields__ref___2__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_discrs "model_trace:" "name:" : __split_discrs; __split_fields "model_trace:" "name:" : __split_fields; attr__constrained "model_trace:" "name:" : bool }
 
 function __rep___4__projection 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep___4__projection
 
 meta "inline : no" function __rep___4__projection
 
 function __rep___5__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___5__projection
 
 meta "inline : no" function __rep___5__projection
 
 function __rep___6__projection 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep___6__projection
 
 meta "inline : no" function __rep___6__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 
 function of_base 
   (a : __rep) : __rep =
  a
 
 val rec__machine__dataval__state_ 
   (a : __rep) : Machine__datavalstates.datavalstates
  requires {  true }
  ensures {  (result = a.__split_discrs.rec__machine__dataval__state) }
 
 predicate machine__dataval__garbage__pred 
   (a : __rep)  =
  ((Machine__datavalstates__rep.to_rep a.__split_discrs.rec__machine__dataval__state) = 0)
 
 val rec__machine__dataval__garbage_ 
   (a : __rep) : Machine__integerval.integerval
  requires {  (machine__dataval__garbage__pred a) }
  ensures {  (result = a.__split_fields.rec__machine__dataval__garbage) }
 
 predicate machine__dataval__value__pred 
   (a : __rep)  =
  ((Machine__datavalstates__rep.to_rep a.__split_discrs.rec__machine__dataval__state) = 1)
 
 val rec__machine__dataval__value_ 
   (a : __rep) : Machine__integerval.integerval
  requires {  (machine__dataval__value__pred a) }
  ensures {  (result = a.__split_fields.rec__machine__dataval__value) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Machine__datavalstates__rep.to_rep a.__split_discrs.rec__machine__dataval__state) = (Machine__datavalstates__rep.to_rep b.__split_discrs.rec__machine__dataval__state)) /\ ( ( (machine__dataval__garbage__pred a) -> ((Machine__integerval__rep.to_rep a.__split_fields.rec__machine__dataval__garbage) = (Machine__integerval__rep.to_rep b.__split_fields.rec__machine__dataval__garbage)) ) /\ ( (machine__dataval__value__pred a) -> ((Machine__integerval__rep.to_rep a.__split_fields.rec__machine__dataval__value) = (Machine__integerval__rep.to_rep b.__split_fields.rec__machine__dataval__value)) ) ) )) then (
   True) else (
   False))

end

(* Module for axiomatizing type "dataval" defined at machine.adb:28, created in Gnat2Why.Types.Translate_Type *)
module Machine__dataval
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type dataval =
  __rep
 
 function value__size 
   : int
 
 function object__size 
   (a : dataval) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : dataval) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : dataval.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : dataval.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : dataval) (b : dataval) : bool
 
 function dummy 
   : dataval
 
 type dataval__ref =
  { mutable dataval__content "model_trace:" "name:" : dataval }
 
 function dataval__ref___projection 
   (a : dataval__ref) : dataval =
  a.dataval__content
 
 meta "model_projection" function dataval__ref___projection
 
 meta "inline : no" function dataval__ref___projection
 
 val dataval__havoc 
   (x : dataval__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "TregisterB" defined at machine.adb:39, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Machine__dataval
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Machine__dataval.dataval
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_155   : int.
   (if (( (a__first <= temp___idx_155) /\ (temp___idx_155 <= a__last) )) then (
    ((Machine__dataval.bool_eq (get a temp___idx_155) (get b ((b__first - a__first) + temp___idx_155))) = True)) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_155   : int.
    (if (( (a__first <= temp___idx_155) /\ (temp___idx_155 <= a__last) )) then (
     ((Machine__dataval.bool_eq (get a temp___idx_155) (get b ((b__first - a__first) + temp___idx_155))) = True)) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "TregisterB" defined at machine.adb:39, created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Machine__dataval__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Machine__dataval

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Machine__dataval.component_type, 
 type map = Array__Int__Machine__dataval.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Machine__dataval.get

end

(* Module for axiomatizing type "TregisterB" defined at machine.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Machine__TregisterB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TregB
 use        Instruction__TregB__rep
 use        Instruction__reg
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TregB.tregB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TregB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TregB.in_range, 
 predicate index_dynamic_property = Instruction__reg.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tregisterB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tregisterB__ref =
  { mutable tregisterB__content "model_trace:" "name:" : tregisterB }
 
 function tregisterB__ref___projection 
   (a : tregisterB__ref) : tregisterB =
  a.tregisterB__content
 
 meta "model_projection" function tregisterB__ref___projection
 
 meta "inline : no" function tregisterB__ref___projection
 
 val tregisterB__havoc 
   (x : tregisterB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "register" defined at machine.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Machine__register
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the array theory associated to type "TintegerregisterB" defined at machine.adb:42, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Machine__integerval
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Machine__integerval__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Machine__integerval.integerval
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_156   : int.
   (if (( (a__first <= temp___idx_156) /\ (temp___idx_156 <= a__last) )) then (
    ((Machine__integerval__rep.to_rep (get a temp___idx_156)) = (Machine__integerval__rep.to_rep (get b ((b__first - a__first) + temp___idx_156))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_156   : int.
    (if (( (a__first <= temp___idx_156) /\ (temp___idx_156 <= a__last) )) then (
     ((Machine__integerval__rep.to_rep (get a temp___idx_156)) = (Machine__integerval__rep.to_rep (get b ((b__first - a__first) + temp___idx_156))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "TintegerregisterB" defined at machine.adb:42, created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Machine__integerval__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Machine__integerval

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Machine__integerval.component_type, 
 type map = Array__Int__Machine__integerval.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Machine__integerval.get

end

(* Module for axiomatizing comparison for the array theory associated to type "TintegerregisterB" defined at machine.adb:42, created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Machine__integerval_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval__rep
 use        Array__Int__Machine__integerval

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Machine__integerval.component_type, 
 function to_rep = Machine__integerval__rep.to_rep, 
 type map = Array__Int__Machine__integerval.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Machine__integerval.get, 
 function bool_eq = Array__Int__Machine__integerval.bool_eq

end

(* Module for axiomatizing type "TintegerregisterB" defined at machine.adb:42, created in Gnat2Why.Types.Translate_Type *)
module Machine__TintegerregisterB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TregB
 use        Instruction__TregB__rep
 use        Instruction__reg
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 type index_base_type = Instruction__TregB.tregB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TregB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TregB.in_range, 
 predicate index_dynamic_property = Instruction__reg.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tintegerregisterB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tintegerregisterB__ref =
  { mutable tintegerregisterB__content "model_trace:" "name:" : tintegerregisterB }
 
 function tintegerregisterB__ref___projection 
   (a : tintegerregisterB__ref) : tintegerregisterB =
  a.tintegerregisterB__content
 
 meta "model_projection" function tintegerregisterB__ref___projection
 
 meta "inline : no" function tintegerregisterB__ref___projection
 
 val tintegerregisterB__havoc 
   (x : tintegerregisterB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integerregister" defined at machine.adb:42, created in Gnat2Why.Types.Translate_Type *)
module Machine__integerregister
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TmemoryB" defined at machine.adb:45, created in Gnat2Why.Types.Translate_Type *)
module Machine__TmemoryB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TaddrB
 use        Instruction__TaddrB__rep
 use        Instruction__addr
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TaddrB.taddrB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TaddrB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TaddrB.in_range, 
 predicate index_dynamic_property = Instruction__addr.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tmemoryB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tmemoryB__ref =
  { mutable tmemoryB__content "model_trace:" "name:" : tmemoryB }
 
 function tmemoryB__ref___projection 
   (a : tmemoryB__ref) : tmemoryB =
  a.tmemoryB__content
 
 meta "model_projection" function tmemoryB__ref___projection
 
 meta "inline : no" function tmemoryB__ref___projection
 
 val tmemoryB__havoc 
   (x : tmemoryB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "memory" defined at machine.adb:45, created in Gnat2Why.Types.Translate_Type *)
module Machine__memory
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TintegermemoryB" defined at machine.adb:48, created in Gnat2Why.Types.Translate_Type *)
module Machine__TintegermemoryB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TaddrB
 use        Instruction__TaddrB__rep
 use        Instruction__addr
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 type index_base_type = Instruction__TaddrB.taddrB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TaddrB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TaddrB.in_range, 
 predicate index_dynamic_property = Instruction__addr.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tintegermemoryB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tintegermemoryB__ref =
  { mutable tintegermemoryB__content "model_trace:" "name:" : tintegermemoryB }
 
 function tintegermemoryB__ref___projection 
   (a : tintegermemoryB__ref) : tintegermemoryB =
  a.tintegermemoryB__content
 
 meta "model_projection" function tintegermemoryB__ref___projection
 
 meta "inline : no" function tintegermemoryB__ref___projection
 
 val tintegermemoryB__havoc 
   (x : tintegermemoryB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integermemory" defined at machine.adb:48, created in Gnat2Why.Types.Translate_Type *)
module Machine__integermemory
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "offs" defined at machine.adb:51, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__incpc__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 51 0 0#"model" "model_trace:11574" "name:Offs" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__incpc__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 67 0 0#"model" "model_trace:11858" "name:Rd" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 67 0 0#"model" "model_trace:11865" "name:Rs1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 67 0 0#"model" "model_trace:11872" "name:Rs2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:80, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 80 0 0#"model" "name:Rd" "model_trace:12227" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:80, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 80 0 0#"model" "name:Rs1" "model_trace:12234" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:80, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 80 0 0#"model" "name:Rs2" "model_trace:12241" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:93, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 93 0 0#"model" "name:Rd" "model_trace:12596" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:93, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 93 0 0#"model" "name:Rs1" "model_trace:12603" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:93, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 93 0 0#"model" "name:Rs2" "model_trace:12610" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:106, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 106 0 0#"model" "name:Rd" "model_trace:13039" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:106, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 106 0 0#"model" "name:Rs1" "model_trace:13046" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:106, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 106 0 0#"model" "name:Rs2" "model_trace:13053" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 118 0 0#"model" "name:Rd" "model_trace:13382" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__rs
 use import "_gnatprove_standard".Main

 function rs #"machine.adb" 118 0 0#"model" "model_trace:13389" "name:Rs" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__rs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 118 0 0#"model" "name:Offs" "model_trace:13396" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mem" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 function mem #"machine.adb" 118 0 0#"model_projected" "model_trace:13417" "name:Mem" 
   : Array__Int__Machine__integerval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ra" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__ra
 use import "_gnatprove_standard".Main

 function ra #"machine.adb" 131 0 0#"model" "model_trace:13800" "name:Ra" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ra" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__ra___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 131 0 0#"model" "name:Offs" "model_trace:13807" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rb" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__rb
 use import "_gnatprove_standard".Main

 function rb #"machine.adb" 131 0 0#"model" "model_trace:13814" "name:Rb" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rb" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__rb___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 function regs #"machine.adb" 131 0 0#"model_projected" "name:Regs" "model_trace:13828" 
   : Array__Int__Machine__integerval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:144, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domov__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 144 0 0#"model" "name:Rd" "model_trace:14214" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:144, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domov__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 144 0 0#"model" "name:Offs" "model_trace:14221" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T9b" defined at machine.adb:162, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T9b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t9b__ref =
  { mutable t9b__content "model_trace:" "name:" : t9b }
 
 function t9b__ref___projection 
   (a : t9b__ref) : t9b =
  a.t9b__content
 
 meta "model_projection" function t9b__ref___projection
 
 meta "inline : no" function t9b__ref___projection
 
 val t9b__havoc 
   (x : t9b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T9b" defined at machine.adb:162, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T9b__rep
 use        Machine__executeprogram__T9b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__executeprogram__T9b.t9b) : int =
  (Machine__executeprogram__T9b.t9b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__executeprogram__T9b.t9b, 
 predicate in_range = Machine__executeprogram__T9b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T10b" defined at machine.adb:162, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T10b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11b" defined at machine.adb:164, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T11b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t11b__ref =
  { mutable t11b__content "model_trace:" "name:" : t11b }
 
 function t11b__ref___projection 
   (a : t11b__ref) : t11b =
  a.t11b__content
 
 meta "model_projection" function t11b__ref___projection
 
 meta "inline : no" function t11b__ref___projection
 
 val t11b__havoc 
   (x : t11b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T11b" defined at machine.adb:164, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T11b__rep
 use        Machine__executeprogram__T11b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__executeprogram__T11b.t11b) : int =
  (Machine__executeprogram__T11b.t11b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__executeprogram__T11b.t11b, 
 predicate in_range = Machine__executeprogram__T11b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T12b" defined at machine.adb:164, created in Gnat2Why.Types.Translate_Type *)
module Machine__executeprogram__T12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval
 use        Array__Int__Machine__integerval

 type component_type =
  Machine__integerval.integerval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__integerval.map, 
 function array_bool_eq = Array__Int__Machine__integerval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "C13b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C13b
 use import "_gnatprove_standard".Main

 function c13b #"machine.adb" 183 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C14b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C14b
 use import "_gnatprove_standard".Main

 function c14b #"machine.adb" 183 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C15b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C15b
 use import "_gnatprove_standard".Main

 function c15b #"machine.adb" 183 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C22b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C22b
 use import "_gnatprove_standard".Main

 function c22b #"machine.adb" 186 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C23b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C23b
 use import "_gnatprove_standard".Main

 function c23b #"machine.adb" 186 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C24b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C24b
 use import "_gnatprove_standard".Main

 function c24b #"machine.adb" 186 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C31b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C31b
 use import "_gnatprove_standard".Main

 function c31b #"machine.adb" 189 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C32b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C32b
 use import "_gnatprove_standard".Main

 function c32b #"machine.adb" 189 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C33b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C33b
 use import "_gnatprove_standard".Main

 function c33b #"machine.adb" 189 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C40b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C40b
 use import "_gnatprove_standard".Main

 function c40b #"machine.adb" 192 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C41b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C41b
 use import "_gnatprove_standard".Main

 function c41b #"machine.adb" 192 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C42b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C42b
 use import "_gnatprove_standard".Main

 function c42b #"machine.adb" 192 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C49b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C49b
 use import "_gnatprove_standard".Main

 function c49b #"machine.adb" 195 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C50b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C50b
 use import "_gnatprove_standard".Main

 function c50b #"machine.adb" 195 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C51b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C51b
 use import "_gnatprove_standard".Main

 function c51b #"machine.adb" 195 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C59b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C59b
 use import "_gnatprove_standard".Main

 function c59b #"machine.adb" 198 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C60b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C60b
 use import "_gnatprove_standard".Main

 function c60b #"machine.adb" 198 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C61b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C61b
 use import "_gnatprove_standard".Main

 function c61b #"machine.adb" 198 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C69b" defined at machine.adb:201, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C69b
 use import "_gnatprove_standard".Main

 function c69b #"machine.adb" 201 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C70b" defined at machine.adb:201, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C70b
 use import "_gnatprove_standard".Main

 function c70b #"machine.adb" 201 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C79b" defined at machine.adb:208, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C79b
 use import "_gnatprove_standard".Main

 function c79b #"machine.adb" 208 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C83b" defined at machine.adb:211, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C83b
 use import "_gnatprove_standard".Main

 function c83b #"machine.adb" 211 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "val" defined at machine.adb:228, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectuninitializedvariable__val
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function val__ #"machine.adb" 228 0 0#"model_projected" "model_trace:17299" "name:Val" 
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "val" defined at machine.adb:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectuninitializedvariable__val___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S93b" defined at machine.adb:228, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectuninitializedvariable__S93b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type s93b =
  __rep
 
 predicate in_range #"machine.adb" 228 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 228 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 228 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 228 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 228 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s93b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s93b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s93b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s93b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : s93b) (b : s93b) : bool
 
 function dummy 
   : s93b
 
 type s93b__ref =
  { mutable s93b__content "model_trace:" "name:" : s93b }
 
 function s93b__ref___projection 
   (a : s93b__ref) : s93b =
  a.s93b__content
 
 meta "model_projection" function s93b__ref___projection
 
 meta "inline : no" function s93b__ref___projection
 
 val s93b__havoc 
   (x : s93b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:234, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 234 0 0#"model_projected" "name:Inst" "model_trace:17477" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:234, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidadd__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:234, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 234 0 0#"model_projected" "name:Regs" "model_trace:17484" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:234, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidadd__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S96b" defined at machine.adb:234, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidadd__S96b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s96b =
  __rep
 
 predicate in_range #"machine.adb" 234 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 234 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 234 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 234 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 234 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s96b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s96b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s96b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s96b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s96b) (b : s96b) : bool
 
 function dummy 
   : s96b
 
 type s96b__ref =
  { mutable s96b__content "model_trace:" "name:" : s96b }
 
 function s96b__ref___projection 
   (a : s96b__ref) : s96b =
  a.s96b__content
 
 meta "model_projection" function s96b__ref___projection
 
 meta "inline : no" function s96b__ref___projection
 
 val s96b__havoc 
   (x : s96b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C98b" defined at machine.adb:237, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__C98b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c98b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C102b" defined at machine.adb:237, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__C102b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c102b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:252, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 252 0 0#"model_projected" "name:Inst" "model_trace:18360" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:252, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidsub__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:252, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 252 0 0#"model_projected" "name:Regs" "model_trace:18367" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:252, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidsub__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S107b" defined at machine.adb:252, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidsub__S107b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s107b =
  __rep
 
 predicate in_range #"machine.adb" 252 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 252 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 252 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 252 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 252 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s107b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s107b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s107b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s107b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s107b) (b : s107b) : bool
 
 function dummy 
   : s107b
 
 type s107b__ref =
  { mutable s107b__content "model_trace:" "name:" : s107b }
 
 function s107b__ref___projection 
   (a : s107b__ref) : s107b =
  a.s107b__content
 
 meta "model_projection" function s107b__ref___projection
 
 meta "inline : no" function s107b__ref___projection
 
 val s107b__havoc 
   (x : s107b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C109b" defined at machine.adb:255, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__C109b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c109b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C113b" defined at machine.adb:255, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__C113b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c113b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:270, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 270 0 0#"model_projected" "name:Inst" "model_trace:19249" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:270, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmul__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:270, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 270 0 0#"model_projected" "name:Regs" "model_trace:19256" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:270, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmul__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S118b" defined at machine.adb:270, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidmul__S118b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s118b =
  __rep
 
 predicate in_range #"machine.adb" 270 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 270 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 270 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 270 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 270 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s118b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s118b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s118b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s118b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s118b) (b : s118b) : bool
 
 function dummy 
   : s118b
 
 type s118b__ref =
  { mutable s118b__content "model_trace:" "name:" : s118b }
 
 function s118b__ref___projection 
   (a : s118b__ref) : s118b =
  a.s118b__content
 
 meta "model_projection" function s118b__ref___projection
 
 meta "inline : no" function s118b__ref___projection
 
 val s118b__havoc 
   (x : s118b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C120b" defined at machine.adb:273, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__C120b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c120b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C124b" defined at machine.adb:273, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__C124b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c124b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:300, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 300 0 0#"model_projected" "name:Inst" "model_trace:20744" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:300, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvaliddiv__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:300, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 300 0 0#"model_projected" "name:Regs" "model_trace:20751" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:300, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvaliddiv__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S129b" defined at machine.adb:300, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvaliddiv__S129b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s129b =
  __rep
 
 predicate in_range #"machine.adb" 300 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 300 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 300 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 300 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 300 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s129b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s129b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s129b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s129b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s129b) (b : s129b) : bool
 
 function dummy 
   : s129b
 
 type s129b__ref =
  { mutable s129b__content "model_trace:" "name:" : s129b }
 
 function s129b__ref___projection 
   (a : s129b__ref) : s129b =
  a.s129b__content
 
 meta "model_projection" function s129b__ref___projection
 
 meta "inline : no" function s129b__ref___projection
 
 val s129b__havoc 
   (x : s129b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C131b" defined at machine.adb:303, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__C131b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c131b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C135b" defined at machine.adb:303, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__C135b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c135b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidldr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 320 0 0#"model_projected" "name:Inst" "model_trace:21603" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidldr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidldr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 320 0 0#"model_projected" "name:Regs" "model_trace:21610" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidldr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S140b" defined at machine.adb:320, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidldr__S140b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s140b =
  __rep
 
 predicate in_range #"machine.adb" 320 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 320 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 320 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 320 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 320 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s140b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s140b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s140b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s140b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s140b) (b : s140b) : bool
 
 function dummy 
   : s140b
 
 type s140b__ref =
  { mutable s140b__content "model_trace:" "name:" : s140b }
 
 function s140b__ref___projection 
   (a : s140b__ref) : s140b =
  a.s140b__content
 
 meta "model_projection" function s140b__ref___projection
 
 meta "inline : no" function s140b__ref___projection
 
 val s140b__havoc 
   (x : s140b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C142b" defined at machine.adb:322, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidldr__C142b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c142b #"machine.adb" 322 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:330, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 330 0 0#"model_projected" "name:Inst" "model_trace:22182" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:330, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:330, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidstr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 330 0 0#"model_projected" "name:Regs" "model_trace:22189" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:330, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidstr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S147b" defined at machine.adb:330, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidstr__S147b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s147b =
  __rep
 
 predicate in_range #"machine.adb" 330 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 330 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 330 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 330 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 330 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s147b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s147b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s147b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s147b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s147b) (b : s147b) : bool
 
 function dummy 
   : s147b
 
 type s147b__ref =
  { mutable s147b__content "model_trace:" "name:" : s147b }
 
 function s147b__ref___projection 
   (a : s147b__ref) : s147b =
  a.s147b__content
 
 meta "model_projection" function s147b__ref___projection
 
 meta "inline : no" function s147b__ref___projection
 
 val s147b__havoc 
   (x : s147b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C149b" defined at machine.adb:332, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidstr__C149b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c149b #"machine.adb" 332 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:340, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmov__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 340 0 0#"model_projected" "name:Inst" "model_trace:22759" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:340, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmov__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S154b" defined at machine.adb:340, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidmov__S154b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s154b =
  __rep
 
 predicate in_range #"machine.adb" 340 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 340 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 340 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 340 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 340 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s154b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s154b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s154b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s154b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s154b) (b : s154b) : bool
 
 function dummy 
   : s154b
 
 type s154b__ref =
  { mutable s154b__content "model_trace:" "name:" : s154b }
 
 function s154b__ref___projection 
   (a : s154b__ref) : s154b =
  a.s154b__content
 
 meta "model_projection" function s154b__ref___projection
 
 meta "inline : no" function s154b__ref___projection
 
 val s154b__havoc 
   (x : s154b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:349, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjmp__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 349 0 0#"model_projected" "name:Inst" "model_trace:23115" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:349, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjmp__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:349, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjmp__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 349 0 0#"model" "name:PC" "model_trace:23122" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:349, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjmp__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S157b" defined at machine.adb:349, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidjmp__S157b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s157b =
  __rep
 
 predicate in_range #"machine.adb" 349 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 349 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 349 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 349 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 349 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s157b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s157b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s157b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s157b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s157b) (b : s157b) : bool
 
 function dummy 
   : s157b
 
 type s157b__ref =
  { mutable s157b__content "model_trace:" "name:" : s157b }
 
 function s157b__ref___projection 
   (a : s157b__ref) : s157b =
  a.s157b__content
 
 meta "model_projection" function s157b__ref___projection
 
 meta "inline : no" function s157b__ref___projection
 
 val s157b__havoc 
   (x : s157b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:360, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 360 0 0#"model_projected" "name:Inst" "model_trace:23568" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:360, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:360, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 360 0 0#"model" "name:PC" "model_trace:23575" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:360, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:360, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 360 0 0#"model_projected" "name:Regs" "model_trace:23582" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:360, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S160b" defined at machine.adb:360, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidjz__S160b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s160b =
  __rep
 
 predicate in_range #"machine.adb" 360 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 360 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 360 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 360 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 360 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s160b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s160b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s160b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s160b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s160b) (b : s160b) : bool
 
 function dummy 
   : s160b
 
 type s160b__ref =
  { mutable s160b__content "model_trace:" "name:" : s160b }
 
 function s160b__ref___projection 
   (a : s160b__ref) : s160b =
  a.s160b__content
 
 meta "model_projection" function s160b__ref___projection
 
 meta "inline : no" function s160b__ref___projection
 
 val s160b__havoc 
   (x : s160b__ref) : unit
  writes {x}

end

(* Module for defining the constant "cyclecount" defined at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidcycle__cyclecount
 use import "_gnatprove_standard".Main

 function cyclecount #"machine.adb" 403 0 0#"model" "name:CycleCount" "model_trace:24414" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:403, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidcycle__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidcycle__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.adb" 403 0 0#"model" "name:Cycles" "model_trace:24421" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.adb:403, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidcycle__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidpc__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 409 0 0#"model" "name:PC" "model_trace:24593" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:409, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidpc__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidpc__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 409 0 0#"model" "name:Offs" "model_trace:24600" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:409, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidpc__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "inst" defined at machine.adb:418, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 418 0 0#"model_projected" "name:Inst" "model_trace:24833" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:418, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S169b" defined at machine.adb:418, created in Gnat2Why.Types.Translate_Type *)
module Machine__performadd__S169b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s169b =
  __rep
 
 predicate in_range #"machine.adb" 418 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 418 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 418 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 418 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 418 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s169b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s169b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s169b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s169b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s169b) (b : s169b) : bool
 
 function dummy 
   : s169b
 
 type s169b__ref =
  { mutable s169b__content "model_trace:" "name:" : s169b }
 
 function s169b__ref___projection 
   (a : s169b__ref) : s169b =
  a.s169b__content
 
 meta "model_projection" function s169b__ref___projection
 
 meta "inline : no" function s169b__ref___projection
 
 val s169b__havoc 
   (x : s169b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C170b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__C170b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c170b #"machine.adb" 420 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C175b" defined at machine.adb:237 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__B174b__C175b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c175b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C179b" defined at machine.adb:237 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__B174b__C179b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c179b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C183b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__C183b
 use import "_gnatprove_standard".Main

 function c183b #"machine.adb" 420 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T187b" defined at machine.adb:423, created in Gnat2Why.Types.Translate_Type *)
module Machine__performadd__T187b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t187b =
  __rep
 
 predicate in_range #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 423 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 423 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 423 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t187b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t187b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t187b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t187b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t187b) (b : t187b) : bool
 
 function dummy 
   : t187b
 
 type t187b__ref =
  { mutable t187b__content "model_trace:" "name:" : t187b }
 
 function t187b__ref___projection 
   (a : t187b__ref) : t187b =
  a.t187b__content
 
 meta "model_projection" function t187b__ref___projection
 
 meta "inline : no" function t187b__ref___projection
 
 val t187b__havoc 
   (x : t187b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T188b" defined at machine.adb:427, created in Gnat2Why.Types.Translate_Type *)
module Machine__performadd__T188b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t188b =
  __rep
 
 predicate in_range #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 427 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 427 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 427 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t188b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t188b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t188b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t188b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t188b) (b : t188b) : bool
 
 function dummy 
   : t188b
 
 type t188b__ref =
  { mutable t188b__content "model_trace:" "name:" : t188b }
 
 function t188b__ref___projection 
   (a : t188b__ref) : t188b =
  a.t188b__content
 
 meta "model_projection" function t188b__ref___projection
 
 meta "inline : no" function t188b__ref___projection
 
 val t188b__havoc 
   (x : t188b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T189b" defined at machine.adb:431, created in Gnat2Why.Types.Translate_Type *)
module Machine__performadd__T189b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t189b =
  __rep
 
 predicate in_range #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 431 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 431 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 431 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t189b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t189b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t189b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t189b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t189b) (b : t189b) : bool
 
 function dummy 
   : t189b
 
 type t189b__ref =
  { mutable t189b__content "model_trace:" "name:" : t189b }
 
 function t189b__ref___projection 
   (a : t189b__ref) : t189b =
  a.t189b__content
 
 meta "model_projection" function t189b__ref___projection
 
 meta "inline : no" function t189b__ref___projection
 
 val t189b__havoc 
   (x : t189b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:440, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 440 0 0#"model_projected" "name:Inst" "model_trace:26450" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:440, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S193b" defined at machine.adb:440, created in Gnat2Why.Types.Translate_Type *)
module Machine__performsub__S193b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s193b =
  __rep
 
 predicate in_range #"machine.adb" 440 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 440 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 440 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 440 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 440 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s193b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s193b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s193b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s193b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s193b) (b : s193b) : bool
 
 function dummy 
   : s193b
 
 type s193b__ref =
  { mutable s193b__content "model_trace:" "name:" : s193b }
 
 function s193b__ref___projection 
   (a : s193b__ref) : s193b =
  a.s193b__content
 
 meta "model_projection" function s193b__ref___projection
 
 meta "inline : no" function s193b__ref___projection
 
 val s193b__havoc 
   (x : s193b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C194b" defined at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__C194b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c194b #"machine.adb" 442 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C199b" defined at machine.adb:255 instantiated at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__B198b__C199b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c199b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C203b" defined at machine.adb:255 instantiated at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__B198b__C203b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c203b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C207b" defined at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__C207b
 use import "_gnatprove_standard".Main

 function c207b #"machine.adb" 442 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T211b" defined at machine.adb:445, created in Gnat2Why.Types.Translate_Type *)
module Machine__performsub__T211b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t211b =
  __rep
 
 predicate in_range #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 445 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 445 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 445 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t211b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t211b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t211b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t211b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t211b) (b : t211b) : bool
 
 function dummy 
   : t211b
 
 type t211b__ref =
  { mutable t211b__content "model_trace:" "name:" : t211b }
 
 function t211b__ref___projection 
   (a : t211b__ref) : t211b =
  a.t211b__content
 
 meta "model_projection" function t211b__ref___projection
 
 meta "inline : no" function t211b__ref___projection
 
 val t211b__havoc 
   (x : t211b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T212b" defined at machine.adb:449, created in Gnat2Why.Types.Translate_Type *)
module Machine__performsub__T212b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t212b =
  __rep
 
 predicate in_range #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 449 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 449 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 449 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t212b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t212b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t212b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t212b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t212b) (b : t212b) : bool
 
 function dummy 
   : t212b
 
 type t212b__ref =
  { mutable t212b__content "model_trace:" "name:" : t212b }
 
 function t212b__ref___projection 
   (a : t212b__ref) : t212b =
  a.t212b__content
 
 meta "model_projection" function t212b__ref___projection
 
 meta "inline : no" function t212b__ref___projection
 
 val t212b__havoc 
   (x : t212b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T213b" defined at machine.adb:453, created in Gnat2Why.Types.Translate_Type *)
module Machine__performsub__T213b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t213b =
  __rep
 
 predicate in_range #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 453 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 453 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 453 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t213b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t213b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t213b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t213b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t213b) (b : t213b) : bool
 
 function dummy 
   : t213b
 
 type t213b__ref =
  { mutable t213b__content "model_trace:" "name:" : t213b }
 
 function t213b__ref___projection 
   (a : t213b__ref) : t213b =
  a.t213b__content
 
 meta "model_projection" function t213b__ref___projection
 
 meta "inline : no" function t213b__ref___projection
 
 val t213b__havoc 
   (x : t213b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:462, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 462 0 0#"model_projected" "name:Inst" "model_trace:28070" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:462, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S217b" defined at machine.adb:462, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmul__S217b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s217b =
  __rep
 
 predicate in_range #"machine.adb" 462 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 462 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 462 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 462 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 462 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s217b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s217b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s217b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s217b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s217b) (b : s217b) : bool
 
 function dummy 
   : s217b
 
 type s217b__ref =
  { mutable s217b__content "model_trace:" "name:" : s217b }
 
 function s217b__ref___projection 
   (a : s217b__ref) : s217b =
  a.s217b__content
 
 meta "model_projection" function s217b__ref___projection
 
 meta "inline : no" function s217b__ref___projection
 
 val s217b__havoc 
   (x : s217b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C218b" defined at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__C218b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c218b #"machine.adb" 464 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C223b" defined at machine.adb:273 instantiated at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__B222b__C223b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c223b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C227b" defined at machine.adb:273 instantiated at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__B222b__C227b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c227b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C231b" defined at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__C231b
 use import "_gnatprove_standard".Main

 function c231b #"machine.adb" 464 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T235b" defined at machine.adb:467, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmul__T235b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t235b =
  __rep
 
 predicate in_range #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 467 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 467 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 467 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t235b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t235b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t235b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t235b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t235b) (b : t235b) : bool
 
 function dummy 
   : t235b
 
 type t235b__ref =
  { mutable t235b__content "model_trace:" "name:" : t235b }
 
 function t235b__ref___projection 
   (a : t235b__ref) : t235b =
  a.t235b__content
 
 meta "model_projection" function t235b__ref___projection
 
 meta "inline : no" function t235b__ref___projection
 
 val t235b__havoc 
   (x : t235b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T236b" defined at machine.adb:471, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmul__T236b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t236b =
  __rep
 
 predicate in_range #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 471 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 471 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 471 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t236b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t236b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t236b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t236b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t236b) (b : t236b) : bool
 
 function dummy 
   : t236b
 
 type t236b__ref =
  { mutable t236b__content "model_trace:" "name:" : t236b }
 
 function t236b__ref___projection 
   (a : t236b__ref) : t236b =
  a.t236b__content
 
 meta "model_projection" function t236b__ref___projection
 
 meta "inline : no" function t236b__ref___projection
 
 val t236b__havoc 
   (x : t236b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T237b" defined at machine.adb:475, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmul__T237b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t237b =
  __rep
 
 predicate in_range #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 475 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 475 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 475 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t237b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t237b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t237b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t237b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t237b) (b : t237b) : bool
 
 function dummy 
   : t237b
 
 type t237b__ref =
  { mutable t237b__content "model_trace:" "name:" : t237b }
 
 function t237b__ref___projection 
   (a : t237b__ref) : t237b =
  a.t237b__content
 
 meta "model_projection" function t237b__ref___projection
 
 meta "inline : no" function t237b__ref___projection
 
 val t237b__havoc 
   (x : t237b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:484, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 484 0 0#"model_projected" "name:Inst" "model_trace:30113" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:484, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S240b" defined at machine.adb:484, created in Gnat2Why.Types.Translate_Type *)
module Machine__performdiv__S240b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s240b =
  __rep
 
 predicate in_range #"machine.adb" 484 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 484 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 484 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 484 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 484 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s240b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s240b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s240b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s240b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s240b) (b : s240b) : bool
 
 function dummy 
   : s240b
 
 type s240b__ref =
  { mutable s240b__content "model_trace:" "name:" : s240b }
 
 function s240b__ref___projection 
   (a : s240b__ref) : s240b =
  a.s240b__content
 
 meta "model_projection" function s240b__ref___projection
 
 meta "inline : no" function s240b__ref___projection
 
 val s240b__havoc 
   (x : s240b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C241b" defined at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__C241b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c241b #"machine.adb" 486 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C246b" defined at machine.adb:303 instantiated at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__B245b__C246b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c246b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C250b" defined at machine.adb:303 instantiated at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__B245b__C250b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c250b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C254b" defined at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__C254b
 use import "_gnatprove_standard".Main

 function c254b #"machine.adb" 486 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T258b" defined at machine.adb:489, created in Gnat2Why.Types.Translate_Type *)
module Machine__performdiv__T258b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t258b =
  __rep
 
 predicate in_range #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 489 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 489 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 489 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t258b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t258b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t258b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t258b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t258b) (b : t258b) : bool
 
 function dummy 
   : t258b
 
 type t258b__ref =
  { mutable t258b__content "model_trace:" "name:" : t258b }
 
 function t258b__ref___projection 
   (a : t258b__ref) : t258b =
  a.t258b__content
 
 meta "model_projection" function t258b__ref___projection
 
 meta "inline : no" function t258b__ref___projection
 
 val t258b__havoc 
   (x : t258b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T259b" defined at machine.adb:493, created in Gnat2Why.Types.Translate_Type *)
module Machine__performdiv__T259b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t259b =
  __rep
 
 predicate in_range #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 493 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 493 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 493 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t259b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t259b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t259b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t259b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t259b) (b : t259b) : bool
 
 function dummy 
   : t259b
 
 type t259b__ref =
  { mutable t259b__content "model_trace:" "name:" : t259b }
 
 function t259b__ref___projection 
   (a : t259b__ref) : t259b =
  a.t259b__content
 
 meta "model_projection" function t259b__ref___projection
 
 meta "inline : no" function t259b__ref___projection
 
 val t259b__havoc 
   (x : t259b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:502, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 502 0 0#"model_projected" "name:Inst" "model_trace:31530" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:502, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mem" defined at machine.adb:502, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function mem #"machine.adb" 502 0 0#"model_projected" "name:Mem" "model_trace:31551" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:502, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S262b" defined at machine.adb:502, created in Gnat2Why.Types.Translate_Type *)
module Machine__performldr__S262b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s262b =
  __rep
 
 predicate in_range #"machine.adb" 502 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 502 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 502 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 502 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 502 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s262b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s262b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s262b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s262b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s262b) (b : s262b) : bool
 
 function dummy 
   : s262b
 
 type s262b__ref =
  { mutable s262b__content "model_trace:" "name:" : s262b }
 
 function s262b__ref___projection 
   (a : s262b__ref) : s262b =
  a.s262b__content
 
 meta "model_projection" function s262b__ref___projection
 
 meta "inline : no" function s262b__ref___projection
 
 val s262b__havoc 
   (x : s262b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C263b" defined at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__C263b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c263b #"machine.adb" 504 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C268b" defined at machine.adb:322 instantiated at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__B267b__C268b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c268b #"machine.adb" 322 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C272b" defined at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__C272b
 use import "_gnatprove_standard".Main

 function c272b #"machine.adb" 504 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T276b" defined at machine.adb:507, created in Gnat2Why.Types.Translate_Type *)
module Machine__performldr__T276b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t276b =
  __rep
 
 predicate in_range #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 507 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 507 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 507 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t276b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t276b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t276b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t276b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t276b) (b : t276b) : bool
 
 function dummy 
   : t276b
 
 type t276b__ref =
  { mutable t276b__content "model_trace:" "name:" : t276b }
 
 function t276b__ref___projection 
   (a : t276b__ref) : t276b =
  a.t276b__content
 
 meta "model_projection" function t276b__ref___projection
 
 meta "inline : no" function t276b__ref___projection
 
 val t276b__havoc 
   (x : t276b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T277b" defined at machine.adb:511, created in Gnat2Why.Types.Translate_Type *)
module Machine__performldr__T277b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t277b =
  __rep
 
 predicate in_range #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 511 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 511 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 511 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t277b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t277b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t277b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t277b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t277b) (b : t277b) : bool
 
 function dummy 
   : t277b
 
 type t277b__ref =
  { mutable t277b__content "model_trace:" "name:" : t277b }
 
 function t277b__ref___projection 
   (a : t277b__ref) : t277b =
  a.t277b__content
 
 meta "model_projection" function t277b__ref___projection
 
 meta "inline : no" function t277b__ref___projection
 
 val t277b__havoc 
   (x : t277b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:520, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 520 0 0#"model_projected" "name:Inst" "model_trace:32816" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:520, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:520, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 520 0 0#"model_projected" "name:Regs" "model_trace:32830" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:520, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S280b" defined at machine.adb:520, created in Gnat2Why.Types.Translate_Type *)
module Machine__performstr__S280b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s280b =
  __rep
 
 predicate in_range #"machine.adb" 520 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 520 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 520 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 520 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 520 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s280b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s280b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s280b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s280b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s280b) (b : s280b) : bool
 
 function dummy 
   : s280b
 
 type s280b__ref =
  { mutable s280b__content "model_trace:" "name:" : s280b }
 
 function s280b__ref___projection 
   (a : s280b__ref) : s280b =
  a.s280b__content
 
 meta "model_projection" function s280b__ref___projection
 
 meta "inline : no" function s280b__ref___projection
 
 val s280b__havoc 
   (x : s280b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C281b" defined at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__C281b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c281b #"machine.adb" 522 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C286b" defined at machine.adb:332 instantiated at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__B285b__C286b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c286b #"machine.adb" 332 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C290b" defined at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__C290b
 use import "_gnatprove_standard".Main

 function c290b #"machine.adb" 522 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T294b" defined at machine.adb:526, created in Gnat2Why.Types.Translate_Type *)
module Machine__performstr__T294b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t294b =
  __rep
 
 predicate in_range #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 526 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 526 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 526 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t294b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t294b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t294b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t294b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t294b) (b : t294b) : bool
 
 function dummy 
   : t294b
 
 type t294b__ref =
  { mutable t294b__content "model_trace:" "name:" : t294b }
 
 function t294b__ref___projection 
   (a : t294b__ref) : t294b =
  a.t294b__content
 
 meta "model_projection" function t294b__ref___projection
 
 meta "inline : no" function t294b__ref___projection
 
 val t294b__havoc 
   (x : t294b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T295b" defined at machine.adb:531, created in Gnat2Why.Types.Translate_Type *)
module Machine__performstr__T295b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t295b =
  __rep
 
 predicate in_range #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 531 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 531 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 531 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t295b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t295b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t295b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t295b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t295b) (b : t295b) : bool
 
 function dummy 
   : t295b
 
 type t295b__ref =
  { mutable t295b__content "model_trace:" "name:" : t295b }
 
 function t295b__ref___projection 
   (a : t295b__ref) : t295b =
  a.t295b__content
 
 meta "model_projection" function t295b__ref___projection
 
 meta "inline : no" function t295b__ref___projection
 
 val t295b__havoc 
   (x : t295b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:540, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 540 0 0#"model_projected" "name:Inst" "model_trace:34028" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:540, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S297b" defined at machine.adb:540, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmov__S297b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s297b =
  __rep
 
 predicate in_range #"machine.adb" 540 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 540 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 540 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 540 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 540 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s297b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s297b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s297b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s297b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s297b) (b : s297b) : bool
 
 function dummy 
   : s297b
 
 type s297b__ref =
  { mutable s297b__content "model_trace:" "name:" : s297b }
 
 function s297b__ref___projection 
   (a : s297b__ref) : s297b =
  a.s297b__content
 
 meta "model_projection" function s297b__ref___projection
 
 meta "inline : no" function s297b__ref___projection
 
 val s297b__havoc 
   (x : s297b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C298b" defined at machine.adb:542, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__C298b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c298b #"machine.adb" 542 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C302b" defined at machine.adb:542, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__C302b
 use import "_gnatprove_standard".Main

 function c302b #"machine.adb" 542 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T306b" defined at machine.adb:544, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmov__T306b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t306b =
  __rep
 
 predicate in_range #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 544 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 544 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 544 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t306b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t306b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t306b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t306b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t306b) (b : t306b) : bool
 
 function dummy 
   : t306b
 
 type t306b__ref =
  { mutable t306b__content "model_trace:" "name:" : t306b }
 
 function t306b__ref___projection 
   (a : t306b__ref) : t306b =
  a.t306b__content
 
 meta "model_projection" function t306b__ref___projection
 
 meta "inline : no" function t306b__ref___projection
 
 val t306b__havoc 
   (x : t306b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:558, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 558 0 0#"model_projected" "name:Inst" "model_trace:34893" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:558, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S307b" defined at machine.adb:558, created in Gnat2Why.Types.Translate_Type *)
module Machine__performjmp__S307b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s307b =
  __rep
 
 predicate in_range #"machine.adb" 558 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 558 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 558 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 558 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 558 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s307b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s307b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s307b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s307b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s307b) (b : s307b) : bool
 
 function dummy 
   : s307b
 
 type s307b__ref =
  { mutable s307b__content "model_trace:" "name:" : s307b }
 
 function s307b__ref___projection 
   (a : s307b__ref) : s307b =
  a.s307b__content
 
 meta "model_projection" function s307b__ref___projection
 
 meta "inline : no" function s307b__ref___projection
 
 val s307b__havoc 
   (x : s307b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C308b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C308b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c308b #"machine.adb" 560 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C309b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C309b
 use import "_gnatprove_standard".Main

 function c309b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C313b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C313b
 use import "_gnatprove_standard".Main

 function c313b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C314b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C314b
 use import "_gnatprove_standard".Main

 function c314b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:567, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 567 0 0#"model_projected" "name:Inst" "model_trace:35564" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:567, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:567, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 567 0 0#"model_projected" "name:Regs" "model_trace:35578" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:567, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S318b" defined at machine.adb:567, created in Gnat2Why.Types.Translate_Type *)
module Machine__performjz__S318b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s318b =
  __rep
 
 predicate in_range #"machine.adb" 567 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 567 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 567 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 567 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 567 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s318b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s318b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s318b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s318b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s318b) (b : s318b) : bool
 
 function dummy 
   : s318b
 
 type s318b__ref =
  { mutable s318b__content "model_trace:" "name:" : s318b }
 
 function s318b__ref___projection 
   (a : s318b__ref) : s318b =
  a.s318b__content
 
 meta "model_projection" function s318b__ref___projection
 
 meta "inline : no" function s318b__ref___projection
 
 val s318b__havoc 
   (x : s318b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C319b" defined at machine.adb:569, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C319b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c319b #"machine.adb" 569 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C320b" defined at machine.adb:569, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C320b
 use import "_gnatprove_standard".Main

 function c320b #"machine.adb" 569 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C325b" defined at machine.adb:572, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C325b
 use import "_gnatprove_standard".Main

 function c325b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C326b" defined at machine.adb:572, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C326b
 use import "_gnatprove_standard".Main

 function c326b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C330b" defined at machine.adb:578, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C330b
 use import "_gnatprove_standard".Main

 function c330b #"machine.adb" 578 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C334b" defined at machine.adb:584, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C334b
 use import "_gnatprove_standard".Main

 function c334b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C335b" defined at machine.adb:584, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C335b
 use import "_gnatprove_standard".Main

 function c335b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C339b" defined at machine.adb:590, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C339b
 use import "_gnatprove_standard".Main

 function c339b #"machine.adb" 590 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C343b" defined at machine.adb:601, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performnop__C343b
 use import "_gnatprove_standard".Main

 function c343b #"machine.adb" 601 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "prog" defined at machine.adb:608, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.adb" 608 0 0#"model_projected" "name:Prog" "model_trace:37465" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.adb:608, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.adb:608, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.adb" 608 0 0#"model" "name:Cycles" "model_trace:37472" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.adb:608, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T355b" defined at machine.adb:617, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T355b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t355b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t355b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t355b__ref =
  { mutable t355b__content "model_trace:" "name:" : t355b }
 
 function t355b__ref___projection 
   (a : t355b__ref) : t355b =
  a.t355b__content
 
 meta "model_projection" function t355b__ref___projection
 
 meta "inline : no" function t355b__ref___projection
 
 val t355b__havoc 
   (x : t355b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T355b" defined at machine.adb:617, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T355b__rep
 use        Machine__dynamicanalysis__T355b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__dynamicanalysis__T355b.t355b) : int =
  (Machine__dynamicanalysis__T355b.t355b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__dynamicanalysis__T355b.t355b, 
 predicate in_range = Machine__dynamicanalysis__T355b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T356b" defined at machine.adb:617, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T356b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T354b" defined at machine.adb:617, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T354b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t354b =
  __rep
 
 predicate in_range #"machine.adb" 617 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 617 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 617 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 617 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 617 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t354b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t354b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t354b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t354b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function user_eq 
   (a : t354b) (b : t354b) : bool
 
 function dummy 
   : t354b
 
 type t354b__ref =
  { mutable t354b__content "model_trace:" "name:" : t354b }
 
 function t354b__ref___projection 
   (a : t354b__ref) : t354b =
  a.t354b__content
 
 meta "model_projection" function t354b__ref___projection
 
 meta "inline : no" function t354b__ref___projection
 
 val t354b__havoc 
   (x : t354b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T358b" defined at machine.adb:618, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T358b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t358b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t358b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t358b__ref =
  { mutable t358b__content "model_trace:" "name:" : t358b }
 
 function t358b__ref___projection 
   (a : t358b__ref) : t358b =
  a.t358b__content
 
 meta "model_projection" function t358b__ref___projection
 
 meta "inline : no" function t358b__ref___projection
 
 val t358b__havoc 
   (x : t358b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T358b" defined at machine.adb:618, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T358b__rep
 use        Machine__dynamicanalysis__T358b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__dynamicanalysis__T358b.t358b) : int =
  (Machine__dynamicanalysis__T358b.t358b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__dynamicanalysis__T358b.t358b, 
 predicate in_range = Machine__dynamicanalysis__T358b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T359b" defined at machine.adb:618, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T359b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T357b" defined at machine.adb:618, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T357b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t357b =
  __rep
 
 predicate in_range #"machine.adb" 618 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 618 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 618 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 618 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 618 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t357b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t357b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t357b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t357b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function user_eq 
   (a : t357b) (b : t357b) : bool
 
 function dummy 
   : t357b
 
 type t357b__ref =
  { mutable t357b__content "model_trace:" "name:" : t357b }
 
 function t357b__ref___projection 
   (a : t357b__ref) : t357b =
  a.t357b__content
 
 meta "model_projection" function t357b__ref___projection
 
 meta "inline : no" function t357b__ref___projection
 
 val t357b__havoc 
   (x : t357b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C360b" defined at machine.adb:619, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C360b
 use import "_gnatprove_standard".Main

 function c360b #"machine.adb" 619 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C361b" defined at machine.adb:619, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C361b
 use import "_gnatprove_standard".Main

 function c361b #"machine.adb" 619 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C365b" defined at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C365b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c365b #"machine.adb" 631 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C370b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B369b__C370b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c370b #"machine.adb" 420 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C375b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B369b__B374b__C375b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c375b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C379b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B369b__B374b__C379b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c379b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C383b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B369b__C383b
 use import "_gnatprove_standard".Main

 function c383b #"machine.adb" 420 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T387b" defined at machine.adb:423 instantiated at machine.adb:631, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B369b__T387b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t387b =
  __rep
 
 predicate in_range #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 423 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 423 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 423 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t387b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t387b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t387b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t387b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t387b) (b : t387b) : bool
 
 function dummy 
   : t387b
 
 type t387b__ref =
  { mutable t387b__content "model_trace:" "name:" : t387b }
 
 function t387b__ref___projection 
   (a : t387b__ref) : t387b =
  a.t387b__content
 
 meta "model_projection" function t387b__ref___projection
 
 meta "inline : no" function t387b__ref___projection
 
 val t387b__havoc 
   (x : t387b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T388b" defined at machine.adb:427 instantiated at machine.adb:631, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B369b__T388b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t388b =
  __rep
 
 predicate in_range #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 427 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 427 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 427 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t388b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t388b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t388b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t388b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t388b) (b : t388b) : bool
 
 function dummy 
   : t388b
 
 type t388b__ref =
  { mutable t388b__content "model_trace:" "name:" : t388b }
 
 function t388b__ref___projection 
   (a : t388b__ref) : t388b =
  a.t388b__content
 
 meta "model_projection" function t388b__ref___projection
 
 meta "inline : no" function t388b__ref___projection
 
 val t388b__havoc 
   (x : t388b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T389b" defined at machine.adb:431 instantiated at machine.adb:631, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B369b__T389b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t389b =
  __rep
 
 predicate in_range #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 431 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 431 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 431 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t389b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t389b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t389b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t389b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t389b) (b : t389b) : bool
 
 function dummy 
   : t389b
 
 type t389b__ref =
  { mutable t389b__content "model_trace:" "name:" : t389b }
 
 function t389b__ref___projection 
   (a : t389b__ref) : t389b =
  a.t389b__content
 
 meta "model_projection" function t389b__ref___projection
 
 meta "inline : no" function t389b__ref___projection
 
 val t389b__havoc 
   (x : t389b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C390b" defined at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C390b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c390b #"machine.adb" 633 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C395b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B394b__C395b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c395b #"machine.adb" 442 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C400b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B394b__B399b__C400b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c400b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C404b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B394b__B399b__C404b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c404b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C408b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B394b__C408b
 use import "_gnatprove_standard".Main

 function c408b #"machine.adb" 442 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T412b" defined at machine.adb:445 instantiated at machine.adb:633, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B394b__T412b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t412b =
  __rep
 
 predicate in_range #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 445 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 445 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 445 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t412b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t412b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t412b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t412b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t412b) (b : t412b) : bool
 
 function dummy 
   : t412b
 
 type t412b__ref =
  { mutable t412b__content "model_trace:" "name:" : t412b }
 
 function t412b__ref___projection 
   (a : t412b__ref) : t412b =
  a.t412b__content
 
 meta "model_projection" function t412b__ref___projection
 
 meta "inline : no" function t412b__ref___projection
 
 val t412b__havoc 
   (x : t412b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T413b" defined at machine.adb:449 instantiated at machine.adb:633, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B394b__T413b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t413b =
  __rep
 
 predicate in_range #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 449 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 449 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 449 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t413b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t413b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t413b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t413b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t413b) (b : t413b) : bool
 
 function dummy 
   : t413b
 
 type t413b__ref =
  { mutable t413b__content "model_trace:" "name:" : t413b }
 
 function t413b__ref___projection 
   (a : t413b__ref) : t413b =
  a.t413b__content
 
 meta "model_projection" function t413b__ref___projection
 
 meta "inline : no" function t413b__ref___projection
 
 val t413b__havoc 
   (x : t413b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T414b" defined at machine.adb:453 instantiated at machine.adb:633, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B394b__T414b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t414b =
  __rep
 
 predicate in_range #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 453 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 453 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 453 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t414b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t414b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t414b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t414b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t414b) (b : t414b) : bool
 
 function dummy 
   : t414b
 
 type t414b__ref =
  { mutable t414b__content "model_trace:" "name:" : t414b }
 
 function t414b__ref___projection 
   (a : t414b__ref) : t414b =
  a.t414b__content
 
 meta "model_projection" function t414b__ref___projection
 
 meta "inline : no" function t414b__ref___projection
 
 val t414b__havoc 
   (x : t414b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C415b" defined at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C415b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c415b #"machine.adb" 635 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C420b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B419b__C420b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c420b #"machine.adb" 464 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C425b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B419b__B424b__C425b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c425b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C429b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B419b__B424b__C429b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c429b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C433b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B419b__C433b
 use import "_gnatprove_standard".Main

 function c433b #"machine.adb" 464 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T437b" defined at machine.adb:467 instantiated at machine.adb:635, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B419b__T437b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t437b =
  __rep
 
 predicate in_range #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 467 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 467 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 467 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t437b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t437b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t437b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t437b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t437b) (b : t437b) : bool
 
 function dummy 
   : t437b
 
 type t437b__ref =
  { mutable t437b__content "model_trace:" "name:" : t437b }
 
 function t437b__ref___projection 
   (a : t437b__ref) : t437b =
  a.t437b__content
 
 meta "model_projection" function t437b__ref___projection
 
 meta "inline : no" function t437b__ref___projection
 
 val t437b__havoc 
   (x : t437b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T438b" defined at machine.adb:471 instantiated at machine.adb:635, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B419b__T438b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t438b =
  __rep
 
 predicate in_range #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 471 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 471 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 471 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t438b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t438b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t438b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t438b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t438b) (b : t438b) : bool
 
 function dummy 
   : t438b
 
 type t438b__ref =
  { mutable t438b__content "model_trace:" "name:" : t438b }
 
 function t438b__ref___projection 
   (a : t438b__ref) : t438b =
  a.t438b__content
 
 meta "model_projection" function t438b__ref___projection
 
 meta "inline : no" function t438b__ref___projection
 
 val t438b__havoc 
   (x : t438b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T439b" defined at machine.adb:475 instantiated at machine.adb:635, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B419b__T439b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t439b =
  __rep
 
 predicate in_range #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 475 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 475 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 475 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t439b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t439b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t439b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t439b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t439b) (b : t439b) : bool
 
 function dummy 
   : t439b
 
 type t439b__ref =
  { mutable t439b__content "model_trace:" "name:" : t439b }
 
 function t439b__ref___projection 
   (a : t439b__ref) : t439b =
  a.t439b__content
 
 meta "model_projection" function t439b__ref___projection
 
 meta "inline : no" function t439b__ref___projection
 
 val t439b__havoc 
   (x : t439b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C440b" defined at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C440b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c440b #"machine.adb" 637 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C445b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B444b__C445b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c445b #"machine.adb" 486 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C450b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B444b__B449b__C450b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c450b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C454b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B444b__B449b__C454b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c454b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C458b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B444b__C458b
 use import "_gnatprove_standard".Main

 function c458b #"machine.adb" 486 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T462b" defined at machine.adb:489 instantiated at machine.adb:637, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B444b__T462b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t462b =
  __rep
 
 predicate in_range #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 489 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 489 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 489 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t462b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t462b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t462b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t462b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t462b) (b : t462b) : bool
 
 function dummy 
   : t462b
 
 type t462b__ref =
  { mutable t462b__content "model_trace:" "name:" : t462b }
 
 function t462b__ref___projection 
   (a : t462b__ref) : t462b =
  a.t462b__content
 
 meta "model_projection" function t462b__ref___projection
 
 meta "inline : no" function t462b__ref___projection
 
 val t462b__havoc 
   (x : t462b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T463b" defined at machine.adb:493 instantiated at machine.adb:637, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B444b__T463b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t463b =
  __rep
 
 predicate in_range #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 493 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 493 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 493 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t463b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t463b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t463b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t463b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t463b) (b : t463b) : bool
 
 function dummy 
   : t463b
 
 type t463b__ref =
  { mutable t463b__content "model_trace:" "name:" : t463b }
 
 function t463b__ref___projection 
   (a : t463b__ref) : t463b =
  a.t463b__content
 
 meta "model_projection" function t463b__ref___projection
 
 meta "inline : no" function t463b__ref___projection
 
 val t463b__havoc 
   (x : t463b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C464b" defined at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C464b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c464b #"machine.adb" 639 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C470b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B469b__C470b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c470b #"machine.adb" 504 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C475b" defined at machine.adb:322 instantiated at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B469b__B474b__C475b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c475b #"machine.adb" 322 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C479b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B469b__C479b
 use import "_gnatprove_standard".Main

 function c479b #"machine.adb" 504 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T483b" defined at machine.adb:507 instantiated at machine.adb:639, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B469b__T483b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t483b =
  __rep
 
 predicate in_range #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 507 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 507 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 507 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t483b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t483b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t483b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t483b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t483b) (b : t483b) : bool
 
 function dummy 
   : t483b
 
 type t483b__ref =
  { mutable t483b__content "model_trace:" "name:" : t483b }
 
 function t483b__ref___projection 
   (a : t483b__ref) : t483b =
  a.t483b__content
 
 meta "model_projection" function t483b__ref___projection
 
 meta "inline : no" function t483b__ref___projection
 
 val t483b__havoc 
   (x : t483b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T484b" defined at machine.adb:511 instantiated at machine.adb:639, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B469b__T484b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t484b =
  __rep
 
 predicate in_range #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 511 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 511 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 511 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t484b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t484b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t484b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t484b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t484b) (b : t484b) : bool
 
 function dummy 
   : t484b
 
 type t484b__ref =
  { mutable t484b__content "model_trace:" "name:" : t484b }
 
 function t484b__ref___projection 
   (a : t484b__ref) : t484b =
  a.t484b__content
 
 meta "model_projection" function t484b__ref___projection
 
 meta "inline : no" function t484b__ref___projection
 
 val t484b__havoc 
   (x : t484b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C485b" defined at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C485b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c485b #"machine.adb" 641 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C491b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B490b__C491b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c491b #"machine.adb" 522 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C496b" defined at machine.adb:332 instantiated at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B490b__B495b__C496b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c496b #"machine.adb" 332 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C500b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B490b__C500b
 use import "_gnatprove_standard".Main

 function c500b #"machine.adb" 522 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T504b" defined at machine.adb:526 instantiated at machine.adb:641, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B490b__T504b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t504b =
  __rep
 
 predicate in_range #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 526 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 526 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 526 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t504b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t504b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t504b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t504b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t504b) (b : t504b) : bool
 
 function dummy 
   : t504b
 
 type t504b__ref =
  { mutable t504b__content "model_trace:" "name:" : t504b }
 
 function t504b__ref___projection 
   (a : t504b__ref) : t504b =
  a.t504b__content
 
 meta "model_projection" function t504b__ref___projection
 
 meta "inline : no" function t504b__ref___projection
 
 val t504b__havoc 
   (x : t504b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T505b" defined at machine.adb:531 instantiated at machine.adb:641, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B490b__T505b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t505b =
  __rep
 
 predicate in_range #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 531 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 531 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 531 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t505b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t505b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t505b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t505b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t505b) (b : t505b) : bool
 
 function dummy 
   : t505b
 
 type t505b__ref =
  { mutable t505b__content "model_trace:" "name:" : t505b }
 
 function t505b__ref___projection 
   (a : t505b__ref) : t505b =
  a.t505b__content
 
 meta "model_projection" function t505b__ref___projection
 
 meta "inline : no" function t505b__ref___projection
 
 val t505b__havoc 
   (x : t505b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C506b" defined at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C506b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c506b #"machine.adb" 643 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C511b" defined at machine.adb:542 instantiated at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B510b__C511b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c511b #"machine.adb" 542 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C515b" defined at machine.adb:542 instantiated at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B510b__C515b
 use import "_gnatprove_standard".Main

 function c515b #"machine.adb" 542 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T519b" defined at machine.adb:544 instantiated at machine.adb:643, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__L_2__B510b__T519b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t519b =
  __rep
 
 predicate in_range #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 544 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 544 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 544 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t519b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t519b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t519b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t519b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t519b) (b : t519b) : bool
 
 function dummy 
   : t519b
 
 type t519b__ref =
  { mutable t519b__content "model_trace:" "name:" : t519b }
 
 function t519b__ref___projection 
   (a : t519b__ref) : t519b =
  a.t519b__content
 
 meta "model_projection" function t519b__ref___projection
 
 meta "inline : no" function t519b__ref___projection
 
 val t519b__havoc 
   (x : t519b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C522b" defined at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C522b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c522b #"machine.adb" 648 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C526b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B525b__C526b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c526b #"machine.adb" 560 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C527b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B525b__C527b
 use import "_gnatprove_standard".Main

 function c527b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C531b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B525b__C531b
 use import "_gnatprove_standard".Main

 function c531b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C532b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B525b__C532b
 use import "_gnatprove_standard".Main

 function c532b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C536b" defined at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C536b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c536b #"machine.adb" 650 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C541b" defined at machine.adb:569 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C541b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c541b #"machine.adb" 569 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C542b" defined at machine.adb:569 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C542b
 use import "_gnatprove_standard".Main

 function c542b #"machine.adb" 569 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C547b" defined at machine.adb:572 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C547b
 use import "_gnatprove_standard".Main

 function c547b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C548b" defined at machine.adb:572 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C548b
 use import "_gnatprove_standard".Main

 function c548b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C552b" defined at machine.adb:578 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C552b
 use import "_gnatprove_standard".Main

 function c552b #"machine.adb" 578 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C556b" defined at machine.adb:584 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C556b
 use import "_gnatprove_standard".Main

 function c556b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C557b" defined at machine.adb:584 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C557b
 use import "_gnatprove_standard".Main

 function c557b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C561b" defined at machine.adb:590 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B540b__C561b
 use import "_gnatprove_standard".Main

 function c561b #"machine.adb" 590 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C568b" defined at machine.adb:601 instantiated at machine.adb:652, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B567b__C568b
 use import "_gnatprove_standard".Main

 function c568b #"machine.adb" 601 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C575b" defined at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__C575b
 use import "_gnatprove_standard".Main

 function c575b #"machine.adb" 807 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T579b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T579b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t579b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t579b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t579b__ref =
  { mutable t579b__content "model_trace:" "name:" : t579b }
 
 function t579b__ref___projection 
   (a : t579b__ref) : t579b =
  a.t579b__content
 
 meta "model_projection" function t579b__ref___projection
 
 meta "inline : no" function t579b__ref___projection
 
 val t579b__havoc 
   (x : t579b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T579b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T579b__rep
 use        Machine__detectinvalidbehaviour__R573b__B577b__T579b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__detectinvalidbehaviour__R573b__B577b__T579b.t579b) : int =
  (Machine__detectinvalidbehaviour__R573b__B577b__T579b.t579b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__detectinvalidbehaviour__R573b__B577b__T579b.t579b, 
 predicate in_range = Machine__detectinvalidbehaviour__R573b__B577b__T579b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T580b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T580b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T578b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T578b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t578b =
  __rep
 
 predicate in_range #"machine.adb" 617 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 617 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 617 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 617 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 617 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t578b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t578b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t578b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t578b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function user_eq 
   (a : t578b) (b : t578b) : bool
 
 function dummy 
   : t578b
 
 type t578b__ref =
  { mutable t578b__content "model_trace:" "name:" : t578b }
 
 function t578b__ref___projection 
   (a : t578b__ref) : t578b =
  a.t578b__content
 
 meta "model_projection" function t578b__ref___projection
 
 meta "inline : no" function t578b__ref___projection
 
 val t578b__havoc 
   (x : t578b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T582b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T582b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t582b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t582b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t582b__ref =
  { mutable t582b__content "model_trace:" "name:" : t582b }
 
 function t582b__ref___projection 
   (a : t582b__ref) : t582b =
  a.t582b__content
 
 meta "model_projection" function t582b__ref___projection
 
 meta "inline : no" function t582b__ref___projection
 
 val t582b__havoc 
   (x : t582b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T582b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T582b__rep
 use        Machine__detectinvalidbehaviour__R573b__B577b__T582b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__detectinvalidbehaviour__R573b__B577b__T582b.t582b) : int =
  (Machine__detectinvalidbehaviour__R573b__B577b__T582b.t582b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__detectinvalidbehaviour__R573b__B577b__T582b.t582b, 
 predicate in_range = Machine__detectinvalidbehaviour__R573b__B577b__T582b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T583b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T583b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T581b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__T581b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t581b =
  __rep
 
 predicate in_range #"machine.adb" 618 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 618 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 618 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 618 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 618 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t581b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t581b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t581b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t581b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function user_eq 
   (a : t581b) (b : t581b) : bool
 
 function dummy 
   : t581b
 
 type t581b__ref =
  { mutable t581b__content "model_trace:" "name:" : t581b }
 
 function t581b__ref___projection 
   (a : t581b__ref) : t581b =
  a.t581b__content
 
 meta "model_projection" function t581b__ref___projection
 
 meta "inline : no" function t581b__ref___projection
 
 val t581b__havoc 
   (x : t581b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C584b" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b
 use import "_gnatprove_standard".Main

 function c584b #"machine.adb" 619 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C585b" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b
 use import "_gnatprove_standard".Main

 function c585b #"machine.adb" 619 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C589b" defined at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c589b #"machine.adb" 631 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C594b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c594b #"machine.adb" 420 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C599b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c599b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C603b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c603b #"machine.adb" 237 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C607b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b
 use import "_gnatprove_standard".Main

 function c607b #"machine.adb" 420 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T611b" defined at machine.adb:423 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t611b =
  __rep
 
 predicate in_range #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 423 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 423 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 423 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 423 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t611b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t611b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t611b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t611b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t611b) (b : t611b) : bool
 
 function dummy 
   : t611b
 
 type t611b__ref =
  { mutable t611b__content "model_trace:" "name:" : t611b }
 
 function t611b__ref___projection 
   (a : t611b__ref) : t611b =
  a.t611b__content
 
 meta "model_projection" function t611b__ref___projection
 
 meta "inline : no" function t611b__ref___projection
 
 val t611b__havoc 
   (x : t611b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T612b" defined at machine.adb:427 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t612b =
  __rep
 
 predicate in_range #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 427 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 427 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 427 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 427 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t612b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t612b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t612b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t612b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t612b) (b : t612b) : bool
 
 function dummy 
   : t612b
 
 type t612b__ref =
  { mutable t612b__content "model_trace:" "name:" : t612b }
 
 function t612b__ref___projection 
   (a : t612b__ref) : t612b =
  a.t612b__content
 
 meta "model_projection" function t612b__ref___projection
 
 meta "inline : no" function t612b__ref___projection
 
 val t612b__havoc 
   (x : t612b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T613b" defined at machine.adb:431 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t613b =
  __rep
 
 predicate in_range #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 431 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 431 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 431 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 431 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t613b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t613b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t613b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t613b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t613b) (b : t613b) : bool
 
 function dummy 
   : t613b
 
 type t613b__ref =
  { mutable t613b__content "model_trace:" "name:" : t613b }
 
 function t613b__ref___projection 
   (a : t613b__ref) : t613b =
  a.t613b__content
 
 meta "model_projection" function t613b__ref___projection
 
 meta "inline : no" function t613b__ref___projection
 
 val t613b__havoc 
   (x : t613b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C614b" defined at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c614b #"machine.adb" 633 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C619b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c619b #"machine.adb" 442 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C624b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c624b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C628b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c628b #"machine.adb" 255 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C632b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b
 use import "_gnatprove_standard".Main

 function c632b #"machine.adb" 442 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T636b" defined at machine.adb:445 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t636b =
  __rep
 
 predicate in_range #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 445 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 445 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 445 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 445 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t636b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t636b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t636b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t636b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t636b) (b : t636b) : bool
 
 function dummy 
   : t636b
 
 type t636b__ref =
  { mutable t636b__content "model_trace:" "name:" : t636b }
 
 function t636b__ref___projection 
   (a : t636b__ref) : t636b =
  a.t636b__content
 
 meta "model_projection" function t636b__ref___projection
 
 meta "inline : no" function t636b__ref___projection
 
 val t636b__havoc 
   (x : t636b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T637b" defined at machine.adb:449 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t637b =
  __rep
 
 predicate in_range #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 449 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 449 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 449 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 449 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t637b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t637b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t637b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t637b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t637b) (b : t637b) : bool
 
 function dummy 
   : t637b
 
 type t637b__ref =
  { mutable t637b__content "model_trace:" "name:" : t637b }
 
 function t637b__ref___projection 
   (a : t637b__ref) : t637b =
  a.t637b__content
 
 meta "model_projection" function t637b__ref___projection
 
 meta "inline : no" function t637b__ref___projection
 
 val t637b__havoc 
   (x : t637b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T638b" defined at machine.adb:453 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t638b =
  __rep
 
 predicate in_range #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 453 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 453 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 453 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 453 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t638b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t638b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t638b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t638b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t638b) (b : t638b) : bool
 
 function dummy 
   : t638b
 
 type t638b__ref =
  { mutable t638b__content "model_trace:" "name:" : t638b }
 
 function t638b__ref___projection 
   (a : t638b__ref) : t638b =
  a.t638b__content
 
 meta "model_projection" function t638b__ref___projection
 
 meta "inline : no" function t638b__ref___projection
 
 val t638b__havoc 
   (x : t638b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C639b" defined at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c639b #"machine.adb" 635 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C644b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c644b #"machine.adb" 464 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C649b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c649b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C653b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c653b #"machine.adb" 273 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C657b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b
 use import "_gnatprove_standard".Main

 function c657b #"machine.adb" 464 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T661b" defined at machine.adb:467 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t661b =
  __rep
 
 predicate in_range #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 467 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 467 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 467 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 467 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t661b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t661b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t661b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t661b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t661b) (b : t661b) : bool
 
 function dummy 
   : t661b
 
 type t661b__ref =
  { mutable t661b__content "model_trace:" "name:" : t661b }
 
 function t661b__ref___projection 
   (a : t661b__ref) : t661b =
  a.t661b__content
 
 meta "model_projection" function t661b__ref___projection
 
 meta "inline : no" function t661b__ref___projection
 
 val t661b__havoc 
   (x : t661b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T662b" defined at machine.adb:471 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t662b =
  __rep
 
 predicate in_range #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 471 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 471 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 471 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 471 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t662b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t662b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t662b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t662b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t662b) (b : t662b) : bool
 
 function dummy 
   : t662b
 
 type t662b__ref =
  { mutable t662b__content "model_trace:" "name:" : t662b }
 
 function t662b__ref___projection 
   (a : t662b__ref) : t662b =
  a.t662b__content
 
 meta "model_projection" function t662b__ref___projection
 
 meta "inline : no" function t662b__ref___projection
 
 val t662b__havoc 
   (x : t662b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T663b" defined at machine.adb:475 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t663b =
  __rep
 
 predicate in_range #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 475 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 475 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 475 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 475 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t663b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t663b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t663b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t663b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t663b) (b : t663b) : bool
 
 function dummy 
   : t663b
 
 type t663b__ref =
  { mutable t663b__content "model_trace:" "name:" : t663b }
 
 function t663b__ref___projection 
   (a : t663b__ref) : t663b =
  a.t663b__content
 
 meta "model_projection" function t663b__ref___projection
 
 meta "inline : no" function t663b__ref___projection
 
 val t663b__havoc 
   (x : t663b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C664b" defined at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c664b #"machine.adb" 637 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C669b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c669b #"machine.adb" 486 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C674b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c674b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C678b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c678b #"machine.adb" 303 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C682b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b
 use import "_gnatprove_standard".Main

 function c682b #"machine.adb" 486 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T686b" defined at machine.adb:489 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t686b =
  __rep
 
 predicate in_range #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 489 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 489 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 489 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 489 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t686b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t686b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t686b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t686b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t686b) (b : t686b) : bool
 
 function dummy 
   : t686b
 
 type t686b__ref =
  { mutable t686b__content "model_trace:" "name:" : t686b }
 
 function t686b__ref___projection 
   (a : t686b__ref) : t686b =
  a.t686b__content
 
 meta "model_projection" function t686b__ref___projection
 
 meta "inline : no" function t686b__ref___projection
 
 val t686b__havoc 
   (x : t686b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T687b" defined at machine.adb:493 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t687b =
  __rep
 
 predicate in_range #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 493 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 493 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 493 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 493 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t687b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t687b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t687b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t687b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t687b) (b : t687b) : bool
 
 function dummy 
   : t687b
 
 type t687b__ref =
  { mutable t687b__content "model_trace:" "name:" : t687b }
 
 function t687b__ref___projection 
   (a : t687b__ref) : t687b =
  a.t687b__content
 
 meta "model_projection" function t687b__ref___projection
 
 meta "inline : no" function t687b__ref___projection
 
 val t687b__havoc 
   (x : t687b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C688b" defined at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c688b #"machine.adb" 639 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C694b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c694b #"machine.adb" 504 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C699b" defined at machine.adb:322 instantiated at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c699b #"machine.adb" 322 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C703b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b
 use import "_gnatprove_standard".Main

 function c703b #"machine.adb" 504 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T707b" defined at machine.adb:507 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t707b =
  __rep
 
 predicate in_range #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 507 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 507 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 507 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 507 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t707b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t707b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t707b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t707b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t707b) (b : t707b) : bool
 
 function dummy 
   : t707b
 
 type t707b__ref =
  { mutable t707b__content "model_trace:" "name:" : t707b }
 
 function t707b__ref___projection 
   (a : t707b__ref) : t707b =
  a.t707b__content
 
 meta "model_projection" function t707b__ref___projection
 
 meta "inline : no" function t707b__ref___projection
 
 val t707b__havoc 
   (x : t707b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T708b" defined at machine.adb:511 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t708b =
  __rep
 
 predicate in_range #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 511 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 511 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 511 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 511 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t708b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t708b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t708b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t708b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t708b) (b : t708b) : bool
 
 function dummy 
   : t708b
 
 type t708b__ref =
  { mutable t708b__content "model_trace:" "name:" : t708b }
 
 function t708b__ref___projection 
   (a : t708b__ref) : t708b =
  a.t708b__content
 
 meta "model_projection" function t708b__ref___projection
 
 meta "inline : no" function t708b__ref___projection
 
 val t708b__havoc 
   (x : t708b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C709b" defined at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c709b #"machine.adb" 641 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C715b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c715b #"machine.adb" 522 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C720b" defined at machine.adb:332 instantiated at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b
 use import "_gnatprove_standard".Main
 use        Machine__dataval

 function c720b #"machine.adb" 332 0 0#
   : Machine__dataval.dataval
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C724b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b
 use import "_gnatprove_standard".Main

 function c724b #"machine.adb" 522 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T728b" defined at machine.adb:526 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t728b =
  __rep
 
 predicate in_range #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 526 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 526 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 526 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 526 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t728b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t728b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t728b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t728b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t728b) (b : t728b) : bool
 
 function dummy 
   : t728b
 
 type t728b__ref =
  { mutable t728b__content "model_trace:" "name:" : t728b }
 
 function t728b__ref___projection 
   (a : t728b__ref) : t728b =
  a.t728b__content
 
 meta "model_projection" function t728b__ref___projection
 
 meta "inline : no" function t728b__ref___projection
 
 val t728b__havoc 
   (x : t728b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T729b" defined at machine.adb:531 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t729b =
  __rep
 
 predicate in_range #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 531 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 531 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 531 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 531 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t729b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t729b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t729b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t729b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t729b) (b : t729b) : bool
 
 function dummy 
   : t729b
 
 type t729b__ref =
  { mutable t729b__content "model_trace:" "name:" : t729b }
 
 function t729b__ref___projection 
   (a : t729b__ref) : t729b =
  a.t729b__content
 
 meta "model_projection" function t729b__ref___projection
 
 meta "inline : no" function t729b__ref___projection
 
 val t729b__havoc 
   (x : t729b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C730b" defined at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c730b #"machine.adb" 643 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C735b" defined at machine.adb:542 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c735b #"machine.adb" 542 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C739b" defined at machine.adb:542 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b
 use import "_gnatprove_standard".Main

 function c739b #"machine.adb" 542 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T743b" defined at machine.adb:544 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b
 use export Machine__dataval__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 type t743b =
  __rep
 
 predicate in_range #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval)  =
  #"machine.adb" 544 0 0#(rec__machine__dataval__state = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state a.Machine__dataval.__split_discrs)))
 
 val range_check_ #"machine.adb" 544 0 0#
   (rec__machine__dataval__state : int) (a : Machine__dataval.dataval) : Machine__dataval.dataval
  requires { #"machine.adb" 544 0 0# (in_range rec__machine__dataval__state a) }
  ensures { #"machine.adb" 544 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : t743b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : t743b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : t743b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : t743b.
   ((object__alignment a) >= 0))
 
 function machine__dataval__state__first__bit 
   : int
 
 function machine__dataval__state__last__bit 
   : int
 
 function machine__dataval__state__position 
   : int
 
 axiom machine__dataval__state__first__bit_axiom :
  ((machine__dataval__state__first__bit ) >= 0)
 
 axiom machine__dataval__state__last__bit_axiom :
  ((machine__dataval__state__last__bit ) > (machine__dataval__state__first__bit ))
 
 axiom machine__dataval__state__position_axiom :
  ((machine__dataval__state__position ) >= 0)
 
 function machine__dataval__garbage__first__bit 
   : int
 
 function machine__dataval__garbage__last__bit 
   : int
 
 function machine__dataval__garbage__position 
   : int
 
 axiom machine__dataval__garbage__first__bit_axiom :
  ((machine__dataval__garbage__first__bit ) >= 0)
 
 axiom machine__dataval__garbage__last__bit_axiom :
  ((machine__dataval__garbage__last__bit ) > (machine__dataval__garbage__first__bit ))
 
 axiom machine__dataval__garbage__position_axiom :
  ((machine__dataval__garbage__position ) >= 0)
 
 function machine__dataval__value__first__bit 
   : int
 
 function machine__dataval__value__last__bit 
   : int
 
 function machine__dataval__value__position 
   : int
 
 axiom machine__dataval__value__first__bit_axiom :
  ((machine__dataval__value__first__bit ) >= 0)
 
 axiom machine__dataval__value__last__bit_axiom :
  ((machine__dataval__value__last__bit ) > (machine__dataval__value__first__bit ))
 
 axiom machine__dataval__value__position_axiom :
  ((machine__dataval__value__position ) >= 0)
 
 function user_eq 
   (a : t743b) (b : t743b) : bool
 
 function dummy 
   : t743b
 
 type t743b__ref =
  { mutable t743b__content "model_trace:" "name:" : t743b }
 
 function t743b__ref___projection 
   (a : t743b__ref) : t743b =
  a.t743b__content
 
 meta "model_projection" function t743b__ref___projection
 
 meta "inline : no" function t743b__ref___projection
 
 val t743b__havoc 
   (x : t743b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C746b" defined at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c746b #"machine.adb" 648 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C750b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c750b #"machine.adb" 560 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C751b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b
 use import "_gnatprove_standard".Main

 function c751b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C755b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b
 use import "_gnatprove_standard".Main

 function c755b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C756b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b
 use import "_gnatprove_standard".Main

 function c756b #"machine.adb" 560 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C760b" defined at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c760b #"machine.adb" 650 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C765b" defined at machine.adb:569 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c765b #"machine.adb" 569 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C766b" defined at machine.adb:569 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b
 use import "_gnatprove_standard".Main

 function c766b #"machine.adb" 569 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C771b" defined at machine.adb:572 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b
 use import "_gnatprove_standard".Main

 function c771b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C772b" defined at machine.adb:572 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b
 use import "_gnatprove_standard".Main

 function c772b #"machine.adb" 572 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C776b" defined at machine.adb:578 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b
 use import "_gnatprove_standard".Main

 function c776b #"machine.adb" 578 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C780b" defined at machine.adb:584 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b
 use import "_gnatprove_standard".Main

 function c780b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C781b" defined at machine.adb:584 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b
 use import "_gnatprove_standard".Main

 function c781b #"machine.adb" 584 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C785b" defined at machine.adb:590 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b
 use import "_gnatprove_standard".Main

 function c785b #"machine.adb" 590 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C792b" defined at machine.adb:601 instantiated at machine.adb:652 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b
 use import "_gnatprove_standard".Main

 function c792b #"machine.adb" 601 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end
(* Module for defining a ref holding the value of variable "inst" defined at instruction.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Instruction__generaterandominstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"instruction.ads" 74 0 0#"model_projected" "model_trace:7899" "name:Inst"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"instruction.ads" 74 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"instruction.ads" 74 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at instruction.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Instruction__generaterandominstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.ads:37, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.ads" 37 0 0#"model_projected" "model_trace:7352" "name:Ret"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.ads:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "result" defined at machine.ads:38, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__result
 use import "_gnatprove_standard".Main

 val result__ #"machine.ads" 38 0 0#"model_projected" "model_trace:7361" "name:Result"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "result" defined at machine.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__result___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:51, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__incpc__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 51 0 0#"model_projected" "name:Ret" "model_trace:11567"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__incpc__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:51, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__incpc__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 51 0 0#"model_projected" "model_trace:11581" "name:PC"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__incpc__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doadd__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 67 0 0#"model_projected" "name:Ret" "model_trace:11879"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doadd__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 67 0 0#"model_projected" "model_trace:11886" "name:Regs"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:80, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dosub__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 80 0 0#"model_projected" "name:Ret" "model_trace:12248"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:80, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dosub__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 80 0 0#"model_projected" "name:Regs" "model_trace:12255"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:93, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domul__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 93 0 0#"model_projected" "name:Ret" "model_trace:12617"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:93, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domul__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 93 0 0#"model_projected" "name:Regs" "model_trace:12624"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:106, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dodiv__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 106 0 0#"model_projected" "name:Ret" "model_trace:13060"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:106, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dodiv__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 106 0 0#"model_projected" "name:Regs" "model_trace:13067"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doldr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 118 0 0#"model_projected" "name:Ret" "model_trace:13403"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:118, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doldr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 118 0 0#"model_projected" "name:Regs" "model_trace:13410"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dostr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 131 0 0#"model_projected" "name:Ret" "model_trace:13821"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mem" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dostr__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val mem #"machine.adb" 131 0 0#"model_projected" "name:Mem" "model_trace:13835"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:144, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domov__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 144 0 0#"model_projected" "name:Ret" "model_trace:14228"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:144, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domov__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 144 0 0#"model_projected" "name:Regs" "model_trace:14235"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:158, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 158 0 0#"model_projected" "model_trace:3369" "name:CycleCount"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:160, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 160 0 0#"model_projected" "name:Inst" "model_trace:3379"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 160 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 160 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:160, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:162, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val regs #"machine.adb" 162 0 0#"model_projected" "name:Regs" "model_trace:3388"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mem" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 val mem #"machine.adb" 164 0 0#"model_projected" "name:Mem" "model_trace:3401"  : Array__Int__Machine__integerval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:164, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:166, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 166 0 0#"model_projected" "name:PC" "model_trace:3414"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:418, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 418 0 0#"model_projected" "name:PC" "model_trace:24840"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:418, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:418, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 418 0 0#"model_projected" "name:Regs" "model_trace:24847"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:418, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:418, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 418 0 0#"model_projected" "name:Ret" "model_trace:24854"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:418, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C172b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__C172b
 use import "_gnatprove_standard".Main

 val c172b #"machine.adb" 420 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C172b" defined at machine.adb:420, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__C172b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:440, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 440 0 0#"model_projected" "name:PC" "model_trace:26457"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:440, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:440, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 440 0 0#"model_projected" "name:Regs" "model_trace:26464"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:440, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:440, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 440 0 0#"model_projected" "name:Ret" "model_trace:26471"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:440, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C196b" defined at machine.adb:442, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__C196b
 use import "_gnatprove_standard".Main

 val c196b #"machine.adb" 442 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C196b" defined at machine.adb:442, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__C196b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:462, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 462 0 0#"model_projected" "name:PC" "model_trace:28077"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:462, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:462, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 462 0 0#"model_projected" "name:Regs" "model_trace:28084"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:462, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:462, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 462 0 0#"model_projected" "name:Ret" "model_trace:28091"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:462, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C220b" defined at machine.adb:464, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__C220b
 use import "_gnatprove_standard".Main

 val c220b #"machine.adb" 464 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C220b" defined at machine.adb:464, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__C220b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:484, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 484 0 0#"model_projected" "name:PC" "model_trace:30120"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:484, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:484, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 484 0 0#"model_projected" "name:Regs" "model_trace:30127"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:484, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:484, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 484 0 0#"model_projected" "name:Ret" "model_trace:30134"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:484, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C243b" defined at machine.adb:486, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__C243b
 use import "_gnatprove_standard".Main

 val c243b #"machine.adb" 486 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C243b" defined at machine.adb:486, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__C243b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:502, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 502 0 0#"model_projected" "name:PC" "model_trace:31537"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:502, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:502, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 502 0 0#"model_projected" "name:Regs" "model_trace:31544"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:502, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:502, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 502 0 0#"model_projected" "name:Ret" "model_trace:31558"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:502, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C265b" defined at machine.adb:504, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__C265b
 use import "_gnatprove_standard".Main

 val c265b #"machine.adb" 504 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C265b" defined at machine.adb:504, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__C265b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:520, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 520 0 0#"model_projected" "name:PC" "model_trace:32823"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:520, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mem" defined at machine.adb:520, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val mem #"machine.adb" 520 0 0#"model_projected" "name:Mem" "model_trace:32837"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:520, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:520, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 520 0 0#"model_projected" "name:Ret" "model_trace:32844"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:520, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C283b" defined at machine.adb:522, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__C283b
 use import "_gnatprove_standard".Main

 val c283b #"machine.adb" 522 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C283b" defined at machine.adb:522, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__C283b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:540, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 540 0 0#"model_projected" "name:PC" "model_trace:34035"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:540, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:540, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 540 0 0#"model_projected" "name:Regs" "model_trace:34042"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:540, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:540, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 540 0 0#"model_projected" "name:Ret" "model_trace:34049"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:540, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:552, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performret__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 552 0 0#"model_projected" "name:Ret" "model_trace:34788"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:552, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performret__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:558, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjmp__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 558 0 0#"model_projected" "name:PC" "model_trace:34900"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:558, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:558, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjmp__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 558 0 0#"model_projected" "name:Ret" "model_trace:34907"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:558, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:567, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjz__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 567 0 0#"model_projected" "name:PC" "model_trace:35571"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:567, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:567, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjz__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 567 0 0#"model_projected" "name:Ret" "model_trace:35585"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:567, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:599, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performnop__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 599 0 0#"model_projected" "name:PC" "model_trace:37171"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:599, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performnop__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:599, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performnop__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 599 0 0#"model_projected" "name:Ret" "model_trace:37178"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:599, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performnop__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:609, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 609 0 0#"model_projected" "name:CycleCount" "model_trace:6946"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:609, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:610, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 610 0 0#"model_projected" "name:Inst" "model_trace:6956"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 610 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 610 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:610, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:611, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 611 0 0#"model_projected" "name:PC" "model_trace:6965"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:611, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:612, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 612 0 0#"model_projected" "name:Regs" "model_trace:6977"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:612, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mem" defined at machine.adb:613, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val mem #"machine.adb" 613 0 0#"model_projected" "name:Mem" "model_trace:6986"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:613, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:614, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 614 0 0#"model_projected" "name:Ret" "model_trace:6995"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:614, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C372b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B369b__C372b
 use import "_gnatprove_standard".Main

 val c372b #"machine.adb" 420 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C372b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B369b__C372b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C397b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B394b__C397b
 use import "_gnatprove_standard".Main

 val c397b #"machine.adb" 442 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C397b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B394b__C397b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C422b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B419b__C422b
 use import "_gnatprove_standard".Main

 val c422b #"machine.adb" 464 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C422b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B419b__C422b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C447b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B444b__C447b
 use import "_gnatprove_standard".Main

 val c447b #"machine.adb" 486 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C447b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B444b__C447b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C472b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B469b__C472b
 use import "_gnatprove_standard".Main

 val c472b #"machine.adb" 504 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C472b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B469b__C472b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C493b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__L_2__B490b__C493b
 use import "_gnatprove_standard".Main

 val c493b #"machine.adb" 522 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C493b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2__B490b__C493b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:804, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 804 0 0#"model_projected" "name:Ret" "model_trace:7203"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:804, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:609 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 609 0 0#"model_projected" "name:CycleCount" "model_trace:46853"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:609 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:610 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 610 0 0#"model_projected" "name:Inst" "model_trace:46863"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 610 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 610 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:610 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:611 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 611 0 0#"model_projected" "name:PC" "model_trace:46872"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:611 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:612 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 612 0 0#"model_projected" "name:Regs" "model_trace:46883"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:612 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mem" defined at machine.adb:613 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__mem
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val mem #"machine.adb" 613 0 0#"model_projected" "name:Mem" "model_trace:46892"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "mem" defined at machine.adb:613 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__mem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:614 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 614 0 0#"model_projected" "name:Ret" "model_trace:46901"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:614 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C596b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b
 use import "_gnatprove_standard".Main

 val c596b #"machine.adb" 420 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C596b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C621b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b
 use import "_gnatprove_standard".Main

 val c621b #"machine.adb" 442 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C621b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C646b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b
 use import "_gnatprove_standard".Main

 val c646b #"machine.adb" 464 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C646b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C671b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b
 use import "_gnatprove_standard".Main

 val c671b #"machine.adb" 486 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C671b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C696b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b
 use import "_gnatprove_standard".Main

 val c696b #"machine.adb" 504 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C696b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C717b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b
 use import "_gnatprove_standard".Main

 val c717b #"machine.adb" 522 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C717b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b___axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_4)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool)  =
  (if (( temp___is_init_7 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_11)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant "inline" 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool)  =
  (if (( temp___is_init_14 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_18)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool)  =
  (if (( temp___is_init_21 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_25)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool)  =
  (if (( temp___is_init_28 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_32)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant "inline" 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool)  =
  (if (( temp___is_init_35 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_39)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant "inline" 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool)  =
  (if (( temp___is_init_42 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_46)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__short_float

 predicate dynamic_invariant "inline" 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool)  =
  (if (( temp___is_init_49 \/ (Float32.le Standard__short_float.first Standard__short_float.last) )) then (
   (Standard__short_float.dynamic_property Standard__short_float.first Standard__short_float.last temp___expr_53)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__float

 predicate dynamic_invariant "inline" 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool)  =
  (if (( temp___is_init_56 \/ (Float32.le Standard__float.first Standard__float.last) )) then (
   (Standard__float.dynamic_property Standard__float.first Standard__float.last temp___expr_60)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64
 use        Standard__long_float

 predicate dynamic_invariant "inline" 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool)  =
  (if (( temp___is_init_63 \/ (Float64.le Standard__long_float.first Standard__long_float.last) )) then (
   (Standard__long_float.dynamic_property Standard__long_float.first Standard__long_float.last temp___expr_67)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant "inline" 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool)  =
  (if (( temp___is_init_70 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_74)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant "inline" 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool)  =
  (if (( temp___is_init_77 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant "inline" 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool)  =
  (if (( temp___is_init_84 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_88)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant "inline" 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool)  =
  (if (temp___skip_constant_93) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_96) (Standard__string.last temp___expr_96))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant "inline" 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool)  =
  (if (temp___skip_constant_100) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_103) (Standard__wide_string.last temp___expr_103))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant "inline" 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool)  =
  (if (temp___skip_constant_107) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_110) (Standard__wide_wide_string.last temp___expr_110))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant "inline" 
   (temp___expr_116 : Standard__duration.duration) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_117 : Standard__duration.duration) (temp___skip_top_level_118 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant "inline" 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool)  =
  (if (( temp___is_init_119 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_123)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant "inline" 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool)  =
  (if (( temp___is_init_126 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_130)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant "inline" 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool)  =
  (if (( temp___is_init_133 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_137)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant "inline" 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool)  =
  (if (( temp___is_init_140 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_144)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool)  =
  (if (( temp___is_init_147 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_151)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "init" defined at instruction.ads:70, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "generaterandominstr" defined at instruction.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__generaterandominstr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "debugprintinstr" defined at instruction.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__debugprintinstr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at debug.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at debug.ads:8, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at debug.ads:12, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line" defined at debug.ads:16, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at debug.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Machine__executeprogram
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at machine.adb:172, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__executeprogram__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at machine.adb:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__L_1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at machine.adb:619, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__dynamicanalysis__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at machine.adb:619, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__opcode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode

 predicate dynamic_invariant "inline" 
   (temp___expr_161 : int) (temp___is_init_157 : bool) (temp___skip_constant_158 : bool) (temp___do_toplevel_159 : bool) (temp___do_typ_inv_160 : bool)  =
  (if (( temp___is_init_157 \/ (Instruction__opcode.first <= Instruction__opcode.last) )) then (
   (Instruction__opcode.dynamic_property Instruction__opcode.first Instruction__opcode.last temp___expr_161)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_162 : int) (temp___skip_top_level_163 : bool)  =
  true

end

(* Module giving axioms for type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__TregB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__reg___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__reg

 predicate dynamic_invariant "inline" 
   (temp___expr_168 : int) (temp___is_init_164 : bool) (temp___skip_constant_165 : bool) (temp___do_toplevel_166 : bool) (temp___do_typ_inv_167 : bool)  =
  (if (( temp___is_init_164 \/ (Instruction__reg.first <= Instruction__reg.last) )) then (
   (Instruction__reg.dynamic_property Instruction__reg.first Instruction__reg.last temp___expr_168)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_169 : int) (temp___skip_top_level_170 : bool)  =
  true

end

(* Module giving axioms for type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__TaddrB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__addr

 predicate dynamic_invariant "inline" 
   (temp___expr_175 : int) (temp___is_init_171 : bool) (temp___skip_constant_172 : bool) (temp___do_toplevel_173 : bool) (temp___do_typ_inv_174 : bool)  =
  (if (( temp___is_init_171 \/ (Instruction__addr.first <= Instruction__addr.last) )) then (
   (Instruction__addr.dynamic_property Instruction__addr.first Instruction__addr.last temp___expr_175)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_176 : int) (temp___skip_top_level_177 : bool)  =
  true

end

(* Module giving axioms for type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__ToffsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__offset

 predicate dynamic_invariant "inline" 
   (temp___expr_182 : int) (temp___is_init_178 : bool) (temp___skip_constant_179 : bool) (temp___do_toplevel_180 : bool) (temp___do_typ_inv_181 : bool)  =
  (if (( temp___is_init_178 \/ (Instruction__offset.first <= Instruction__offset.last) )) then (
   (Instruction__offset.dynamic_property Instruction__offset.first Instruction__offset.last temp___expr_182)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_183 : int) (temp___skip_top_level_184 : bool)  =
  true

end

(* Module giving axioms for type "instr" defined at instruction.ads:25, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__instr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 predicate dynamic_invariant "inline" 
   (temp___expr_189 : Instruction__instr.instr) (temp___is_init_185 : bool) (temp___skip_constant_186 : bool) (temp___do_toplevel_187 : bool) (temp___do_typ_inv_188 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_191 : Instruction__instr.instr) (temp___skip_top_level_192 : bool)  =
  ( ((Instruction__instr.attr__constrained temp___expr_191) = False) /\ (let temp___193 = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___expr_191)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___expr_191))) = 0)))
   )

end

(* Module giving axioms for type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__returncode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__returncode

 predicate dynamic_invariant "inline" 
   (temp___expr_226 : int) (temp___is_init_222 : bool) (temp___skip_constant_223 : bool) (temp___do_toplevel_224 : bool) (temp___do_typ_inv_225 : bool)  =
  (if (( temp___is_init_222 \/ (Machine__returncode.first <= Machine__returncode.last) )) then (
   (Machine__returncode.dynamic_property Machine__returncode.first Machine__returncode.last temp___expr_226)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_227 : int) (temp___skip_top_level_228 : bool)  =
  true

end

(* Module giving axioms for type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TprogramcounterB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__programcounter___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__programcounter

 predicate dynamic_invariant "inline" 
   (temp___expr_233 : int) (temp___is_init_229 : bool) (temp___skip_constant_230 : bool) (temp___do_toplevel_231 : bool) (temp___do_typ_inv_232 : bool)  =
  (if (( temp___is_init_229 \/ (Machine__programcounter.first <= Machine__programcounter.last) )) then (
   (Machine__programcounter.dynamic_property Machine__programcounter.first Machine__programcounter.last temp___expr_233)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_234 : int) (temp___skip_top_level_235 : bool)  =
  true

end

(* Module giving axioms for type "TprogramB" defined at machine.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TprogramB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "program" defined at machine.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__program___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__programcounter
 use        Array__Int__Instruction__instr
 use        Array__Int__Instruction__instr
 use        Array__Int__Instruction__instr

 predicate dynamic_invariant "inline" 
   (temp___expr_240 : Array__Int__Instruction__instr.map) (temp___is_init_236 : bool) (temp___skip_constant_237 : bool) (temp___do_toplevel_238 : bool) (temp___do_typ_inv_239 : bool)  =
  (forall temp___241   : int.
   (if (( (Machine__programcounter.first <= temp___241) /\ (temp___241 <= Machine__programcounter.last) )) then (
    ((Instruction__instr.attr__constrained (Array__Int__Instruction__instr.get temp___expr_240 temp___241)) = False)) else true))
 
 predicate default_initial_assumption "inline" 
   (temp___expr_243 : Array__Int__Instruction__instr.map) (temp___skip_top_level_244 : bool)  =
  (forall temp___245   : int.
   (if (( (Machine__programcounter.first <= temp___245) /\ (temp___245 <= Machine__programcounter.last) )) then (
    (let temp___246 = (Array__Int__Instruction__instr.get temp___expr_243 temp___245) in (
     ( ((Instruction__instr.attr__constrained temp___246) = False) /\ (let temp___247 = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs (Array__Int__Instruction__instr.get temp___expr_243 temp___245))) in (
      ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs (Array__Int__Instruction__instr.get temp___expr_243 temp___245)))) = 0)))
      )))
   ) else true))

end

(* Module giving axioms for type "TintegervalB" defined at machine.adb:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TintegervalB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integerval" defined at machine.adb:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__integerval___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__integerval

 predicate dynamic_invariant "inline" 
   (temp___expr_280 : int) (temp___is_init_276 : bool) (temp___skip_constant_277 : bool) (temp___do_toplevel_278 : bool) (temp___do_typ_inv_279 : bool)  =
  (if (( temp___is_init_276 \/ (Machine__integerval.first <= Machine__integerval.last) )) then (
   (Machine__integerval.dynamic_property Machine__integerval.first Machine__integerval.last temp___expr_280)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_281 : int) (temp___skip_top_level_282 : bool)  =
  true

end

(* Module giving axioms for type "datavalstates" defined at machine.adb:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__datavalstates___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates

 predicate dynamic_invariant "inline" 
   (temp___expr_287 : int) (temp___is_init_283 : bool) (temp___skip_constant_284 : bool) (temp___do_toplevel_285 : bool) (temp___do_typ_inv_286 : bool)  =
  (if (( temp___is_init_283 \/ (Machine__datavalstates.first <= Machine__datavalstates.last) )) then (
   (Machine__datavalstates.dynamic_property Machine__datavalstates.first Machine__datavalstates.last temp___expr_287)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_288 : int) (temp___skip_top_level_289 : bool)  =
  true

end

(* Module giving axioms for type "dataval" defined at machine.adb:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dataval___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_294 : Machine__dataval.dataval) (temp___is_init_290 : bool) (temp___skip_constant_291 : bool) (temp___do_toplevel_292 : bool) (temp___do_typ_inv_293 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_296 : Machine__dataval.dataval) (temp___skip_top_level_297 : bool)  =
  ( ((Machine__dataval.attr__constrained temp___expr_296) = False) /\ (let temp___298 = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___expr_296)) in (
   ((Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___expr_296))) = 0)))
   )

end

(* Module giving axioms for type "TregisterB" defined at machine.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TregisterB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "register" defined at machine.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__register___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__reg
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_305 : Array__Int__Machine__dataval.map) (temp___is_init_301 : bool) (temp___skip_constant_302 : bool) (temp___do_toplevel_303 : bool) (temp___do_typ_inv_304 : bool)  =
  (forall temp___306   : int.
   (if (( (Instruction__reg.first <= temp___306) /\ (temp___306 <= Instruction__reg.last) )) then (
    ((Machine__dataval.attr__constrained (Array__Int__Machine__dataval.get temp___expr_305 temp___306)) = False)) else true))
 
 predicate default_initial_assumption "inline" 
   (temp___expr_308 : Array__Int__Machine__dataval.map) (temp___skip_top_level_309 : bool)  =
  (forall temp___310   : int.
   (if (( (Instruction__reg.first <= temp___310) /\ (temp___310 <= Instruction__reg.last) )) then (
    (let temp___311 = (Array__Int__Machine__dataval.get temp___expr_308 temp___310) in (
     ( ((Machine__dataval.attr__constrained temp___311) = False) /\ (let temp___312 = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs (Array__Int__Machine__dataval.get temp___expr_308 temp___310))) in (
      ((Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs (Array__Int__Machine__dataval.get temp___expr_308 temp___310)))) = 0)))
      )))
   ) else true))

end

(* Module giving axioms for type "TintegerregisterB" defined at machine.adb:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TintegerregisterB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integerregister" defined at machine.adb:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__integerregister___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval
 use        Array__Int__Machine__integerval

 predicate dynamic_invariant "inline" 
   (temp___expr_319 : Array__Int__Machine__integerval.map) (temp___is_init_315 : bool) (temp___skip_constant_316 : bool) (temp___do_toplevel_317 : bool) (temp___do_typ_inv_318 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_321 : Array__Int__Machine__integerval.map) (temp___skip_top_level_322 : bool)  =
  true

end

(* Module giving axioms for type "TmemoryB" defined at machine.adb:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TmemoryB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "memory" defined at machine.adb:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__memory___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__addr
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_329 : Array__Int__Machine__dataval.map) (temp___is_init_325 : bool) (temp___skip_constant_326 : bool) (temp___do_toplevel_327 : bool) (temp___do_typ_inv_328 : bool)  =
  (forall temp___330   : int.
   (if (( (Instruction__addr.first <= temp___330) /\ (temp___330 <= Instruction__addr.last) )) then (
    ((Machine__dataval.attr__constrained (Array__Int__Machine__dataval.get temp___expr_329 temp___330)) = False)) else true))
 
 predicate default_initial_assumption "inline" 
   (temp___expr_332 : Array__Int__Machine__dataval.map) (temp___skip_top_level_333 : bool)  =
  (forall temp___334   : int.
   (if (( (Instruction__addr.first <= temp___334) /\ (temp___334 <= Instruction__addr.last) )) then (
    (let temp___335 = (Array__Int__Machine__dataval.get temp___expr_332 temp___334) in (
     ( ((Machine__dataval.attr__constrained temp___335) = False) /\ (let temp___336 = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs (Array__Int__Machine__dataval.get temp___expr_332 temp___334))) in (
      ((Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs (Array__Int__Machine__dataval.get temp___expr_332 temp___334)))) = 0)))
      )))
   ) else true))

end

(* Module giving axioms for type "TintegermemoryB" defined at machine.adb:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TintegermemoryB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integermemory" defined at machine.adb:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__integermemory___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval
 use        Array__Int__Machine__integerval

 predicate dynamic_invariant "inline" 
   (temp___expr_343 : Array__Int__Machine__integerval.map) (temp___is_init_339 : bool) (temp___skip_constant_340 : bool) (temp___do_toplevel_341 : bool) (temp___do_typ_inv_342 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_345 : Array__Int__Machine__integerval.map) (temp___skip_top_level_346 : bool)  =
  true

end

(* Module giving axioms for type "T9b" defined at machine.adb:162, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__executeprogram__T9b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10b" defined at machine.adb:162, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__executeprogram__T10b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11b" defined at machine.adb:164, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__executeprogram__T11b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12b" defined at machine.adb:164, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__executeprogram__T12b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S93b" defined at machine.adb:228, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectuninitializedvariable__S93b___axiom
 use import "_gnatprove_standard".Main
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval
 use        Machine__detectuninitializedvariable__val
 use        Machine__detectuninitializedvariable__S93b

 predicate dynamic_invariant "inline" 
   (temp___expr_353 : Machine__detectuninitializedvariable__S93b.s93b) (temp___is_init_349 : bool) (temp___skip_constant_350 : bool) (temp___do_toplevel_351 : bool) (temp___do_typ_inv_352 : bool)  =
  ( (if (temp___skip_constant_350) then (
   true) else (
   (Machine__detectuninitializedvariable__S93b.in_range (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs Machine__detectuninitializedvariable__val.val__))) (Machine__detectuninitializedvariable__S93b.to_base temp___expr_353)))) /\ ((Machine__detectuninitializedvariable__S93b.attr__constrained temp___expr_353) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_355 : Machine__detectuninitializedvariable__S93b.s93b) (temp___skip_top_level_356 : bool)  =
  ( ((Machine__detectuninitializedvariable__S93b.attr__constrained temp___expr_355) = True) /\ (let temp___357 = (Machine__dataval.rec__machine__dataval__state (Machine__detectuninitializedvariable__S93b.__split_discrs temp___expr_355)) in (
   ((Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__detectuninitializedvariable__S93b.__split_discrs temp___expr_355))) = (Machine__datavalstates__rep.to_rep (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs Machine__detectuninitializedvariable__val.val__))))))
   )

end

(* Module giving axioms for type "S96b" defined at machine.adb:234, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidadd__S96b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidadd__inst
 use        Machine__detectinvalidadd__S96b

 predicate dynamic_invariant "inline" 
   (temp___expr_364 : Machine__detectinvalidadd__S96b.s96b) (temp___is_init_360 : bool) (temp___skip_constant_361 : bool) (temp___do_toplevel_362 : bool) (temp___do_typ_inv_363 : bool)  =
  ( (if (temp___skip_constant_361) then (
   true) else (
   (Machine__detectinvalidadd__S96b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidadd__inst.inst))) (Machine__detectinvalidadd__S96b.to_base temp___expr_364)))) /\ ((Machine__detectinvalidadd__S96b.attr__constrained temp___expr_364) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_366 : Machine__detectinvalidadd__S96b.s96b) (temp___skip_top_level_367 : bool)  =
  ( ((Machine__detectinvalidadd__S96b.attr__constrained temp___expr_366) = True) /\ (let temp___368 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidadd__S96b.__split_discrs temp___expr_366)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidadd__S96b.__split_discrs temp___expr_366))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidadd__inst.inst))))))
   )

end

(* Module giving axioms for type "S107b" defined at machine.adb:252, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidsub__S107b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidsub__inst
 use        Machine__detectinvalidsub__S107b

 predicate dynamic_invariant "inline" 
   (temp___expr_397 : Machine__detectinvalidsub__S107b.s107b) (temp___is_init_393 : bool) (temp___skip_constant_394 : bool) (temp___do_toplevel_395 : bool) (temp___do_typ_inv_396 : bool)  =
  ( (if (temp___skip_constant_394) then (
   true) else (
   (Machine__detectinvalidsub__S107b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidsub__inst.inst))) (Machine__detectinvalidsub__S107b.to_base temp___expr_397)))) /\ ((Machine__detectinvalidsub__S107b.attr__constrained temp___expr_397) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_399 : Machine__detectinvalidsub__S107b.s107b) (temp___skip_top_level_400 : bool)  =
  ( ((Machine__detectinvalidsub__S107b.attr__constrained temp___expr_399) = True) /\ (let temp___401 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidsub__S107b.__split_discrs temp___expr_399)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidsub__S107b.__split_discrs temp___expr_399))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidsub__inst.inst))))))
   )

end

(* Module giving axioms for type "S118b" defined at machine.adb:270, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidmul__S118b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidmul__inst
 use        Machine__detectinvalidmul__S118b

 predicate dynamic_invariant "inline" 
   (temp___expr_430 : Machine__detectinvalidmul__S118b.s118b) (temp___is_init_426 : bool) (temp___skip_constant_427 : bool) (temp___do_toplevel_428 : bool) (temp___do_typ_inv_429 : bool)  =
  ( (if (temp___skip_constant_427) then (
   true) else (
   (Machine__detectinvalidmul__S118b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmul__inst.inst))) (Machine__detectinvalidmul__S118b.to_base temp___expr_430)))) /\ ((Machine__detectinvalidmul__S118b.attr__constrained temp___expr_430) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_432 : Machine__detectinvalidmul__S118b.s118b) (temp___skip_top_level_433 : bool)  =
  ( ((Machine__detectinvalidmul__S118b.attr__constrained temp___expr_432) = True) /\ (let temp___434 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmul__S118b.__split_discrs temp___expr_432)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmul__S118b.__split_discrs temp___expr_432))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmul__inst.inst))))))
   )

end

(* Module giving axioms for type "S129b" defined at machine.adb:300, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvaliddiv__S129b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvaliddiv__inst
 use        Machine__detectinvaliddiv__S129b

 predicate dynamic_invariant "inline" 
   (temp___expr_463 : Machine__detectinvaliddiv__S129b.s129b) (temp___is_init_459 : bool) (temp___skip_constant_460 : bool) (temp___do_toplevel_461 : bool) (temp___do_typ_inv_462 : bool)  =
  ( (if (temp___skip_constant_460) then (
   true) else (
   (Machine__detectinvaliddiv__S129b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvaliddiv__inst.inst))) (Machine__detectinvaliddiv__S129b.to_base temp___expr_463)))) /\ ((Machine__detectinvaliddiv__S129b.attr__constrained temp___expr_463) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_465 : Machine__detectinvaliddiv__S129b.s129b) (temp___skip_top_level_466 : bool)  =
  ( ((Machine__detectinvaliddiv__S129b.attr__constrained temp___expr_465) = True) /\ (let temp___467 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvaliddiv__S129b.__split_discrs temp___expr_465)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvaliddiv__S129b.__split_discrs temp___expr_465))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvaliddiv__inst.inst))))))
   )

end

(* Module giving axioms for type "S140b" defined at machine.adb:320, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidldr__S140b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidldr__inst
 use        Machine__detectinvalidldr__S140b

 predicate dynamic_invariant "inline" 
   (temp___expr_496 : Machine__detectinvalidldr__S140b.s140b) (temp___is_init_492 : bool) (temp___skip_constant_493 : bool) (temp___do_toplevel_494 : bool) (temp___do_typ_inv_495 : bool)  =
  ( (if (temp___skip_constant_493) then (
   true) else (
   (Machine__detectinvalidldr__S140b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidldr__inst.inst))) (Machine__detectinvalidldr__S140b.to_base temp___expr_496)))) /\ ((Machine__detectinvalidldr__S140b.attr__constrained temp___expr_496) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_498 : Machine__detectinvalidldr__S140b.s140b) (temp___skip_top_level_499 : bool)  =
  ( ((Machine__detectinvalidldr__S140b.attr__constrained temp___expr_498) = True) /\ (let temp___500 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidldr__S140b.__split_discrs temp___expr_498)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidldr__S140b.__split_discrs temp___expr_498))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidldr__inst.inst))))))
   )

end

(* Module giving axioms for type "S147b" defined at machine.adb:330, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidstr__S147b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidstr__inst
 use        Machine__detectinvalidstr__S147b

 predicate dynamic_invariant "inline" 
   (temp___expr_529 : Machine__detectinvalidstr__S147b.s147b) (temp___is_init_525 : bool) (temp___skip_constant_526 : bool) (temp___do_toplevel_527 : bool) (temp___do_typ_inv_528 : bool)  =
  ( (if (temp___skip_constant_526) then (
   true) else (
   (Machine__detectinvalidstr__S147b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidstr__inst.inst))) (Machine__detectinvalidstr__S147b.to_base temp___expr_529)))) /\ ((Machine__detectinvalidstr__S147b.attr__constrained temp___expr_529) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_531 : Machine__detectinvalidstr__S147b.s147b) (temp___skip_top_level_532 : bool)  =
  ( ((Machine__detectinvalidstr__S147b.attr__constrained temp___expr_531) = True) /\ (let temp___533 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidstr__S147b.__split_discrs temp___expr_531)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidstr__S147b.__split_discrs temp___expr_531))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidstr__inst.inst))))))
   )

end

(* Module giving axioms for type "S154b" defined at machine.adb:340, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidmov__S154b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidmov__inst
 use        Machine__detectinvalidmov__S154b

 predicate dynamic_invariant "inline" 
   (temp___expr_562 : Machine__detectinvalidmov__S154b.s154b) (temp___is_init_558 : bool) (temp___skip_constant_559 : bool) (temp___do_toplevel_560 : bool) (temp___do_typ_inv_561 : bool)  =
  ( (if (temp___skip_constant_559) then (
   true) else (
   (Machine__detectinvalidmov__S154b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmov__inst.inst))) (Machine__detectinvalidmov__S154b.to_base temp___expr_562)))) /\ ((Machine__detectinvalidmov__S154b.attr__constrained temp___expr_562) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_564 : Machine__detectinvalidmov__S154b.s154b) (temp___skip_top_level_565 : bool)  =
  ( ((Machine__detectinvalidmov__S154b.attr__constrained temp___expr_564) = True) /\ (let temp___566 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmov__S154b.__split_discrs temp___expr_564)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmov__S154b.__split_discrs temp___expr_564))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmov__inst.inst))))))
   )

end

(* Module giving axioms for type "S157b" defined at machine.adb:349, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidjmp__S157b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidjmp__inst
 use        Machine__detectinvalidjmp__S157b

 predicate dynamic_invariant "inline" 
   (temp___expr_595 : Machine__detectinvalidjmp__S157b.s157b) (temp___is_init_591 : bool) (temp___skip_constant_592 : bool) (temp___do_toplevel_593 : bool) (temp___do_typ_inv_594 : bool)  =
  ( (if (temp___skip_constant_592) then (
   true) else (
   (Machine__detectinvalidjmp__S157b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjmp__inst.inst))) (Machine__detectinvalidjmp__S157b.to_base temp___expr_595)))) /\ ((Machine__detectinvalidjmp__S157b.attr__constrained temp___expr_595) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_597 : Machine__detectinvalidjmp__S157b.s157b) (temp___skip_top_level_598 : bool)  =
  ( ((Machine__detectinvalidjmp__S157b.attr__constrained temp___expr_597) = True) /\ (let temp___599 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjmp__S157b.__split_discrs temp___expr_597)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjmp__S157b.__split_discrs temp___expr_597))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjmp__inst.inst))))))
   )

end

(* Module giving axioms for type "S160b" defined at machine.adb:360, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidjz__S160b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidjz__inst
 use        Machine__detectinvalidjz__S160b

 predicate dynamic_invariant "inline" 
   (temp___expr_628 : Machine__detectinvalidjz__S160b.s160b) (temp___is_init_624 : bool) (temp___skip_constant_625 : bool) (temp___do_toplevel_626 : bool) (temp___do_typ_inv_627 : bool)  =
  ( (if (temp___skip_constant_625) then (
   true) else (
   (Machine__detectinvalidjz__S160b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjz__inst.inst))) (Machine__detectinvalidjz__S160b.to_base temp___expr_628)))) /\ ((Machine__detectinvalidjz__S160b.attr__constrained temp___expr_628) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_630 : Machine__detectinvalidjz__S160b.s160b) (temp___skip_top_level_631 : bool)  =
  ( ((Machine__detectinvalidjz__S160b.attr__constrained temp___expr_630) = True) /\ (let temp___632 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjz__S160b.__split_discrs temp___expr_630)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjz__S160b.__split_discrs temp___expr_630))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjz__inst.inst))))))
   )

end

(* Module giving axioms for type "S169b" defined at machine.adb:418, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performadd__S169b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performadd__inst
 use        Machine__performadd__S169b

 predicate dynamic_invariant "inline" 
   (temp___expr_661 : Machine__performadd__S169b.s169b) (temp___is_init_657 : bool) (temp___skip_constant_658 : bool) (temp___do_toplevel_659 : bool) (temp___do_typ_inv_660 : bool)  =
  ( (if (temp___skip_constant_658) then (
   true) else (
   (Machine__performadd__S169b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performadd__inst.inst))) (Machine__performadd__S169b.to_base temp___expr_661)))) /\ ((Machine__performadd__S169b.attr__constrained temp___expr_661) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_663 : Machine__performadd__S169b.s169b) (temp___skip_top_level_664 : bool)  =
  ( ((Machine__performadd__S169b.attr__constrained temp___expr_663) = True) /\ (let temp___665 = (Instruction__instr.rec__instruction__instr__op (Machine__performadd__S169b.__split_discrs temp___expr_663)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performadd__S169b.__split_discrs temp___expr_663))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performadd__inst.inst))))))
   )

end

(* Module giving axioms for type "T187b" defined at machine.adb:423, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performadd__T187b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T188b" defined at machine.adb:427, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performadd__T188b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T189b" defined at machine.adb:431, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performadd__T189b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S193b" defined at machine.adb:440, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performsub__S193b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performsub__inst
 use        Machine__performsub__S193b

 predicate dynamic_invariant "inline" 
   (temp___expr_694 : Machine__performsub__S193b.s193b) (temp___is_init_690 : bool) (temp___skip_constant_691 : bool) (temp___do_toplevel_692 : bool) (temp___do_typ_inv_693 : bool)  =
  ( (if (temp___skip_constant_691) then (
   true) else (
   (Machine__performsub__S193b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performsub__inst.inst))) (Machine__performsub__S193b.to_base temp___expr_694)))) /\ ((Machine__performsub__S193b.attr__constrained temp___expr_694) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_696 : Machine__performsub__S193b.s193b) (temp___skip_top_level_697 : bool)  =
  ( ((Machine__performsub__S193b.attr__constrained temp___expr_696) = True) /\ (let temp___698 = (Instruction__instr.rec__instruction__instr__op (Machine__performsub__S193b.__split_discrs temp___expr_696)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performsub__S193b.__split_discrs temp___expr_696))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performsub__inst.inst))))))
   )

end

(* Module giving axioms for type "T211b" defined at machine.adb:445, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performsub__T211b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T212b" defined at machine.adb:449, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performsub__T212b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T213b" defined at machine.adb:453, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performsub__T213b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S217b" defined at machine.adb:462, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmul__S217b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performmul__inst
 use        Machine__performmul__S217b

 predicate dynamic_invariant "inline" 
   (temp___expr_727 : Machine__performmul__S217b.s217b) (temp___is_init_723 : bool) (temp___skip_constant_724 : bool) (temp___do_toplevel_725 : bool) (temp___do_typ_inv_726 : bool)  =
  ( (if (temp___skip_constant_724) then (
   true) else (
   (Machine__performmul__S217b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmul__inst.inst))) (Machine__performmul__S217b.to_base temp___expr_727)))) /\ ((Machine__performmul__S217b.attr__constrained temp___expr_727) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_729 : Machine__performmul__S217b.s217b) (temp___skip_top_level_730 : bool)  =
  ( ((Machine__performmul__S217b.attr__constrained temp___expr_729) = True) /\ (let temp___731 = (Instruction__instr.rec__instruction__instr__op (Machine__performmul__S217b.__split_discrs temp___expr_729)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performmul__S217b.__split_discrs temp___expr_729))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmul__inst.inst))))))
   )

end

(* Module giving axioms for type "T235b" defined at machine.adb:467, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmul__T235b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T236b" defined at machine.adb:471, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmul__T236b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T237b" defined at machine.adb:475, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmul__T237b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S240b" defined at machine.adb:484, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performdiv__S240b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performdiv__inst
 use        Machine__performdiv__S240b

 predicate dynamic_invariant "inline" 
   (temp___expr_760 : Machine__performdiv__S240b.s240b) (temp___is_init_756 : bool) (temp___skip_constant_757 : bool) (temp___do_toplevel_758 : bool) (temp___do_typ_inv_759 : bool)  =
  ( (if (temp___skip_constant_757) then (
   true) else (
   (Machine__performdiv__S240b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performdiv__inst.inst))) (Machine__performdiv__S240b.to_base temp___expr_760)))) /\ ((Machine__performdiv__S240b.attr__constrained temp___expr_760) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_762 : Machine__performdiv__S240b.s240b) (temp___skip_top_level_763 : bool)  =
  ( ((Machine__performdiv__S240b.attr__constrained temp___expr_762) = True) /\ (let temp___764 = (Instruction__instr.rec__instruction__instr__op (Machine__performdiv__S240b.__split_discrs temp___expr_762)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performdiv__S240b.__split_discrs temp___expr_762))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performdiv__inst.inst))))))
   )

end

(* Module giving axioms for type "T258b" defined at machine.adb:489, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performdiv__T258b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T259b" defined at machine.adb:493, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performdiv__T259b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S262b" defined at machine.adb:502, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performldr__S262b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performldr__inst
 use        Machine__performldr__S262b

 predicate dynamic_invariant "inline" 
   (temp___expr_793 : Machine__performldr__S262b.s262b) (temp___is_init_789 : bool) (temp___skip_constant_790 : bool) (temp___do_toplevel_791 : bool) (temp___do_typ_inv_792 : bool)  =
  ( (if (temp___skip_constant_790) then (
   true) else (
   (Machine__performldr__S262b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performldr__inst.inst))) (Machine__performldr__S262b.to_base temp___expr_793)))) /\ ((Machine__performldr__S262b.attr__constrained temp___expr_793) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_795 : Machine__performldr__S262b.s262b) (temp___skip_top_level_796 : bool)  =
  ( ((Machine__performldr__S262b.attr__constrained temp___expr_795) = True) /\ (let temp___797 = (Instruction__instr.rec__instruction__instr__op (Machine__performldr__S262b.__split_discrs temp___expr_795)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performldr__S262b.__split_discrs temp___expr_795))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performldr__inst.inst))))))
   )

end

(* Module giving axioms for type "T276b" defined at machine.adb:507, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performldr__T276b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T277b" defined at machine.adb:511, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performldr__T277b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S280b" defined at machine.adb:520, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performstr__S280b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performstr__inst
 use        Machine__performstr__S280b

 predicate dynamic_invariant "inline" 
   (temp___expr_826 : Machine__performstr__S280b.s280b) (temp___is_init_822 : bool) (temp___skip_constant_823 : bool) (temp___do_toplevel_824 : bool) (temp___do_typ_inv_825 : bool)  =
  ( (if (temp___skip_constant_823) then (
   true) else (
   (Machine__performstr__S280b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performstr__inst.inst))) (Machine__performstr__S280b.to_base temp___expr_826)))) /\ ((Machine__performstr__S280b.attr__constrained temp___expr_826) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_828 : Machine__performstr__S280b.s280b) (temp___skip_top_level_829 : bool)  =
  ( ((Machine__performstr__S280b.attr__constrained temp___expr_828) = True) /\ (let temp___830 = (Instruction__instr.rec__instruction__instr__op (Machine__performstr__S280b.__split_discrs temp___expr_828)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performstr__S280b.__split_discrs temp___expr_828))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performstr__inst.inst))))))
   )

end

(* Module giving axioms for type "T294b" defined at machine.adb:526, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performstr__T294b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T295b" defined at machine.adb:531, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performstr__T295b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S297b" defined at machine.adb:540, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmov__S297b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performmov__inst
 use        Machine__performmov__S297b

 predicate dynamic_invariant "inline" 
   (temp___expr_859 : Machine__performmov__S297b.s297b) (temp___is_init_855 : bool) (temp___skip_constant_856 : bool) (temp___do_toplevel_857 : bool) (temp___do_typ_inv_858 : bool)  =
  ( (if (temp___skip_constant_856) then (
   true) else (
   (Machine__performmov__S297b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmov__inst.inst))) (Machine__performmov__S297b.to_base temp___expr_859)))) /\ ((Machine__performmov__S297b.attr__constrained temp___expr_859) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_861 : Machine__performmov__S297b.s297b) (temp___skip_top_level_862 : bool)  =
  ( ((Machine__performmov__S297b.attr__constrained temp___expr_861) = True) /\ (let temp___863 = (Instruction__instr.rec__instruction__instr__op (Machine__performmov__S297b.__split_discrs temp___expr_861)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performmov__S297b.__split_discrs temp___expr_861))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmov__inst.inst))))))
   )

end

(* Module giving axioms for type "T306b" defined at machine.adb:544, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmov__T306b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S307b" defined at machine.adb:558, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performjmp__S307b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performjmp__inst
 use        Machine__performjmp__S307b

 predicate dynamic_invariant "inline" 
   (temp___expr_892 : Machine__performjmp__S307b.s307b) (temp___is_init_888 : bool) (temp___skip_constant_889 : bool) (temp___do_toplevel_890 : bool) (temp___do_typ_inv_891 : bool)  =
  ( (if (temp___skip_constant_889) then (
   true) else (
   (Machine__performjmp__S307b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjmp__inst.inst))) (Machine__performjmp__S307b.to_base temp___expr_892)))) /\ ((Machine__performjmp__S307b.attr__constrained temp___expr_892) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_894 : Machine__performjmp__S307b.s307b) (temp___skip_top_level_895 : bool)  =
  ( ((Machine__performjmp__S307b.attr__constrained temp___expr_894) = True) /\ (let temp___896 = (Instruction__instr.rec__instruction__instr__op (Machine__performjmp__S307b.__split_discrs temp___expr_894)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performjmp__S307b.__split_discrs temp___expr_894))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjmp__inst.inst))))))
   )

end

(* Module giving axioms for type "S318b" defined at machine.adb:567, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performjz__S318b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performjz__inst
 use        Machine__performjz__S318b

 predicate dynamic_invariant "inline" 
   (temp___expr_925 : Machine__performjz__S318b.s318b) (temp___is_init_921 : bool) (temp___skip_constant_922 : bool) (temp___do_toplevel_923 : bool) (temp___do_typ_inv_924 : bool)  =
  ( (if (temp___skip_constant_922) then (
   true) else (
   (Machine__performjz__S318b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjz__inst.inst))) (Machine__performjz__S318b.to_base temp___expr_925)))) /\ ((Machine__performjz__S318b.attr__constrained temp___expr_925) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_927 : Machine__performjz__S318b.s318b) (temp___skip_top_level_928 : bool)  =
  ( ((Machine__performjz__S318b.attr__constrained temp___expr_927) = True) /\ (let temp___929 = (Instruction__instr.rec__instruction__instr__op (Machine__performjz__S318b.__split_discrs temp___expr_927)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performjz__S318b.__split_discrs temp___expr_927))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjz__inst.inst))))))
   )

end

(* Module giving axioms for type "T355b" defined at machine.adb:617, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T355b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T356b" defined at machine.adb:617, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T356b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T354b" defined at machine.adb:617, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T354b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T358b" defined at machine.adb:618, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T358b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T359b" defined at machine.adb:618, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T359b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T357b" defined at machine.adb:618, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T357b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T387b" defined at machine.adb:423 instantiated at machine.adb:631, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B369b__T387b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T388b" defined at machine.adb:427 instantiated at machine.adb:631, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B369b__T388b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T389b" defined at machine.adb:431 instantiated at machine.adb:631, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B369b__T389b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T412b" defined at machine.adb:445 instantiated at machine.adb:633, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B394b__T412b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T413b" defined at machine.adb:449 instantiated at machine.adb:633, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B394b__T413b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T414b" defined at machine.adb:453 instantiated at machine.adb:633, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B394b__T414b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T437b" defined at machine.adb:467 instantiated at machine.adb:635, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B419b__T437b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T438b" defined at machine.adb:471 instantiated at machine.adb:635, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B419b__T438b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T439b" defined at machine.adb:475 instantiated at machine.adb:635, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B419b__T439b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T462b" defined at machine.adb:489 instantiated at machine.adb:637, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B444b__T462b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T463b" defined at machine.adb:493 instantiated at machine.adb:637, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B444b__T463b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T483b" defined at machine.adb:507 instantiated at machine.adb:639, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B469b__T483b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T484b" defined at machine.adb:511 instantiated at machine.adb:639, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B469b__T484b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T504b" defined at machine.adb:526 instantiated at machine.adb:641, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B490b__T504b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T505b" defined at machine.adb:531 instantiated at machine.adb:641, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B490b__T505b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T519b" defined at machine.adb:544 instantiated at machine.adb:643, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__L_2__B510b__T519b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T579b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T579b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T580b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T580b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T578b" defined at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T578b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T582b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T582b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T583b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T583b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T581b" defined at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__T581b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T611b" defined at machine.adb:423 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T612b" defined at machine.adb:427 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T613b" defined at machine.adb:431 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T636b" defined at machine.adb:445 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T637b" defined at machine.adb:449 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T638b" defined at machine.adb:453 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T661b" defined at machine.adb:467 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T662b" defined at machine.adb:471 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T663b" defined at machine.adb:475 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T686b" defined at machine.adb:489 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T687b" defined at machine.adb:493 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T707b" defined at machine.adb:507 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T708b" defined at machine.adb:511 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T728b" defined at machine.adb:526 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T729b" defined at machine.adb:531 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T743b" defined at machine.adb:544 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring an abstract function for the aggregate at machine.adb:162, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__executeprogram__regs__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 function machine__executeprogram__regs__aggregate_def 
   (temp___959 : int) : Array__Int__Machine__integerval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:164, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__executeprogram__mem__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__integerval

 function machine__executeprogram__mem__aggregate_def 
   (temp___962 : int) : Array__Int__Machine__integerval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp_____aggregate_def_978
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 function temp_____aggregate_def_978 
   (temp___980 : Machine__dataval.dataval) : Array__Int__Machine__dataval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp_____aggregate_def_982
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 function temp_____aggregate_def_982 
   (temp___984 : Machine__dataval.dataval) : Array__Int__Machine__dataval.map

end
(* Module for defining the value of constant "num_regs" defined at instruction.ads:8, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Instruction__num_regs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__num_regs

 axiom num_regs__def_axiom :
  ((Instruction__num_regs.num_regs ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at instruction.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Instruction__memory_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__memory_size

 axiom memory_size__def_axiom :
  ((Instruction__memory_size.memory_size ) = 65536)

end

(* Module for defining the value of constant "nul" defined at a-chlat1.ads:25, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nul

 axiom nul__def_axiom :
  ((Ada__characters__latin_1__nul.nul ) = 0)

end

(* Module for defining the value of constant "soh" defined at a-chlat1.ads:26, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__soh___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__soh

 axiom soh__def_axiom :
  ((Ada__characters__latin_1__soh.soh ) = 1)

end

(* Module for defining the value of constant "stx" defined at a-chlat1.ads:27, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__stx___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__stx

 axiom stx__def_axiom :
  ((Ada__characters__latin_1__stx.stx ) = 2)

end

(* Module for defining the value of constant "etx" defined at a-chlat1.ads:28, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__etx___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__etx

 axiom etx__def_axiom :
  ((Ada__characters__latin_1__etx.etx ) = 3)

end

(* Module for defining the value of constant "eot" defined at a-chlat1.ads:29, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__eot___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__eot

 axiom eot__def_axiom :
  ((Ada__characters__latin_1__eot.eot ) = 4)

end

(* Module for defining the value of constant "enq" defined at a-chlat1.ads:30, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__enq___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__enq

 axiom enq__def_axiom :
  ((Ada__characters__latin_1__enq.enq ) = 5)

end

(* Module for defining the value of constant "ack" defined at a-chlat1.ads:31, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ack___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ack

 axiom ack__def_axiom :
  ((Ada__characters__latin_1__ack.ack ) = 6)

end

(* Module for defining the value of constant "bel" defined at a-chlat1.ads:32, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bel___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bel

 axiom bel__def_axiom :
  ((Ada__characters__latin_1__bel.bel ) = 7)

end

(* Module for defining the value of constant "bs" defined at a-chlat1.ads:33, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bs

 axiom bs__def_axiom :
  ((Ada__characters__latin_1__bs.bs ) = 8)

end

(* Module for defining the value of constant "ht" defined at a-chlat1.ads:34, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ht___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ht

 axiom ht__def_axiom :
  ((Ada__characters__latin_1__ht.ht ) = 9)

end

(* Module for defining the value of constant "lf" defined at a-chlat1.ads:35, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lf___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lf

 axiom lf__def_axiom :
  ((Ada__characters__latin_1__lf.lf ) = 10)

end

(* Module for defining the value of constant "vt" defined at a-chlat1.ads:36, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vt

 axiom vt__def_axiom :
  ((Ada__characters__latin_1__vt.vt ) = 11)

end

(* Module for defining the value of constant "ff" defined at a-chlat1.ads:37, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ff___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ff

 axiom ff__def_axiom :
  ((Ada__characters__latin_1__ff.ff ) = 12)

end

(* Module for defining the value of constant "cr" defined at a-chlat1.ads:38, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cr

 axiom cr__def_axiom :
  ((Ada__characters__latin_1__cr.cr ) = 13)

end

(* Module for defining the value of constant "so" defined at a-chlat1.ads:39, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__so___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__so

 axiom so____def_axiom :
  ((Ada__characters__latin_1__so.so__ ) = 14)

end

(* Module for defining the value of constant "si" defined at a-chlat1.ads:40, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__si___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__si

 axiom si__def_axiom :
  ((Ada__characters__latin_1__si.si ) = 15)

end

(* Module for defining the value of constant "dle" defined at a-chlat1.ads:42, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dle___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dle

 axiom dle__def_axiom :
  ((Ada__characters__latin_1__dle.dle ) = 16)

end

(* Module for defining the value of constant "dc1" defined at a-chlat1.ads:43, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc1___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc1

 axiom dc1__def_axiom :
  ((Ada__characters__latin_1__dc1.dc1 ) = 17)

end

(* Module for defining the value of constant "dc2" defined at a-chlat1.ads:44, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc2

 axiom dc2__def_axiom :
  ((Ada__characters__latin_1__dc2.dc2 ) = 18)

end

(* Module for defining the value of constant "dc3" defined at a-chlat1.ads:45, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc3___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc3

 axiom dc3__def_axiom :
  ((Ada__characters__latin_1__dc3.dc3 ) = 19)

end

(* Module for defining the value of constant "dc4" defined at a-chlat1.ads:46, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc4___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc4

 axiom dc4__def_axiom :
  ((Ada__characters__latin_1__dc4.dc4 ) = 20)

end

(* Module for defining the value of constant "nak" defined at a-chlat1.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nak___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nak

 axiom nak__def_axiom :
  ((Ada__characters__latin_1__nak.nak ) = 21)

end

(* Module for defining the value of constant "syn" defined at a-chlat1.ads:48, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__syn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__syn

 axiom syn__def_axiom :
  ((Ada__characters__latin_1__syn.syn ) = 22)

end

(* Module for defining the value of constant "etb" defined at a-chlat1.ads:49, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__etb___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__etb

 axiom etb__def_axiom :
  ((Ada__characters__latin_1__etb.etb ) = 23)

end

(* Module for defining the value of constant "can" defined at a-chlat1.ads:50, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__can___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__can

 axiom can__def_axiom :
  ((Ada__characters__latin_1__can.can ) = 24)

end

(* Module for defining the value of constant "em" defined at a-chlat1.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__em___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__em

 axiom em__def_axiom :
  ((Ada__characters__latin_1__em.em ) = 25)

end

(* Module for defining the value of constant "sub" defined at a-chlat1.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sub___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sub

 axiom sub__def_axiom :
  ((Ada__characters__latin_1__sub.sub ) = 26)

end

(* Module for defining the value of constant "esc" defined at a-chlat1.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__esc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__esc

 axiom esc__def_axiom :
  ((Ada__characters__latin_1__esc.esc ) = 27)

end

(* Module for defining the value of constant "fs" defined at a-chlat1.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fs

 axiom fs__def_axiom :
  ((Ada__characters__latin_1__fs.fs ) = 28)

end

(* Module for defining the value of constant "gs" defined at a-chlat1.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__gs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__gs

 axiom gs__def_axiom :
  ((Ada__characters__latin_1__gs.gs ) = 29)

end

(* Module for defining the value of constant "rs" defined at a-chlat1.ads:56, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__rs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__rs

 axiom rs__def_axiom :
  ((Ada__characters__latin_1__rs.rs ) = 30)

end

(* Module for defining the value of constant "us" defined at a-chlat1.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__us___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__us

 axiom us__def_axiom :
  ((Ada__characters__latin_1__us.us ) = 31)

end

(* Module for defining the value of constant "space" defined at a-chlat1.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__space___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__space

 axiom space__def_axiom :
  ((Ada__characters__latin_1__space.space ) = 32)

end

(* Module for defining the value of constant "exclamation" defined at a-chlat1.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__exclamation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__exclamation

 axiom exclamation__def_axiom :
  ((Ada__characters__latin_1__exclamation.exclamation ) = 33)

end

(* Module for defining the value of constant "quotation" defined at a-chlat1.ads:65, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__quotation

 axiom quotation__def_axiom :
  ((Ada__characters__latin_1__quotation.quotation ) = 34)

end

(* Module for defining the value of constant "number_sign" defined at a-chlat1.ads:66, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__number_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__number_sign

 axiom number_sign__def_axiom :
  ((Ada__characters__latin_1__number_sign.number_sign ) = 35)

end

(* Module for defining the value of constant "dollar_sign" defined at a-chlat1.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dollar_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dollar_sign

 axiom dollar_sign__def_axiom :
  ((Ada__characters__latin_1__dollar_sign.dollar_sign ) = 36)

end

(* Module for defining the value of constant "percent_sign" defined at a-chlat1.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__percent_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__percent_sign

 axiom percent_sign__def_axiom :
  ((Ada__characters__latin_1__percent_sign.percent_sign ) = 37)

end

(* Module for defining the value of constant "ampersand" defined at a-chlat1.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ampersand___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ampersand

 axiom ampersand__def_axiom :
  ((Ada__characters__latin_1__ampersand.ampersand ) = 38)

end

(* Module for defining the value of constant "apostrophe" defined at a-chlat1.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__apostrophe___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__apostrophe

 axiom apostrophe__def_axiom :
  ((Ada__characters__latin_1__apostrophe.apostrophe ) = 39)

end

(* Module for defining the value of constant "left_parenthesis" defined at a-chlat1.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_parenthesis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_parenthesis

 axiom left_parenthesis__def_axiom :
  ((Ada__characters__latin_1__left_parenthesis.left_parenthesis ) = 40)

end

(* Module for defining the value of constant "right_parenthesis" defined at a-chlat1.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_parenthesis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_parenthesis

 axiom right_parenthesis__def_axiom :
  ((Ada__characters__latin_1__right_parenthesis.right_parenthesis ) = 41)

end

(* Module for defining the value of constant "asterisk" defined at a-chlat1.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__asterisk___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__asterisk

 axiom asterisk__def_axiom :
  ((Ada__characters__latin_1__asterisk.asterisk ) = 42)

end

(* Module for defining the value of constant "plus_sign" defined at a-chlat1.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plus_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plus_sign

 axiom plus_sign__def_axiom :
  ((Ada__characters__latin_1__plus_sign.plus_sign ) = 43)

end

(* Module for defining the value of constant "comma" defined at a-chlat1.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__comma___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__comma

 axiom comma__def_axiom :
  ((Ada__characters__latin_1__comma.comma ) = 44)

end

(* Module for defining the value of constant "hyphen" defined at a-chlat1.ads:76, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__hyphen___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__hyphen

 axiom hyphen__def_axiom :
  ((Ada__characters__latin_1__hyphen.hyphen ) = 45)

end

(* Module for defining the value of constant "full_stop" defined at a-chlat1.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__full_stop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__full_stop

 axiom full_stop__def_axiom :
  ((Ada__characters__latin_1__full_stop.full_stop ) = 46)

end

(* Module for defining the value of constant "solidus" defined at a-chlat1.ads:79, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__solidus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__solidus

 axiom solidus__def_axiom :
  ((Ada__characters__latin_1__solidus.solidus ) = 47)

end

(* Module for defining the value of constant "colon" defined at a-chlat1.ads:83, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__colon___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__colon

 axiom colon__def_axiom :
  ((Ada__characters__latin_1__colon.colon ) = 58)

end

(* Module for defining the value of constant "semicolon" defined at a-chlat1.ads:84, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__semicolon___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__semicolon

 axiom semicolon__def_axiom :
  ((Ada__characters__latin_1__semicolon.semicolon ) = 59)

end

(* Module for defining the value of constant "less_than_sign" defined at a-chlat1.ads:85, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__less_than_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__less_than_sign

 axiom less_than_sign__def_axiom :
  ((Ada__characters__latin_1__less_than_sign.less_than_sign ) = 60)

end

(* Module for defining the value of constant "equals_sign" defined at a-chlat1.ads:86, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__equals_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__equals_sign

 axiom equals_sign__def_axiom :
  ((Ada__characters__latin_1__equals_sign.equals_sign ) = 61)

end

(* Module for defining the value of constant "greater_than_sign" defined at a-chlat1.ads:87, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__greater_than_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__greater_than_sign

 axiom greater_than_sign__def_axiom :
  ((Ada__characters__latin_1__greater_than_sign.greater_than_sign ) = 62)

end

(* Module for defining the value of constant "question" defined at a-chlat1.ads:88, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__question___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__question

 axiom question__def_axiom :
  ((Ada__characters__latin_1__question.question ) = 63)

end

(* Module for defining the value of constant "commercial_at" defined at a-chlat1.ads:89, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__commercial_at___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__commercial_at

 axiom commercial_at__def_axiom :
  ((Ada__characters__latin_1__commercial_at.commercial_at ) = 64)

end

(* Module for defining the value of constant "left_square_bracket" defined at a-chlat1.ads:93, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_square_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_square_bracket

 axiom left_square_bracket__def_axiom :
  ((Ada__characters__latin_1__left_square_bracket.left_square_bracket ) = 91)

end

(* Module for defining the value of constant "reverse_solidus" defined at a-chlat1.ads:94, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reverse_solidus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reverse_solidus

 axiom reverse_solidus__def_axiom :
  ((Ada__characters__latin_1__reverse_solidus.reverse_solidus ) = 92)

end

(* Module for defining the value of constant "right_square_bracket" defined at a-chlat1.ads:95, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_square_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_square_bracket

 axiom right_square_bracket__def_axiom :
  ((Ada__characters__latin_1__right_square_bracket.right_square_bracket ) = 93)

end

(* Module for defining the value of constant "circumflex" defined at a-chlat1.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__circumflex

 axiom circumflex__def_axiom :
  ((Ada__characters__latin_1__circumflex.circumflex ) = 94)

end

(* Module for defining the value of constant "low_line" defined at a-chlat1.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__low_line___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__low_line

 axiom low_line__def_axiom :
  ((Ada__characters__latin_1__low_line.low_line ) = 95)

end

(* Module for defining the value of constant "grave" defined at a-chlat1.ads:99, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__grave

 axiom grave__def_axiom :
  ((Ada__characters__latin_1__grave.grave ) = 96)

end

(* Module for defining the value of constant "lc_a" defined at a-chlat1.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a

 axiom lc_a__def_axiom :
  ((Ada__characters__latin_1__lc_a.lc_a ) = 97)

end

(* Module for defining the value of constant "lc_b" defined at a-chlat1.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_b___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_b

 axiom lc_b__def_axiom :
  ((Ada__characters__latin_1__lc_b.lc_b ) = 98)

end

(* Module for defining the value of constant "lc_c" defined at a-chlat1.ads:102, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_c___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_c

 axiom lc_c__def_axiom :
  ((Ada__characters__latin_1__lc_c.lc_c ) = 99)

end

(* Module for defining the value of constant "lc_d" defined at a-chlat1.ads:103, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_d___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_d

 axiom lc_d__def_axiom :
  ((Ada__characters__latin_1__lc_d.lc_d ) = 100)

end

(* Module for defining the value of constant "lc_e" defined at a-chlat1.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e

 axiom lc_e__def_axiom :
  ((Ada__characters__latin_1__lc_e.lc_e ) = 101)

end

(* Module for defining the value of constant "lc_f" defined at a-chlat1.ads:105, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_f___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_f

 axiom lc_f__def_axiom :
  ((Ada__characters__latin_1__lc_f.lc_f ) = 102)

end

(* Module for defining the value of constant "lc_g" defined at a-chlat1.ads:106, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_g___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_g

 axiom lc_g__def_axiom :
  ((Ada__characters__latin_1__lc_g.lc_g ) = 103)

end

(* Module for defining the value of constant "lc_h" defined at a-chlat1.ads:107, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_h___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_h

 axiom lc_h__def_axiom :
  ((Ada__characters__latin_1__lc_h.lc_h ) = 104)

end

(* Module for defining the value of constant "lc_i" defined at a-chlat1.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i

 axiom lc_i__def_axiom :
  ((Ada__characters__latin_1__lc_i.lc_i ) = 105)

end

(* Module for defining the value of constant "lc_j" defined at a-chlat1.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_j___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_j

 axiom lc_j__def_axiom :
  ((Ada__characters__latin_1__lc_j.lc_j ) = 106)

end

(* Module for defining the value of constant "lc_k" defined at a-chlat1.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_k___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_k

 axiom lc_k__def_axiom :
  ((Ada__characters__latin_1__lc_k.lc_k ) = 107)

end

(* Module for defining the value of constant "lc_l" defined at a-chlat1.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_l___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_l

 axiom lc_l__def_axiom :
  ((Ada__characters__latin_1__lc_l.lc_l ) = 108)

end

(* Module for defining the value of constant "lc_m" defined at a-chlat1.ads:112, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_m___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_m

 axiom lc_m__def_axiom :
  ((Ada__characters__latin_1__lc_m.lc_m ) = 109)

end

(* Module for defining the value of constant "lc_n" defined at a-chlat1.ads:113, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_n___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_n

 axiom lc_n__def_axiom :
  ((Ada__characters__latin_1__lc_n.lc_n ) = 110)

end

(* Module for defining the value of constant "lc_o" defined at a-chlat1.ads:114, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o

 axiom lc_o__def_axiom :
  ((Ada__characters__latin_1__lc_o.lc_o ) = 111)

end

(* Module for defining the value of constant "lc_p" defined at a-chlat1.ads:115, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_p___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_p

 axiom lc_p__def_axiom :
  ((Ada__characters__latin_1__lc_p.lc_p ) = 112)

end

(* Module for defining the value of constant "lc_q" defined at a-chlat1.ads:116, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_q___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_q

 axiom lc_q__def_axiom :
  ((Ada__characters__latin_1__lc_q.lc_q ) = 113)

end

(* Module for defining the value of constant "lc_r" defined at a-chlat1.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_r___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_r

 axiom lc_r__def_axiom :
  ((Ada__characters__latin_1__lc_r.lc_r ) = 114)

end

(* Module for defining the value of constant "lc_s" defined at a-chlat1.ads:118, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_s___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_s

 axiom lc_s__def_axiom :
  ((Ada__characters__latin_1__lc_s.lc_s ) = 115)

end

(* Module for defining the value of constant "lc_t" defined at a-chlat1.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_t

 axiom lc_t__def_axiom :
  ((Ada__characters__latin_1__lc_t.lc_t ) = 116)

end

(* Module for defining the value of constant "lc_u" defined at a-chlat1.ads:120, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u

 axiom lc_u__def_axiom :
  ((Ada__characters__latin_1__lc_u.lc_u ) = 117)

end

(* Module for defining the value of constant "lc_v" defined at a-chlat1.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_v___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_v

 axiom lc_v__def_axiom :
  ((Ada__characters__latin_1__lc_v.lc_v ) = 118)

end

(* Module for defining the value of constant "lc_w" defined at a-chlat1.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_w___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_w

 axiom lc_w__def_axiom :
  ((Ada__characters__latin_1__lc_w.lc_w ) = 119)

end

(* Module for defining the value of constant "lc_x" defined at a-chlat1.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_x___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_x

 axiom lc_x__def_axiom :
  ((Ada__characters__latin_1__lc_x.lc_x ) = 120)

end

(* Module for defining the value of constant "lc_y" defined at a-chlat1.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y

 axiom lc_y__def_axiom :
  ((Ada__characters__latin_1__lc_y.lc_y ) = 121)

end

(* Module for defining the value of constant "lc_z" defined at a-chlat1.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_z___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_z

 axiom lc_z__def_axiom :
  ((Ada__characters__latin_1__lc_z.lc_z ) = 122)

end

(* Module for defining the value of constant "left_curly_bracket" defined at a-chlat1.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_curly_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_curly_bracket

 axiom left_curly_bracket__def_axiom :
  ((Ada__characters__latin_1__left_curly_bracket.left_curly_bracket ) = 123)

end

(* Module for defining the value of constant "vertical_line" defined at a-chlat1.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vertical_line___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vertical_line

 axiom vertical_line__def_axiom :
  ((Ada__characters__latin_1__vertical_line.vertical_line ) = 124)

end

(* Module for defining the value of constant "right_curly_bracket" defined at a-chlat1.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_curly_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_curly_bracket

 axiom right_curly_bracket__def_axiom :
  ((Ada__characters__latin_1__right_curly_bracket.right_curly_bracket ) = 125)

end

(* Module for defining the value of constant "tilde" defined at a-chlat1.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__tilde

 axiom tilde__def_axiom :
  ((Ada__characters__latin_1__tilde.tilde ) = 126)

end

(* Module for defining the value of constant "del" defined at a-chlat1.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__del___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__del

 axiom del__def_axiom :
  ((Ada__characters__latin_1__del.del ) = 127)

end

(* Module for defining the value of constant "reserved_128" defined at a-chlat1.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_128___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_128

 axiom reserved_128__def_axiom :
  ((Ada__characters__latin_1__reserved_128.reserved_128 ) = 128)

end

(* Module for defining the value of constant "reserved_129" defined at a-chlat1.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_129___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_129

 axiom reserved_129__def_axiom :
  ((Ada__characters__latin_1__reserved_129.reserved_129 ) = 129)

end

(* Module for defining the value of constant "bph" defined at a-chlat1.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bph___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bph

 axiom bph__def_axiom :
  ((Ada__characters__latin_1__bph.bph ) = 130)

end

(* Module for defining the value of constant "nbh" defined at a-chlat1.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nbh___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nbh

 axiom nbh__def_axiom :
  ((Ada__characters__latin_1__nbh.nbh ) = 131)

end

(* Module for defining the value of constant "reserved_132" defined at a-chlat1.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_132___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_132

 axiom reserved_132__def_axiom :
  ((Ada__characters__latin_1__reserved_132.reserved_132 ) = 132)

end

(* Module for defining the value of constant "nel" defined at a-chlat1.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nel___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nel

 axiom nel__def_axiom :
  ((Ada__characters__latin_1__nel.nel ) = 133)

end

(* Module for defining the value of constant "ssa" defined at a-chlat1.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ssa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ssa

 axiom ssa__def_axiom :
  ((Ada__characters__latin_1__ssa.ssa ) = 134)

end

(* Module for defining the value of constant "esa" defined at a-chlat1.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__esa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__esa

 axiom esa__def_axiom :
  ((Ada__characters__latin_1__esa.esa ) = 135)

end

(* Module for defining the value of constant "hts" defined at a-chlat1.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__hts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__hts

 axiom hts__def_axiom :
  ((Ada__characters__latin_1__hts.hts ) = 136)

end

(* Module for defining the value of constant "htj" defined at a-chlat1.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__htj___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__htj

 axiom htj__def_axiom :
  ((Ada__characters__latin_1__htj.htj ) = 137)

end

(* Module for defining the value of constant "vts" defined at a-chlat1.ads:151, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vts

 axiom vts__def_axiom :
  ((Ada__characters__latin_1__vts.vts ) = 138)

end

(* Module for defining the value of constant "pld" defined at a-chlat1.ads:152, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pld___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pld

 axiom pld__def_axiom :
  ((Ada__characters__latin_1__pld.pld ) = 139)

end

(* Module for defining the value of constant "plu" defined at a-chlat1.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plu

 axiom plu__def_axiom :
  ((Ada__characters__latin_1__plu.plu ) = 140)

end

(* Module for defining the value of constant "ri" defined at a-chlat1.ads:154, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ri___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ri

 axiom ri__def_axiom :
  ((Ada__characters__latin_1__ri.ri ) = 141)

end

(* Module for defining the value of constant "ss2" defined at a-chlat1.ads:155, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ss2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ss2

 axiom ss2__def_axiom :
  ((Ada__characters__latin_1__ss2.ss2 ) = 142)

end

(* Module for defining the value of constant "ss3" defined at a-chlat1.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ss3___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ss3

 axiom ss3__def_axiom :
  ((Ada__characters__latin_1__ss3.ss3 ) = 143)

end

(* Module for defining the value of constant "dcs" defined at a-chlat1.ads:158, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dcs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dcs

 axiom dcs__def_axiom :
  ((Ada__characters__latin_1__dcs.dcs ) = 144)

end

(* Module for defining the value of constant "pu1" defined at a-chlat1.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pu1___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pu1

 axiom pu1__def_axiom :
  ((Ada__characters__latin_1__pu1.pu1 ) = 145)

end

(* Module for defining the value of constant "pu2" defined at a-chlat1.ads:160, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pu2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pu2

 axiom pu2__def_axiom :
  ((Ada__characters__latin_1__pu2.pu2 ) = 146)

end

(* Module for defining the value of constant "sts" defined at a-chlat1.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sts

 axiom sts__def_axiom :
  ((Ada__characters__latin_1__sts.sts ) = 147)

end

(* Module for defining the value of constant "cch" defined at a-chlat1.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cch___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cch

 axiom cch__def_axiom :
  ((Ada__characters__latin_1__cch.cch ) = 148)

end

(* Module for defining the value of constant "mw" defined at a-chlat1.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__mw___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__mw

 axiom mw__def_axiom :
  ((Ada__characters__latin_1__mw.mw ) = 149)

end

(* Module for defining the value of constant "spa" defined at a-chlat1.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__spa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__spa

 axiom spa__def_axiom :
  ((Ada__characters__latin_1__spa.spa ) = 150)

end

(* Module for defining the value of constant "epa" defined at a-chlat1.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__epa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__epa

 axiom epa__def_axiom :
  ((Ada__characters__latin_1__epa.epa ) = 151)

end

(* Module for defining the value of constant "sos" defined at a-chlat1.ads:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sos___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sos

 axiom sos__def_axiom :
  ((Ada__characters__latin_1__sos.sos ) = 152)

end

(* Module for defining the value of constant "reserved_153" defined at a-chlat1.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_153___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_153

 axiom reserved_153__def_axiom :
  ((Ada__characters__latin_1__reserved_153.reserved_153 ) = 153)

end

(* Module for defining the value of constant "sci" defined at a-chlat1.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sci___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sci

 axiom sci__def_axiom :
  ((Ada__characters__latin_1__sci.sci ) = 154)

end

(* Module for defining the value of constant "csi" defined at a-chlat1.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__csi___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__csi

 axiom csi__def_axiom :
  ((Ada__characters__latin_1__csi.csi ) = 155)

end

(* Module for defining the value of constant "st" defined at a-chlat1.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__st___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__st

 axiom st__def_axiom :
  ((Ada__characters__latin_1__st.st ) = 156)

end

(* Module for defining the value of constant "osc" defined at a-chlat1.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__osc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__osc

 axiom osc__def_axiom :
  ((Ada__characters__latin_1__osc.osc ) = 157)

end

(* Module for defining the value of constant "pm" defined at a-chlat1.ads:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pm

 axiom pm__def_axiom :
  ((Ada__characters__latin_1__pm.pm ) = 158)

end

(* Module for defining the value of constant "apc" defined at a-chlat1.ads:174, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__apc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__apc

 axiom apc__def_axiom :
  ((Ada__characters__latin_1__apc.apc ) = 159)

end

(* Module for defining the value of constant "no_break_space" defined at a-chlat1.ads:182, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__no_break_space___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__no_break_space

 axiom no_break_space__def_axiom :
  ((Ada__characters__latin_1__no_break_space.no_break_space ) = 160)

end

(* Module for defining the value of constant "inverted_exclamation" defined at a-chlat1.ads:184, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__inverted_exclamation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__inverted_exclamation

 axiom inverted_exclamation__def_axiom :
  ((Ada__characters__latin_1__inverted_exclamation.inverted_exclamation ) = 161)

end

(* Module for defining the value of constant "cent_sign" defined at a-chlat1.ads:185, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cent_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cent_sign

 axiom cent_sign__def_axiom :
  ((Ada__characters__latin_1__cent_sign.cent_sign ) = 162)

end

(* Module for defining the value of constant "pound_sign" defined at a-chlat1.ads:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pound_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pound_sign

 axiom pound_sign__def_axiom :
  ((Ada__characters__latin_1__pound_sign.pound_sign ) = 163)

end

(* Module for defining the value of constant "currency_sign" defined at a-chlat1.ads:187, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__currency_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__currency_sign

 axiom currency_sign__def_axiom :
  ((Ada__characters__latin_1__currency_sign.currency_sign ) = 164)

end

(* Module for defining the value of constant "yen_sign" defined at a-chlat1.ads:188, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__yen_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__yen_sign

 axiom yen_sign__def_axiom :
  ((Ada__characters__latin_1__yen_sign.yen_sign ) = 165)

end

(* Module for defining the value of constant "broken_bar" defined at a-chlat1.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__broken_bar___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__broken_bar

 axiom broken_bar__def_axiom :
  ((Ada__characters__latin_1__broken_bar.broken_bar ) = 166)

end

(* Module for defining the value of constant "section_sign" defined at a-chlat1.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__section_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__section_sign

 axiom section_sign__def_axiom :
  ((Ada__characters__latin_1__section_sign.section_sign ) = 167)

end

(* Module for defining the value of constant "diaeresis" defined at a-chlat1.ads:191, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__diaeresis

 axiom diaeresis__def_axiom :
  ((Ada__characters__latin_1__diaeresis.diaeresis ) = 168)

end

(* Module for defining the value of constant "copyright_sign" defined at a-chlat1.ads:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__copyright_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__copyright_sign

 axiom copyright_sign__def_axiom :
  ((Ada__characters__latin_1__copyright_sign.copyright_sign ) = 169)

end

(* Module for defining the value of constant "feminine_ordinal_indicator" defined at a-chlat1.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__feminine_ordinal_indicator___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__feminine_ordinal_indicator

 axiom feminine_ordinal_indicator__def_axiom :
  ((Ada__characters__latin_1__feminine_ordinal_indicator.feminine_ordinal_indicator ) = 170)

end

(* Module for defining the value of constant "left_angle_quotation" defined at a-chlat1.ads:194, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_angle_quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_angle_quotation

 axiom left_angle_quotation__def_axiom :
  ((Ada__characters__latin_1__left_angle_quotation.left_angle_quotation ) = 171)

end

(* Module for defining the value of constant "not_sign" defined at a-chlat1.ads:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__not_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__not_sign

 axiom not_sign__def_axiom :
  ((Ada__characters__latin_1__not_sign.not_sign ) = 172)

end

(* Module for defining the value of constant "soft_hyphen" defined at a-chlat1.ads:196, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__soft_hyphen___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__soft_hyphen

 axiom soft_hyphen__def_axiom :
  ((Ada__characters__latin_1__soft_hyphen.soft_hyphen ) = 173)

end

(* Module for defining the value of constant "registered_trade_mark_sign" defined at a-chlat1.ads:197, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__registered_trade_mark_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__registered_trade_mark_sign

 axiom registered_trade_mark_sign__def_axiom :
  ((Ada__characters__latin_1__registered_trade_mark_sign.registered_trade_mark_sign ) = 174)

end

(* Module for defining the value of constant "macron" defined at a-chlat1.ads:198, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__macron___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__macron

 axiom macron__def_axiom :
  ((Ada__characters__latin_1__macron.macron ) = 175)

end

(* Module for defining the value of constant "degree_sign" defined at a-chlat1.ads:202, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__degree_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__degree_sign

 axiom degree_sign__def_axiom :
  ((Ada__characters__latin_1__degree_sign.degree_sign ) = 176)

end

(* Module for defining the value of constant "plus_minus_sign" defined at a-chlat1.ads:204, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plus_minus_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plus_minus_sign

 axiom plus_minus_sign__def_axiom :
  ((Ada__characters__latin_1__plus_minus_sign.plus_minus_sign ) = 177)

end

(* Module for defining the value of constant "superscript_two" defined at a-chlat1.ads:205, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_two___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_two

 axiom superscript_two__def_axiom :
  ((Ada__characters__latin_1__superscript_two.superscript_two ) = 178)

end

(* Module for defining the value of constant "superscript_three" defined at a-chlat1.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_three___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_three

 axiom superscript_three__def_axiom :
  ((Ada__characters__latin_1__superscript_three.superscript_three ) = 179)

end

(* Module for defining the value of constant "acute" defined at a-chlat1.ads:207, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__acute

 axiom acute__def_axiom :
  ((Ada__characters__latin_1__acute.acute ) = 180)

end

(* Module for defining the value of constant "micro_sign" defined at a-chlat1.ads:208, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__micro_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__micro_sign

 axiom micro_sign__def_axiom :
  ((Ada__characters__latin_1__micro_sign.micro_sign ) = 181)

end

(* Module for defining the value of constant "pilcrow_sign" defined at a-chlat1.ads:209, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pilcrow_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pilcrow_sign

 axiom pilcrow_sign__def_axiom :
  ((Ada__characters__latin_1__pilcrow_sign.pilcrow_sign ) = 182)

end

(* Module for defining the value of constant "middle_dot" defined at a-chlat1.ads:211, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__middle_dot___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__middle_dot

 axiom middle_dot__def_axiom :
  ((Ada__characters__latin_1__middle_dot.middle_dot ) = 183)

end

(* Module for defining the value of constant "cedilla" defined at a-chlat1.ads:212, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cedilla

 axiom cedilla__def_axiom :
  ((Ada__characters__latin_1__cedilla.cedilla ) = 184)

end

(* Module for defining the value of constant "superscript_one" defined at a-chlat1.ads:213, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_one___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_one

 axiom superscript_one__def_axiom :
  ((Ada__characters__latin_1__superscript_one.superscript_one ) = 185)

end

(* Module for defining the value of constant "masculine_ordinal_indicator" defined at a-chlat1.ads:214, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__masculine_ordinal_indicator___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__masculine_ordinal_indicator

 axiom masculine_ordinal_indicator__def_axiom :
  ((Ada__characters__latin_1__masculine_ordinal_indicator.masculine_ordinal_indicator ) = 186)

end

(* Module for defining the value of constant "right_angle_quotation" defined at a-chlat1.ads:215, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_angle_quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_angle_quotation

 axiom right_angle_quotation__def_axiom :
  ((Ada__characters__latin_1__right_angle_quotation.right_angle_quotation ) = 187)

end

(* Module for defining the value of constant "fraction_one_quarter" defined at a-chlat1.ads:216, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_one_quarter___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_one_quarter

 axiom fraction_one_quarter__def_axiom :
  ((Ada__characters__latin_1__fraction_one_quarter.fraction_one_quarter ) = 188)

end

(* Module for defining the value of constant "fraction_one_half" defined at a-chlat1.ads:217, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_one_half___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_one_half

 axiom fraction_one_half__def_axiom :
  ((Ada__characters__latin_1__fraction_one_half.fraction_one_half ) = 189)

end

(* Module for defining the value of constant "fraction_three_quarters" defined at a-chlat1.ads:218, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_three_quarters___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_three_quarters

 axiom fraction_three_quarters__def_axiom :
  ((Ada__characters__latin_1__fraction_three_quarters.fraction_three_quarters ) = 190)

end

(* Module for defining the value of constant "inverted_question" defined at a-chlat1.ads:219, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__inverted_question___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__inverted_question

 axiom inverted_question__def_axiom :
  ((Ada__characters__latin_1__inverted_question.inverted_question ) = 191)

end

(* Module for defining the value of constant "uc_a_grave" defined at a-chlat1.ads:223, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_grave

 axiom uc_a_grave__def_axiom :
  ((Ada__characters__latin_1__uc_a_grave.uc_a_grave ) = 192)

end

(* Module for defining the value of constant "uc_a_acute" defined at a-chlat1.ads:224, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_acute

 axiom uc_a_acute__def_axiom :
  ((Ada__characters__latin_1__uc_a_acute.uc_a_acute ) = 193)

end

(* Module for defining the value of constant "uc_a_circumflex" defined at a-chlat1.ads:225, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_circumflex

 axiom uc_a_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_a_circumflex.uc_a_circumflex ) = 194)

end

(* Module for defining the value of constant "uc_a_tilde" defined at a-chlat1.ads:226, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_tilde

 axiom uc_a_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_a_tilde.uc_a_tilde ) = 195)

end

(* Module for defining the value of constant "uc_a_diaeresis" defined at a-chlat1.ads:227, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_diaeresis

 axiom uc_a_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_a_diaeresis.uc_a_diaeresis ) = 196)

end

(* Module for defining the value of constant "uc_a_ring" defined at a-chlat1.ads:228, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_ring___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_ring

 axiom uc_a_ring__def_axiom :
  ((Ada__characters__latin_1__uc_a_ring.uc_a_ring ) = 197)

end

(* Module for defining the value of constant "uc_ae_diphthong" defined at a-chlat1.ads:229, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_ae_diphthong___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_ae_diphthong

 axiom uc_ae_diphthong__def_axiom :
  ((Ada__characters__latin_1__uc_ae_diphthong.uc_ae_diphthong ) = 198)

end

(* Module for defining the value of constant "uc_c_cedilla" defined at a-chlat1.ads:230, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_c_cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_c_cedilla

 axiom uc_c_cedilla__def_axiom :
  ((Ada__characters__latin_1__uc_c_cedilla.uc_c_cedilla ) = 199)

end

(* Module for defining the value of constant "uc_e_grave" defined at a-chlat1.ads:231, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_grave

 axiom uc_e_grave__def_axiom :
  ((Ada__characters__latin_1__uc_e_grave.uc_e_grave ) = 200)

end

(* Module for defining the value of constant "uc_e_acute" defined at a-chlat1.ads:232, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_acute

 axiom uc_e_acute__def_axiom :
  ((Ada__characters__latin_1__uc_e_acute.uc_e_acute ) = 201)

end

(* Module for defining the value of constant "uc_e_circumflex" defined at a-chlat1.ads:233, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_circumflex

 axiom uc_e_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_e_circumflex.uc_e_circumflex ) = 202)

end

(* Module for defining the value of constant "uc_e_diaeresis" defined at a-chlat1.ads:234, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_diaeresis

 axiom uc_e_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_e_diaeresis.uc_e_diaeresis ) = 203)

end

(* Module for defining the value of constant "uc_i_grave" defined at a-chlat1.ads:235, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_grave

 axiom uc_i_grave__def_axiom :
  ((Ada__characters__latin_1__uc_i_grave.uc_i_grave ) = 204)

end

(* Module for defining the value of constant "uc_i_acute" defined at a-chlat1.ads:236, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_acute

 axiom uc_i_acute__def_axiom :
  ((Ada__characters__latin_1__uc_i_acute.uc_i_acute ) = 205)

end

(* Module for defining the value of constant "uc_i_circumflex" defined at a-chlat1.ads:237, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_circumflex

 axiom uc_i_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_i_circumflex.uc_i_circumflex ) = 206)

end

(* Module for defining the value of constant "uc_i_diaeresis" defined at a-chlat1.ads:238, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_diaeresis

 axiom uc_i_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_i_diaeresis.uc_i_diaeresis ) = 207)

end

(* Module for defining the value of constant "uc_icelandic_eth" defined at a-chlat1.ads:242, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_icelandic_eth___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_icelandic_eth

 axiom uc_icelandic_eth__def_axiom :
  ((Ada__characters__latin_1__uc_icelandic_eth.uc_icelandic_eth ) = 208)

end

(* Module for defining the value of constant "uc_n_tilde" defined at a-chlat1.ads:243, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_n_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_n_tilde

 axiom uc_n_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_n_tilde.uc_n_tilde ) = 209)

end

(* Module for defining the value of constant "uc_o_grave" defined at a-chlat1.ads:244, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_grave

 axiom uc_o_grave__def_axiom :
  ((Ada__characters__latin_1__uc_o_grave.uc_o_grave ) = 210)

end

(* Module for defining the value of constant "uc_o_acute" defined at a-chlat1.ads:245, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_acute

 axiom uc_o_acute__def_axiom :
  ((Ada__characters__latin_1__uc_o_acute.uc_o_acute ) = 211)

end

(* Module for defining the value of constant "uc_o_circumflex" defined at a-chlat1.ads:246, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_circumflex

 axiom uc_o_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_o_circumflex.uc_o_circumflex ) = 212)

end

(* Module for defining the value of constant "uc_o_tilde" defined at a-chlat1.ads:247, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_tilde

 axiom uc_o_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_o_tilde.uc_o_tilde ) = 213)

end

(* Module for defining the value of constant "uc_o_diaeresis" defined at a-chlat1.ads:248, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_diaeresis

 axiom uc_o_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_o_diaeresis.uc_o_diaeresis ) = 214)

end

(* Module for defining the value of constant "multiplication_sign" defined at a-chlat1.ads:249, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__multiplication_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__multiplication_sign

 axiom multiplication_sign__def_axiom :
  ((Ada__characters__latin_1__multiplication_sign.multiplication_sign ) = 215)

end

(* Module for defining the value of constant "uc_o_oblique_stroke" defined at a-chlat1.ads:250, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_oblique_stroke___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_oblique_stroke

 axiom uc_o_oblique_stroke__def_axiom :
  ((Ada__characters__latin_1__uc_o_oblique_stroke.uc_o_oblique_stroke ) = 216)

end

(* Module for defining the value of constant "uc_u_grave" defined at a-chlat1.ads:251, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_grave

 axiom uc_u_grave__def_axiom :
  ((Ada__characters__latin_1__uc_u_grave.uc_u_grave ) = 217)

end

(* Module for defining the value of constant "uc_u_acute" defined at a-chlat1.ads:252, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_acute

 axiom uc_u_acute__def_axiom :
  ((Ada__characters__latin_1__uc_u_acute.uc_u_acute ) = 218)

end

(* Module for defining the value of constant "uc_u_circumflex" defined at a-chlat1.ads:253, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_circumflex

 axiom uc_u_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_u_circumflex.uc_u_circumflex ) = 219)

end

(* Module for defining the value of constant "uc_u_diaeresis" defined at a-chlat1.ads:254, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_diaeresis

 axiom uc_u_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_u_diaeresis.uc_u_diaeresis ) = 220)

end

(* Module for defining the value of constant "uc_y_acute" defined at a-chlat1.ads:255, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_y_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_y_acute

 axiom uc_y_acute__def_axiom :
  ((Ada__characters__latin_1__uc_y_acute.uc_y_acute ) = 221)

end

(* Module for defining the value of constant "uc_icelandic_thorn" defined at a-chlat1.ads:256, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_icelandic_thorn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_icelandic_thorn

 axiom uc_icelandic_thorn__def_axiom :
  ((Ada__characters__latin_1__uc_icelandic_thorn.uc_icelandic_thorn ) = 222)

end

(* Module for defining the value of constant "lc_german_sharp_s" defined at a-chlat1.ads:257, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_german_sharp_s___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_german_sharp_s

 axiom lc_german_sharp_s__def_axiom :
  ((Ada__characters__latin_1__lc_german_sharp_s.lc_german_sharp_s ) = 223)

end

(* Module for defining the value of constant "lc_a_grave" defined at a-chlat1.ads:261, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_grave

 axiom lc_a_grave__def_axiom :
  ((Ada__characters__latin_1__lc_a_grave.lc_a_grave ) = 224)

end

(* Module for defining the value of constant "lc_a_acute" defined at a-chlat1.ads:262, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_acute

 axiom lc_a_acute__def_axiom :
  ((Ada__characters__latin_1__lc_a_acute.lc_a_acute ) = 225)

end

(* Module for defining the value of constant "lc_a_circumflex" defined at a-chlat1.ads:263, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_circumflex

 axiom lc_a_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_a_circumflex.lc_a_circumflex ) = 226)

end

(* Module for defining the value of constant "lc_a_tilde" defined at a-chlat1.ads:264, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_tilde

 axiom lc_a_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_a_tilde.lc_a_tilde ) = 227)

end

(* Module for defining the value of constant "lc_a_diaeresis" defined at a-chlat1.ads:265, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_diaeresis

 axiom lc_a_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_a_diaeresis.lc_a_diaeresis ) = 228)

end

(* Module for defining the value of constant "lc_a_ring" defined at a-chlat1.ads:266, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_ring___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_ring

 axiom lc_a_ring__def_axiom :
  ((Ada__characters__latin_1__lc_a_ring.lc_a_ring ) = 229)

end

(* Module for defining the value of constant "lc_ae_diphthong" defined at a-chlat1.ads:267, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_ae_diphthong___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_ae_diphthong

 axiom lc_ae_diphthong__def_axiom :
  ((Ada__characters__latin_1__lc_ae_diphthong.lc_ae_diphthong ) = 230)

end

(* Module for defining the value of constant "lc_c_cedilla" defined at a-chlat1.ads:268, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_c_cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_c_cedilla

 axiom lc_c_cedilla__def_axiom :
  ((Ada__characters__latin_1__lc_c_cedilla.lc_c_cedilla ) = 231)

end

(* Module for defining the value of constant "lc_e_grave" defined at a-chlat1.ads:269, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_grave

 axiom lc_e_grave__def_axiom :
  ((Ada__characters__latin_1__lc_e_grave.lc_e_grave ) = 232)

end

(* Module for defining the value of constant "lc_e_acute" defined at a-chlat1.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_acute

 axiom lc_e_acute__def_axiom :
  ((Ada__characters__latin_1__lc_e_acute.lc_e_acute ) = 233)

end

(* Module for defining the value of constant "lc_e_circumflex" defined at a-chlat1.ads:271, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_circumflex

 axiom lc_e_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_e_circumflex.lc_e_circumflex ) = 234)

end

(* Module for defining the value of constant "lc_e_diaeresis" defined at a-chlat1.ads:272, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_diaeresis

 axiom lc_e_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_e_diaeresis.lc_e_diaeresis ) = 235)

end

(* Module for defining the value of constant "lc_i_grave" defined at a-chlat1.ads:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_grave

 axiom lc_i_grave__def_axiom :
  ((Ada__characters__latin_1__lc_i_grave.lc_i_grave ) = 236)

end

(* Module for defining the value of constant "lc_i_acute" defined at a-chlat1.ads:274, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_acute

 axiom lc_i_acute__def_axiom :
  ((Ada__characters__latin_1__lc_i_acute.lc_i_acute ) = 237)

end

(* Module for defining the value of constant "lc_i_circumflex" defined at a-chlat1.ads:275, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_circumflex

 axiom lc_i_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_i_circumflex.lc_i_circumflex ) = 238)

end

(* Module for defining the value of constant "lc_i_diaeresis" defined at a-chlat1.ads:276, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_diaeresis

 axiom lc_i_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_i_diaeresis.lc_i_diaeresis ) = 239)

end

(* Module for defining the value of constant "lc_icelandic_eth" defined at a-chlat1.ads:279, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_icelandic_eth___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_icelandic_eth

 axiom lc_icelandic_eth__def_axiom :
  ((Ada__characters__latin_1__lc_icelandic_eth.lc_icelandic_eth ) = 240)

end

(* Module for defining the value of constant "lc_n_tilde" defined at a-chlat1.ads:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_n_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_n_tilde

 axiom lc_n_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_n_tilde.lc_n_tilde ) = 241)

end

(* Module for defining the value of constant "lc_o_grave" defined at a-chlat1.ads:281, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_grave

 axiom lc_o_grave__def_axiom :
  ((Ada__characters__latin_1__lc_o_grave.lc_o_grave ) = 242)

end

(* Module for defining the value of constant "lc_o_acute" defined at a-chlat1.ads:282, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_acute

 axiom lc_o_acute__def_axiom :
  ((Ada__characters__latin_1__lc_o_acute.lc_o_acute ) = 243)

end

(* Module for defining the value of constant "lc_o_circumflex" defined at a-chlat1.ads:283, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_circumflex

 axiom lc_o_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_o_circumflex.lc_o_circumflex ) = 244)

end

(* Module for defining the value of constant "lc_o_tilde" defined at a-chlat1.ads:284, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_tilde

 axiom lc_o_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_o_tilde.lc_o_tilde ) = 245)

end

(* Module for defining the value of constant "lc_o_diaeresis" defined at a-chlat1.ads:285, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_diaeresis

 axiom lc_o_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_o_diaeresis.lc_o_diaeresis ) = 246)

end

(* Module for defining the value of constant "division_sign" defined at a-chlat1.ads:286, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__division_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__division_sign

 axiom division_sign__def_axiom :
  ((Ada__characters__latin_1__division_sign.division_sign ) = 247)

end

(* Module for defining the value of constant "lc_o_oblique_stroke" defined at a-chlat1.ads:287, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_oblique_stroke___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_oblique_stroke

 axiom lc_o_oblique_stroke__def_axiom :
  ((Ada__characters__latin_1__lc_o_oblique_stroke.lc_o_oblique_stroke ) = 248)

end

(* Module for defining the value of constant "lc_u_grave" defined at a-chlat1.ads:288, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_grave

 axiom lc_u_grave__def_axiom :
  ((Ada__characters__latin_1__lc_u_grave.lc_u_grave ) = 249)

end

(* Module for defining the value of constant "lc_u_acute" defined at a-chlat1.ads:289, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_acute

 axiom lc_u_acute__def_axiom :
  ((Ada__characters__latin_1__lc_u_acute.lc_u_acute ) = 250)

end

(* Module for defining the value of constant "lc_u_circumflex" defined at a-chlat1.ads:290, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_circumflex

 axiom lc_u_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_u_circumflex.lc_u_circumflex ) = 251)

end

(* Module for defining the value of constant "lc_u_diaeresis" defined at a-chlat1.ads:291, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_diaeresis

 axiom lc_u_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_u_diaeresis.lc_u_diaeresis ) = 252)

end

(* Module for defining the value of constant "lc_y_acute" defined at a-chlat1.ads:292, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y_acute

 axiom lc_y_acute__def_axiom :
  ((Ada__characters__latin_1__lc_y_acute.lc_y_acute ) = 253)

end

(* Module for defining the value of constant "lc_icelandic_thorn" defined at a-chlat1.ads:293, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_icelandic_thorn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_icelandic_thorn

 axiom lc_icelandic_thorn__def_axiom :
  ((Ada__characters__latin_1__lc_icelandic_thorn.lc_icelandic_thorn ) = 254)

end

(* Module for defining the value of constant "lc_y_diaeresis" defined at a-chlat1.ads:294, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y_diaeresis

 axiom lc_y_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_y_diaeresis.lc_y_diaeresis ) = 255)

end

(* Module for defining the value of constant "max_program_length" defined at machine.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__max_program_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__max_program_length

 axiom max_program_length__def_axiom :
  ((Machine__max_program_length.max_program_length ) = 65536)

end

(* Module for defining the value of constant "C13b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C13b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C14b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C14b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C15b" defined at machine.adb:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C15b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C22b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C22b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C23b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C23b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C24b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C24b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C31b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C31b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C32b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C32b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C33b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C33b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C40b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C40b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C41b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C41b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C42b" defined at machine.adb:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C42b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C49b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C49b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C50b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C50b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C51b" defined at machine.adb:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C51b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C59b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C59b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C60b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C60b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C61b" defined at machine.adb:198, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C61b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C69b" defined at machine.adb:201, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C69b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C70b" defined at machine.adb:201, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C70b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C79b" defined at machine.adb:208, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C79b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C83b" defined at machine.adb:211, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C83b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C98b" defined at machine.adb:237, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidadd__C98b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C102b" defined at machine.adb:237, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidadd__C102b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C109b" defined at machine.adb:255, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidsub__C109b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C113b" defined at machine.adb:255, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidsub__C113b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C120b" defined at machine.adb:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidmul__C120b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C124b" defined at machine.adb:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidmul__C124b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C131b" defined at machine.adb:303, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvaliddiv__C131b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C135b" defined at machine.adb:303, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvaliddiv__C135b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C142b" defined at machine.adb:322, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidldr__C142b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C149b" defined at machine.adb:332, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidstr__C149b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C170b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__C170b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C175b" defined at machine.adb:237 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__B174b__C175b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C179b" defined at machine.adb:237 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__B174b__C179b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C183b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__C183b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C194b" defined at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__C194b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C199b" defined at machine.adb:255 instantiated at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__B198b__C199b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C203b" defined at machine.adb:255 instantiated at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__B198b__C203b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C207b" defined at machine.adb:442, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__C207b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C218b" defined at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__C218b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C223b" defined at machine.adb:273 instantiated at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__B222b__C223b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C227b" defined at machine.adb:273 instantiated at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__B222b__C227b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C231b" defined at machine.adb:464, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__C231b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C241b" defined at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__C241b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C246b" defined at machine.adb:303 instantiated at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__B245b__C246b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C250b" defined at machine.adb:303 instantiated at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__B245b__C250b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C254b" defined at machine.adb:486, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__C254b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C263b" defined at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performldr__C263b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C268b" defined at machine.adb:322 instantiated at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performldr__B267b__C268b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C272b" defined at machine.adb:504, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performldr__C272b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C281b" defined at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performstr__C281b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C286b" defined at machine.adb:332 instantiated at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performstr__B285b__C286b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C290b" defined at machine.adb:522, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performstr__C290b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C298b" defined at machine.adb:542, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmov__C298b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C302b" defined at machine.adb:542, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmov__C302b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C308b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C308b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C309b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C309b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C313b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C313b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C314b" defined at machine.adb:560, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C314b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C319b" defined at machine.adb:569, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C319b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C320b" defined at machine.adb:569, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C320b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C325b" defined at machine.adb:572, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C325b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C326b" defined at machine.adb:572, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C326b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C330b" defined at machine.adb:578, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C330b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C334b" defined at machine.adb:584, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C334b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C335b" defined at machine.adb:584, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C335b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C339b" defined at machine.adb:590, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C339b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C343b" defined at machine.adb:601, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performnop__C343b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C360b" defined at machine.adb:619, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C360b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C361b" defined at machine.adb:619, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C361b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C365b" defined at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C365b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C370b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B369b__C370b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C375b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B369b__B374b__C375b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C379b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B369b__B374b__C379b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C383b" defined at machine.adb:420 instantiated at machine.adb:631, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B369b__C383b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C390b" defined at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C390b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C395b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B394b__C395b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C400b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B394b__B399b__C400b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C404b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B394b__B399b__C404b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C408b" defined at machine.adb:442 instantiated at machine.adb:633, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B394b__C408b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C415b" defined at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C415b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C420b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B419b__C420b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C425b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B419b__B424b__C425b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C429b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B419b__B424b__C429b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C433b" defined at machine.adb:464 instantiated at machine.adb:635, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B419b__C433b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C440b" defined at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C440b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C445b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B444b__C445b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C450b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B444b__B449b__C450b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C454b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B444b__B449b__C454b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C458b" defined at machine.adb:486 instantiated at machine.adb:637, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B444b__C458b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C464b" defined at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C464b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C470b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B469b__C470b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C475b" defined at machine.adb:322 instantiated at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B469b__B474b__C475b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C479b" defined at machine.adb:504 instantiated at machine.adb:639, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B469b__C479b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C485b" defined at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C485b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C491b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B490b__C491b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C496b" defined at machine.adb:332 instantiated at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B490b__B495b__C496b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C500b" defined at machine.adb:522 instantiated at machine.adb:641, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B490b__C500b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C506b" defined at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C506b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C511b" defined at machine.adb:542 instantiated at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B510b__C511b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C515b" defined at machine.adb:542 instantiated at machine.adb:643, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B510b__C515b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C522b" defined at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C522b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C526b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B525b__C526b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C527b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B525b__C527b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C531b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B525b__C531b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C532b" defined at machine.adb:560 instantiated at machine.adb:648, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B525b__C532b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C536b" defined at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C536b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C541b" defined at machine.adb:569 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C541b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C542b" defined at machine.adb:569 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C542b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C547b" defined at machine.adb:572 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C547b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C548b" defined at machine.adb:572 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C548b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C552b" defined at machine.adb:578 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C552b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C556b" defined at machine.adb:584 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C556b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C557b" defined at machine.adb:584 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C557b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C561b" defined at machine.adb:590 instantiated at machine.adb:650, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B540b__C561b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C568b" defined at machine.adb:601 instantiated at machine.adb:652, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B567b__C568b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C575b" defined at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__C575b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C584b" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C585b" defined at machine.adb:619 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C589b" defined at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C594b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C599b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C603b" defined at machine.adb:237 instantiated at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C607b" defined at machine.adb:420 instantiated at machine.adb:631 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C614b" defined at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C619b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C624b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C628b" defined at machine.adb:255 instantiated at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C632b" defined at machine.adb:442 instantiated at machine.adb:633 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C639b" defined at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C644b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C649b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C653b" defined at machine.adb:273 instantiated at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C657b" defined at machine.adb:464 instantiated at machine.adb:635 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C664b" defined at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C669b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C674b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C678b" defined at machine.adb:303 instantiated at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C682b" defined at machine.adb:486 instantiated at machine.adb:637 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C688b" defined at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C694b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C699b" defined at machine.adb:322 instantiated at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C703b" defined at machine.adb:504 instantiated at machine.adb:639 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C709b" defined at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C715b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C720b" defined at machine.adb:332 instantiated at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C724b" defined at machine.adb:522 instantiated at machine.adb:641 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C730b" defined at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C735b" defined at machine.adb:542 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C739b" defined at machine.adb:542 instantiated at machine.adb:643 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C746b" defined at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C750b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C751b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C755b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C756b" defined at machine.adb:560 instantiated at machine.adb:648 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C760b" defined at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C765b" defined at machine.adb:569 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C766b" defined at machine.adb:569 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C771b" defined at machine.adb:572 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C772b" defined at machine.adb:572 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C776b" defined at machine.adb:578 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C780b" defined at machine.adb:584 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C781b" defined at machine.adb:584 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C785b" defined at machine.adb:590 instantiated at machine.adb:650 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C792b" defined at machine.adb:601 instantiated at machine.adb:652 instantiated at machine.adb:807, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at instruction.ads:70, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__init___axiom
 use import "_gnatprove_standard".Main

 val init 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "generaterandominstr" defined at instruction.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__generaterandominstr___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__instr
 use        Instruction__instr___axiom

 val generaterandominstr 
   (inst__split_fields : Instruction__instr.__split_fields__ref) (inst__split_discrs : Instruction__instr.__split_discrs__ref) (inst__attr__constrained : bool) : unit
  requires {  true }
  ensures {  (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = inst__attr__constrained } True True True True) }
  writes {inst__split_fields, inst__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "debugprintinstr" defined at instruction.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__debugprintinstr___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val debugprintinstr 
   (inst : Instruction__instr.instr) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at debug.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at debug.ads:8, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put_line___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put_line 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at debug.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put__2___axiom
 use import "_gnatprove_standard".Main

 val put__2 
   (item : int) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at debug.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__new_line___axiom
 use import "_gnatprove_standard".Main

 val new_line 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at debug.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put__3___axiom
 use import "_gnatprove_standard".Main

 val put__3 
   (item : int) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Machine__executeprogram___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        Machine__returncode___axiom
 use        Array__Int__Instruction__instr

 val executeprogram 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) (ret : int__ref) (result__ : int__ref) : unit
  requires {  true }
  ensures {  ( (Machine__returncode___axiom.dynamic_invariant ret.int__content True True True True) /\ (Standard__integer___axiom.dynamic_invariant result__.int__content True True True True) ) }
  writes {ret, result__}

end

(* Module for declaring a program function (and possibly an axiom) for "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Machine__detectinvalidbehaviour___axiom
 use import "_gnatprove_standard".Main
 use        Machine__detectinvalidbehaviour
 use        Array__Int__Instruction__instr

 val detectinvalidbehaviour 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) : bool
  requires {  true }
  ensures {  ( ( (result = (Machine__detectinvalidbehaviour.detectinvalidbehaviour prog cycles)) /\ (Machine__detectinvalidbehaviour.detectinvalidbehaviour__function_guard result prog cycles) ) /\ true ) }

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "machine" defined at machine.ads:4, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Machine__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer___axiom
 use        Machine__max_program_length
 use        Standard__integer___axiom
 use        Machine__max_program_length___axiom

 let def #"machine.ads" 4 0 0#"GP_Subp:machine.ads:4" "W:diverges:N" 
   (__void_param : unit)
  requires { #"machine.ads" 4 0 0# true }
  ensures { #"machine.ads" 4 0 0# true }
   =
  ( (#"machine.ads" 4 0 0# ());
  (#"machine.ads" 12 0 0# ());
  (#"machine.ads" 15 0 0# ( #"machine.ads" 15 0 0# abstract ensures {true}(let _ = 65536 in (
   ()))
   end ;
  #"machine.ads" 15 0 0# assume { #"machine.ads" 15 0 0# (Standard__integer___axiom.dynamic_invariant Machine__max_program_length.max_program_length True False True True) } ));
  (#"machine.ads" 19 0 0# ());
  (#"machine.ads" 22 0 0# ());
  (#"machine.ads" 35 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.adb" 18 0 0# ());
  (#"machine.adb" 21 0 0# ());
  (#"machine.adb" 24 0 0# ());
  (#"machine.adb" 28 0 0# ());
  (#"machine.adb" 28 0 0# ());
  (#"machine.adb" 39 0 0# ());
  (#"machine.adb" 42 0 0# ());
  (#"machine.adb" 45 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 48 0 0# ());
  (#"machine.adb" 51 0 0# ());
  (#"machine.adb" 51 0 0# ());
  (#"machine.adb" 51 0 0# ());
  (#"machine.adb" 67 0 0# ());
  (#"machine.adb" 67 0 0# ());
  (#"machine.adb" 67 0 0# ());
  (#"machine.adb" 80 0 0# ());
  (#"machine.adb" 80 0 0# ());
  (#"machine.adb" 80 0 0# ());
  (#"machine.adb" 93 0 0# ());
  (#"machine.adb" 93 0 0# ());
  (#"machine.adb" 93 0 0# ());
  (#"machine.adb" 106 0 0# ());
  (#"machine.adb" 106 0 0# ());
  (#"machine.adb" 106 0 0# ());
  (#"machine.adb" 118 0 0# ());
  (#"machine.adb" 118 0 0# ());
  (#"machine.adb" 118 0 0# ());
  (#"machine.adb" 131 0 0# ());
  (#"machine.adb" 131 0 0# ());
  (#"machine.adb" 131 0 0# ());
  (#"machine.adb" 144 0 0# ());
  (#"machine.adb" 144 0 0# ());
  (#"machine.adb" 144 0 0# ());
  (#"machine.adb" 156 0 0# ());
  (#"machine.adb" 228 0 0# ());
  (#"machine.adb" 228 0 0# ());
  (#"machine.adb" 228 0 0# ());
  (#"machine.adb" 234 0 0# ());
  (#"machine.adb" 234 0 0# ());
  (#"machine.adb" 234 0 0# ());
  (#"machine.adb" 252 0 0# ());
  (#"machine.adb" 252 0 0# ());
  (#"machine.adb" 252 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 300 0 0# ());
  (#"machine.adb" 300 0 0# ());
  (#"machine.adb" 300 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 330 0 0# ());
  (#"machine.adb" 330 0 0# ());
  (#"machine.adb" 330 0 0# ());
  (#"machine.adb" 340 0 0# ());
  (#"machine.adb" 340 0 0# ());
  (#"machine.adb" 340 0 0# ());
  (#"machine.adb" 349 0 0# ());
  (#"machine.adb" 349 0 0# ());
  (#"machine.adb" 349 0 0# ());
  (#"machine.adb" 360 0 0# ());
  (#"machine.adb" 360 0 0# ());
  (#"machine.adb" 360 0 0# ());
  (#"machine.adb" 403 0 0# ());
  (#"machine.adb" 403 0 0# ());
  (#"machine.adb" 403 0 0# ());
  (#"machine.adb" 409 0 0# ());
  (#"machine.adb" 409 0 0# ());
  (#"machine.adb" 409 0 0# ());
  (#"machine.adb" 418 0 0# ());
  (#"machine.adb" 418 0 0# ());
  (#"machine.adb" 418 0 0# ());
  (#"machine.adb" 440 0 0# ());
  (#"machine.adb" 440 0 0# ());
  (#"machine.adb" 440 0 0# ());
  (#"machine.adb" 462 0 0# ());
  (#"machine.adb" 462 0 0# ());
  (#"machine.adb" 462 0 0# ());
  (#"machine.adb" 484 0 0# ());
  (#"machine.adb" 484 0 0# ());
  (#"machine.adb" 484 0 0# ());
  (#"machine.adb" 502 0 0# ());
  (#"machine.adb" 502 0 0# ());
  (#"machine.adb" 502 0 0# ());
  (#"machine.adb" 520 0 0# ());
  (#"machine.adb" 520 0 0# ());
  (#"machine.adb" 520 0 0# ());
  (#"machine.adb" 540 0 0# ());
  (#"machine.adb" 540 0 0# ());
  (#"machine.adb" 540 0 0# ());
  (#"machine.adb" 552 0 0# ());
  (#"machine.adb" 552 0 0# ());
  (#"machine.adb" 552 0 0# ());
  (#"machine.adb" 558 0 0# ());
  (#"machine.adb" 558 0 0# ());
  (#"machine.adb" 558 0 0# ());
  (#"machine.adb" 567 0 0# ());
  (#"machine.adb" 567 0 0# ());
  (#"machine.adb" 567 0 0# ());
  (#"machine.adb" 599 0 0# ());
  (#"machine.adb" 599 0 0# ());
  (#"machine.adb" 599 0 0# ());
  (#"machine.adb" 608 0 0# ());
  (#"machine.adb" 608 0 0# ());
  (#"machine.adb" 608 0 0# ());
  (#"machine.adb" 802 0 0# ());
  ( "GP_Sloc:machine.adb:811:1" (#"machine.adb" 811 0 0# ()) ) )
end

(* Module for defining the value of the aggregate at machine.adb:162, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__executeprogram__regs__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__integerval
 use        Machine__integerval___axiom
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__regs__aggregate_def
 use        Array__Int__Machine__integerval

 axiom def_axiom :
  (forall temp___959   : int.
   (let temp___958 = (Machine__executeprogram__regs__aggregate_def.machine__executeprogram__regs__aggregate_def temp___959) in (
    (if ((Machine__integerval___axiom.dynamic_invariant temp___959 True True True True)) then (
     (forall temp___960   : int.
      ((Array__Int__Machine__integerval.get temp___958 temp___960) = ( 0 : Machine__integerval.integerval )))) else true)))
  )

end

(* Module for defining the value of the aggregate at machine.adb:164, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__executeprogram__mem__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__integerval
 use        Machine__integerval___axiom
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__mem__aggregate_def
 use        Array__Int__Machine__integerval

 axiom def_axiom :
  (forall temp___962   : int.
   (let temp___961 = (Machine__executeprogram__mem__aggregate_def.machine__executeprogram__mem__aggregate_def temp___962) in (
    (if ((Machine__integerval___axiom.dynamic_invariant temp___962 True True True True)) then (
     (forall temp___963   : int.
      ((Array__Int__Machine__integerval.get temp___961 temp___963) = ( 0 : Machine__integerval.integerval )))) else true)))
  )

end

(* Module for checking contracts and absence of run-time errors in subprogram "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Machine__executeprogram__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Int_Division
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__integer___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg___axiom
 use        Instruction__reg__rep
 use        Instruction__addr
 use        Instruction__offset
 use        Instruction__offset___axiom
 use        Instruction__offset__rep
 use        Instruction__instr
 use        Instruction__instr___axiom
 use        Machine__returncode___axiom
 use        Machine__programcounter
 use        Machine__programcounter___axiom
 use        Array__Int__Instruction__instr
 use        Machine__program___axiom
 use        Machine__executeprogram__prog
 use        Machine__executeprogram__cycles
 use        Machine__executeprogram__ret
 use        Machine__executeprogram__result
 use        Machine__TintegervalB
 use        Machine__integerval
 use        Machine__integerval__rep
 use        Array__Int__Machine__integerval
 use        Machine__integerregister___axiom
 use        Machine__integermemory___axiom
 use        Machine__executeprogram__cyclecount
 use        Machine__executeprogram__inst
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__regs
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__mem
 use        Machine__executeprogram__pc
 use        Machine__executeprogram__L_1
 use        Machine__executeprogram__L_1__C13b
 use        Machine__executeprogram__L_1__C14b
 use        Machine__executeprogram__L_1__C15b
 use        Machine__executeprogram__L_1__C22b
 use        Machine__executeprogram__L_1__C23b
 use        Machine__executeprogram__L_1__C24b
 use        Machine__executeprogram__L_1__C31b
 use        Machine__executeprogram__L_1__C32b
 use        Machine__executeprogram__L_1__C33b
 use        Machine__executeprogram__L_1__C40b
 use        Machine__executeprogram__L_1__C41b
 use        Machine__executeprogram__L_1__C42b
 use        Machine__executeprogram__L_1__C49b
 use        Machine__executeprogram__L_1__C50b
 use        Machine__executeprogram__L_1__C51b
 use        Machine__executeprogram__L_1__C59b
 use        Machine__executeprogram__L_1__C60b
 use        Machine__executeprogram__L_1__C61b
 use        Machine__executeprogram__L_1__C69b
 use        Machine__executeprogram__L_1__C70b
 use        Machine__executeprogram__L_1__C79b
 use        Machine__executeprogram__L_1__C83b
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__regs__aggregate_def
 use        Array__Int__Machine__integerval
 use        Array__Int__Machine__integerval
 use        Machine__executeprogram__mem__aggregate_def
 use        Array__Int__Machine__integerval
 use        Standard__integer___axiom
 use        Standard__integer___axiom
 use        Machine__integerval___axiom
 use        Machine__integerregister___axiom
 use        Machine__integermemory___axiom
 use        Machine__executeprogram__cyclecount___axiom
 use        Machine__executeprogram__inst___axiom
 use        Machine__executeprogram__regs___axiom
 use        Machine__executeprogram__regs__aggregate_def___axiom
 use        Machine__executeprogram__mem___axiom
 use        Machine__executeprogram__mem__aggregate_def___axiom
 use        Machine__executeprogram__pc___axiom
 use        Machine__executeprogram__L_1___axiom
 use        Machine__returncode___axiom
 use        Machine__programcounter___axiom
 use        Machine__program___axiom
 use        Machine__executeprogram__prog___axiom
 use        Machine__executeprogram__cycles___axiom
 use        Machine__executeprogram__ret___axiom
 use        Machine__executeprogram__result___axiom
 use        Instruction__opcode___axiom
 use        Instruction__reg___axiom
 use        Instruction__addr___axiom
 use        Instruction__offset___axiom
 use        Instruction__instr___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Machine__TintegervalB___axiom
 use        Machine__executeprogram__L_1__C13b___axiom
 use        Machine__executeprogram__L_1__C14b___axiom
 use        Machine__executeprogram__L_1__C15b___axiom
 use        Machine__executeprogram__L_1__C22b___axiom
 use        Machine__executeprogram__L_1__C23b___axiom
 use        Machine__executeprogram__L_1__C24b___axiom
 use        Machine__executeprogram__L_1__C31b___axiom
 use        Machine__executeprogram__L_1__C32b___axiom
 use        Machine__executeprogram__L_1__C33b___axiom
 use        Machine__executeprogram__L_1__C40b___axiom
 use        Machine__executeprogram__L_1__C41b___axiom
 use        Machine__executeprogram__L_1__C42b___axiom
 use        Machine__executeprogram__L_1__C49b___axiom
 use        Machine__executeprogram__L_1__C50b___axiom
 use        Machine__executeprogram__L_1__C51b___axiom
 use        Machine__executeprogram__L_1__C59b___axiom
 use        Machine__executeprogram__L_1__C60b___axiom
 use        Machine__executeprogram__L_1__C61b___axiom
 use        Machine__executeprogram__L_1__C69b___axiom
 use        Machine__executeprogram__L_1__C70b___axiom
 use        Machine__executeprogram__L_1__C79b___axiom
 use        Machine__executeprogram__L_1__C83b___axiom

 let def #"machine.ads" 35 0 0#"W:diverges:N" "GP_Subp:machine.ads:35" 
   (__void_param : unit)
  requires { #"machine.ads" 35 0 0# true }
  ensures { #"machine.ads" 35 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Machine__program___axiom.dynamic_invariant Machine__executeprogram__prog.prog True False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cycles.cycles True False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Machine__returncode___axiom.dynamic_invariant Machine__executeprogram__ret.ret.int__content False False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__result.result__.int__content False False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# true };
  () (* Declarations introduced by the compiler at the beginning of the subprogram machine.ads:35 *)
  ;
  () (* Check for RTE in the Pre of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# true };
  #"machine.ads" 35 0 0# try
   ( (#"machine.adb" 158 0 0# ( #"machine.adb" 158 0 0# Machine__executeprogram__cyclecount.cyclecount.int__content <- ( 0 );
   #"machine.adb" 158 0 0# assume { #"machine.adb" 158 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cyclecount.cyclecount.int__content True False True True) } ));
   (#"machine.adb" 160 0 0# ( #"machine.adb" 160 0 0# abstract ensures {true}(let _ = #"machine.adb" 160 0 0# abstract ensures {true}(let _ = (let temp___956 = 0 in (
    ()))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 160 0 0# assume { #"machine.adb" 160 0 0# (Instruction__instr___axiom.default_initial_assumption { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False) };
   #"machine.adb" 160 0 0# assume { #"machine.adb" 160 0 0# (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False False True True) } ));
   (#"machine.adb" 162 0 0# ( #"machine.adb" 162 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Machine__executeprogram__regs__aggregate_def.machine__executeprogram__regs__aggregate_def(0)) );
   #"machine.adb" 162 0 0# assume { #"machine.adb" 162 0 0# (Machine__integerregister___axiom.dynamic_invariant Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content True False True True) } ));
   (#"machine.adb" 164 0 0# ( #"machine.adb" 164 0 0# Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content <- ( (Machine__executeprogram__mem__aggregate_def.machine__executeprogram__mem__aggregate_def(0)) );
   #"machine.adb" 164 0 0# assume { #"machine.adb" 164 0 0# (Machine__integermemory___axiom.dynamic_invariant Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content True False True True) } ));
   (#"machine.adb" 166 0 0# ( #"machine.adb" 166 0 0# Machine__executeprogram__pc.pc.int__content <- ( 1 );
   #"machine.adb" 166 0 0# assume { #"machine.adb" 166 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__executeprogram__pc.pc.int__content True False True True) } ));
   (#"machine.adb" 172 0 0# ());
   ( "GP_Sloc:machine.adb:168:11" (#"machine.adb" 168 0 0# #"machine.adb" 168 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) );
   ( "GP_Sloc:machine.adb:169:14" (#"machine.adb" 169 0 0# #"machine.adb" 169 0 0# Machine__executeprogram__result.result__.int__content <- ( 0 )) );
   ( "GP_Sloc:machine.adb:172:53" (#"machine.adb" 172 0 0# ( () (* Translation of an Ada loop from machine.adb:172 *)
   ;
   (if ((Boolean.andb((Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles)) ((Machine__executeprogram__ret.ret.int__content = 0)))) then (
    #"machine.adb" 172 0 0# try
     ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content in (
      ()))
      end ;
     (let temp___974 = #"machine.adb" 172 0 0# (any Array__Int__Machine__integerval.map
     ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content)} 
     ) in (
      ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__result.result__.int__content in (
       ()))
       end ;
      (let temp___973 = #"machine.adb" 172 0 0# (any int
      ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__result.result__.int__content)} 
      ) in (
       ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } in (
        ()))
        end ;
       (let temp___972 = #"machine.adb" 172 0 0# (any Instruction__instr.instr
       ensures {#"machine.adb" 172 0 0# (result = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })} 
       ) in (
        ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__ret.ret.int__content in (
         ()))
         end ;
        (let temp___971 = #"machine.adb" 172 0 0# (any int
        ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__ret.ret.int__content)} 
        ) in (
         ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__cyclecount.cyclecount.int__content in (
          ()))
          end ;
         (let temp___970 = #"machine.adb" 172 0 0# (any int
         ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__cyclecount.cyclecount.int__content)} 
         ) in (
          ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__pc.pc.int__content in (
           ()))
           end ;
          (let temp___969 = #"machine.adb" 172 0 0# (any int
          ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__pc.pc.int__content)} 
          ) in (
           ( #"machine.adb" 172 0 0# abstract ensures {true}(let _ = Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content in (
            ()))
            end ;
           (let temp___967 = #"machine.adb" 172 0 0# (any Array__Int__Machine__integerval.map
           ensures {#"machine.adb" 172 0 0# (result = Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content)} 
           ) in (
            ( () (* First unroling of the loop statements appearing before the loop invariant of loop machine.adb:172 *)
            ;
            () (* While loop translating the Ada loop from machine.adb:172 *)
            ;
            #"machine.adb" 172 0 0# while True do
             ( () (* Assume implicit invariants from the loop machine.adb:172 *)
             ;
             #"machine.adb" 172 0 0# assume { #"machine.adb" 172 0 0# (Boolean.andb(( ( ( ( ( ( ( ( ( ( ( ( ( ( true /\ (Machine__integermemory___axiom.dynamic_invariant Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content False True True True) ) /\ true ) /\ (Machine__programcounter___axiom.dynamic_invariant Machine__executeprogram__pc.pc.int__content False True True True) ) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cyclecount.cyclecount.int__content False True True True) ) /\ true ) /\ (Machine__returncode___axiom.dynamic_invariant Machine__executeprogram__ret.ret.int__content False True True True) ) /\ true ) /\ (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False True True True) ) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__result.result__.int__content False True True True) ) /\ true ) /\ (Machine__integerregister___axiom.dynamic_invariant Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content False True True True) ) /\ (forall temp___975 #"machine.adb" 172 0 0#  : int.
              (if (( (Instruction__reg.first <= temp___975) /\ (temp___975 <= Instruction__reg.last) )) then (
               (if (( false /\ ( false /\ ( false /\ ( false /\ ( false /\ false ) ) ) ) )) then (
                ((Array__Int__Machine__integerval.get Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content temp___975) = (Array__Int__Machine__integerval.get temp___974 temp___975))) else (
                true))) else true)) )) (( (Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles) /\ (Machine__executeprogram__ret.ret.int__content = 0) ))) };
             () (* Check for absence of RTE in the invariant of loop machine.adb:172 *)
             ;
             () (* Loop statements appearing after the loop invariant of loop machine.adb:172 *)
             ;
             ( "GP_Sloc:machine.adb:173:10" (#"machine.adb" 173 0 0# ()) );
             ( "GP_Sloc:machine.adb:173:23" (#"machine.adb" 173 0 0# ()) );
             ( "GP_Sloc:machine.adb:173:15" (#"machine.adb" 173 0 0# (let temp___966 = { ( (let temp___964 = (Array__Int__Instruction__instr.get(Machine__executeprogram__prog.prog) (Machine__executeprogram__pc.pc.int__content)) in (
             (let temp___965 = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } in (
              ( #"machine.adb" 173 0 0# assert { #"machine.adb" 173 0 0# (#"machine.adb" 173 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:173:15" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Id:0" "comment:         Inst := Prog(PC);
              ^ machine.adb:173:15:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__inst_assign" (if ((Instruction__instr.attr__constrained temp___965)) then (
               ((Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___964)) = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___965)))) else true) )) };
              temp___964 )))
             ))
              ) with Instruction__instr.attr__constrained = (Instruction__instr.attr__constrained({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) } in (
              (  Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content <- ( (Instruction__instr.__split_fields(temp___966)) );
               Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content <- ( (Instruction__instr.__split_discrs(temp___966)) ) )))
             ) );
             ( "GP_Sloc:machine.adb:176:10" (#"machine.adb" 176 0 0# ()) );
             ( "GP_Sloc:machine.adb:176:10" (#"machine.adb" 176 0 0# ( (Debug__put__2___axiom.put__2(Machine__executeprogram__pc.pc.int__content)) )) );
             ( "GP_Sloc:machine.adb:176:28" (#"machine.adb" 176 0 0# ()) );
             ( "GP_Sloc:machine.adb:176:28" (#"machine.adb" 176 0 0# ( (Debug__put__3___axiom.put__3(58)) )) );
             ( "GP_Sloc:machine.adb:176:38" (#"machine.adb" 176 0 0# ()) );
             ( "GP_Sloc:machine.adb:176:38" (#"machine.adb" 176 0 0# ( (Debug__put__3___axiom.put__3(9)) )) );
             ( "GP_Sloc:machine.adb:177:26" (#"machine.adb" 177 0 0# ()) );
             ( "GP_Sloc:machine.adb:177:10" (#"machine.adb" 177 0 0# ()) );
             ( "GP_Sloc:machine.adb:177:10" (#"machine.adb" 177 0 0# ( (Instruction__debugprintinstr___axiom.debugprintinstr({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )) );
             ( "GP_Sloc:machine.adb:178:10" (#"machine.adb" 178 0 0# ()) );
             ( "GP_Sloc:machine.adb:178:10" (#"machine.adb" 178 0 0# ( (Debug__new_line___axiom.new_line(())) )) );
             ( "GP_Sloc:machine.adb:181:15" (#"machine.adb" 181 0 0# ()) );
             ( "GP_Sloc:machine.adb:181:10" (#"machine.adb" 181 0 0# (if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 1)) then (
              ( ( "GP_Sloc:machine.adb:183:65" (#"machine.adb" 183 0 0# ()) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# ()) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# (#"machine.adb" 183 0 0# ( (let machine__executeprogram__L_1__C13b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 183 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:183:16" "GP_Id:1" "comment:               DoAdd(Inst.AddRd, Inst.AddRs1, Inst.AddRs2, Ret, Regs);
               ^ machine.adb:183:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C13b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C13b__assume = Machine__executeprogram__L_1__C13b.c13b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C13b.c13b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# (#"machine.adb" 183 0 0# ( (let machine__executeprogram__L_1__C14b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 183 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:183:16" "comment:               DoAdd(Inst.AddRd, Inst.AddRs1, Inst.AddRs2, Ret, Regs);
               ^ machine.adb:183:16:VC_DISCRIMINANT_CHECK" "GP_Id:2" "GP_Shape:L_1_while__case__C14b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C14b__assume = Machine__executeprogram__L_1__C14b.c14b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C14b.c14b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# (#"machine.adb" 183 0 0# ( (let machine__executeprogram__L_1__C15b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 183 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:183:16" "comment:               DoAdd(Inst.AddRd, Inst.AddRs1, Inst.AddRs2, Ret, Regs);
               ^ machine.adb:183:16:VC_DISCRIMINANT_CHECK" "GP_Id:3" "GP_Shape:L_1_while__case__C15b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C15b__assume = Machine__executeprogram__L_1__C15b.c15b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C15b.c15b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# ()) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# ()) );
              ( "GP_Sloc:machine.adb:183:16" (#"machine.adb" 183 0 0# ()) );
              ( "GP_Sloc:machine.adb:70:7:inlined:machine.adb:183:16" (#"machine.adb" 70 0 0# (if ((Boolean.orb(( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C15b.c15b)))) > 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C14b.c14b)))) > (#"machine.adb" 70 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:70:62:inlined:machine.adb:183:16" "GP_Id:5" "comment:      if (Regs(Rs2) > 0 and then Regs(Rs1) > IntegerVal'Last - Regs(Rs2)) or
                                                             ^ machine.adb:70:62:inlined:machine.adb:183:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__sub" (Machine__TintegervalB.range_check_((2147483647 - (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C15b.c15b))))))) ))) )) (( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C15b.c15b)))) < 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C14b.c14b)))) < (#"machine.adb" 71 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__sub" "GP_Sloc:machine.adb:71:63:inlined:machine.adb:183:16" "GP_Id:6" "comment:         (Regs(Rs2) < 0 and then Regs(Rs1) < IntegerVal'First - Regs(Rs2)) then
                                                              ^ machine.adb:71:63:inlined:machine.adb:183:16:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((( -2147483648 ) - (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C15b.c15b))))))) ))) )))) then (
               ( "GP_Sloc:machine.adb:72:14:inlined:machine.adb:183:16" (#"machine.adb" 72 0 0# #"machine.adb" 72 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:74:19:inlined:machine.adb:183:16" (#"machine.adb" 74 0 0# #"machine.adb" 74 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C13b.c13b) ((Machine__integerval__rep.of_rep((#"machine.adb" 74 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:74:32:inlined:machine.adb:183:16" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:4" "comment:         Regs(Rd) := Regs(Rs1) + Regs(Rs2);
                               ^ machine.adb:74:32:inlined:machine.adb:183:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C14b.c14b)))) + (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C15b.c15b))))))) )))))) )) );
               ( "GP_Sloc:machine.adb:75:14:inlined:machine.adb:183:16" (#"machine.adb" 75 0 0# #"machine.adb" 75 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:184:30" (#"machine.adb" 184 0 0# ()) );
              ( "GP_Sloc:machine.adb:184:16" (#"machine.adb" 184 0 0# ()) );
              ( "GP_Sloc:machine.adb:184:16" (#"machine.adb" 184 0 0# ()) );
              ( "GP_Sloc:machine.adb:184:16" (#"machine.adb" 184 0 0# ()) );
              ( "GP_Sloc:machine.adb:184:16" (#"machine.adb" 184 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:184:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:184:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:184:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:184:16" "GP_Reason:VC_RANGE_CHECK" "GP_Id:7" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:184:16:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:184:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:184:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) )) else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 2)) then (
              ( ( "GP_Sloc:machine.adb:186:65" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# (#"machine.adb" 186 0 0# ( (let machine__executeprogram__L_1__C22b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 186 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:186:16" "GP_Id:8" "comment:               DoSub(Inst.SubRd, Inst.SubRs1, Inst.SubRs2, Ret, Regs);
               ^ machine.adb:186:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C22b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C22b__assume = Machine__executeprogram__L_1__C22b.c22b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C22b.c22b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# (#"machine.adb" 186 0 0# ( (let machine__executeprogram__L_1__C23b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 186 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:186:16" "comment:               DoSub(Inst.SubRd, Inst.SubRs1, Inst.SubRs2, Ret, Regs);
               ^ machine.adb:186:16:VC_DISCRIMINANT_CHECK" "GP_Id:9" "GP_Shape:L_1_while__case__C23b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C23b__assume = Machine__executeprogram__L_1__C23b.c23b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C23b.c23b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# (#"machine.adb" 186 0 0# ( (let machine__executeprogram__L_1__C24b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 186 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:186:16" "comment:               DoSub(Inst.SubRd, Inst.SubRs1, Inst.SubRs2, Ret, Regs);
               ^ machine.adb:186:16:VC_DISCRIMINANT_CHECK" "GP_Id:10" "GP_Shape:L_1_while__case__C24b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C24b__assume = Machine__executeprogram__L_1__C24b.c24b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C24b.c24b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:83:7:inlined:machine.adb:186:16" (#"machine.adb" 83 0 0# (if ((Boolean.orb(( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C24b.c24b)))) < 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) > (#"machine.adb" 83 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:83:62:inlined:machine.adb:186:16" "GP_Id:12" "comment:      if (Regs(Rs2) < 0 and then Regs(Rs1) > IntegerVal'Last + Regs(Rs2)) or
                                                             ^ machine.adb:83:62:inlined:machine.adb:186:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__add" (Machine__TintegervalB.range_check_((2147483647 + (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) ))) )) (( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C24b.c24b)))) > 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) < (#"machine.adb" 84 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__add" "GP_Sloc:machine.adb:84:63:inlined:machine.adb:186:16" "GP_Id:13" "comment:         (Regs(Rs2) > 0 and then Regs(Rs1) < IntegerVal'First + Regs(Rs2)) then
                                                              ^ machine.adb:84:63:inlined:machine.adb:186:16:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((( -2147483648 ) + (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) ))) )))) then (
               ( "GP_Sloc:machine.adb:85:14:inlined:machine.adb:186:16" (#"machine.adb" 85 0 0# #"machine.adb" 85 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:87:19:inlined:machine.adb:186:16" (#"machine.adb" 87 0 0# #"machine.adb" 87 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C22b.c22b) ((Machine__integerval__rep.of_rep((#"machine.adb" 87 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:87:32:inlined:machine.adb:186:16" "GP_Id:11" "comment:         Regs(Rd) := Regs(Rs1) - Regs(Rs2);
                               ^ machine.adb:87:32:inlined:machine.adb:186:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__sub" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) - (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) )))))) )) );
               ( "GP_Sloc:machine.adb:88:14:inlined:machine.adb:186:16" (#"machine.adb" 88 0 0# #"machine.adb" 88 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:187:30" (#"machine.adb" 187 0 0# ()) );
              ( "GP_Sloc:machine.adb:187:16" (#"machine.adb" 187 0 0# ()) );
              ( "GP_Sloc:machine.adb:187:16" (#"machine.adb" 187 0 0# ()) );
              ( "GP_Sloc:machine.adb:187:16" (#"machine.adb" 187 0 0# ()) );
              ( "GP_Sloc:machine.adb:187:16" (#"machine.adb" 187 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:187:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:187:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:187:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:187:16" "GP_Id:14" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:187:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:187:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:187:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 3)) then (
              ( ( "GP_Sloc:machine.adb:189:65" (#"machine.adb" 189 0 0# ()) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# ()) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# (#"machine.adb" 189 0 0# ( (let machine__executeprogram__L_1__C31b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 189 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:189:16" "GP_Id:15" "comment:               DoMul(Inst.MulRd, Inst.MulRs1, Inst.MulRs2, Ret, Regs);
               ^ machine.adb:189:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C31b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C31b__assume = Machine__executeprogram__L_1__C31b.c31b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C31b.c31b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# (#"machine.adb" 189 0 0# ( (let machine__executeprogram__L_1__C32b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 189 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:189:16" "comment:               DoMul(Inst.MulRd, Inst.MulRs1, Inst.MulRs2, Ret, Regs);
               ^ machine.adb:189:16:VC_DISCRIMINANT_CHECK" "GP_Id:16" "GP_Shape:L_1_while__case__C32b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C32b__assume = Machine__executeprogram__L_1__C32b.c32b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C32b.c32b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# (#"machine.adb" 189 0 0# ( (let machine__executeprogram__L_1__C33b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 189 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:189:16" "comment:               DoMul(Inst.MulRd, Inst.MulRs1, Inst.MulRs2, Ret, Regs);
               ^ machine.adb:189:16:VC_DISCRIMINANT_CHECK" "GP_Id:17" "GP_Shape:L_1_while__case__C33b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C33b__assume = Machine__executeprogram__L_1__C33b.c33b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C33b.c33b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# ()) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# ()) );
              ( "GP_Sloc:machine.adb:189:16" (#"machine.adb" 189 0 0# ()) );
              ( "GP_Sloc:machine.adb:95:7:inlined:machine.adb:189:16" (#"machine.adb" 95 0 0# (if ((Boolean.orb((Boolean.orb(( ( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) < 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))) < 0) ) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) < (#"machine.adb" 95 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:95:85:inlined:machine.adb:189:16" "GP_Reason:VC_DIVISION_CHECK" "GP_Id:19" "comment:      if (Regs(Rs1) < 0 and then Regs(Rs2) < 0 and then Regs(Rs1) < IntegerVal'Last / Regs(Rs2)) or
                                                                                    ^ machine.adb:95:85:inlined:machine.adb:189:16:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__or__or__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))))) ))) )) (( ( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) < 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))) > 0) ) && ((#"machine.adb" 96 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__or__andthen__cmp__div" "GP_Sloc:machine.adb:96:74:inlined:machine.adb:189:16" "GP_Id:21" "comment:         (Regs(Rs1) < 0 and then Regs(Rs2) > 0 and then IntegerVal'First / Regs(Rs2) > Regs(Rs1)) or
                                                                         ^ machine.adb:96:74:inlined:machine.adb:189:16:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 96 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__or__or__andthen__cmp__div" "GP_Sloc:machine.adb:96:74:inlined:machine.adb:189:16" "GP_Id:20" "comment:         (Regs(Rs1) < 0 and then Regs(Rs2) > 0 and then IntegerVal'First / Regs(Rs2) > Regs(Rs1)) or
                                                                         ^ machine.adb:96:74:inlined:machine.adb:189:16:VC_DIVISION_CHECK" (Int_Division.div_(( -2147483648 )) ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))))) )))) )) > (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b))))) )))) (( ( ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))) <> 0) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) > 0) ) && ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) > (#"machine.adb" 97 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:97:86:inlined:machine.adb:189:16" "GP_Id:22" "comment:         (Regs(Rs2) /= 0 and then Regs(Rs1) > 0 and then Regs(Rs1) > IntegerVal'Last / Regs(Rs2)) then
                                                                                     ^ machine.adb:97:86:inlined:machine.adb:189:16:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b)))))) ))) )))) then (
               ( "GP_Sloc:machine.adb:98:14:inlined:machine.adb:189:16" (#"machine.adb" 98 0 0# #"machine.adb" 98 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:100:18:inlined:machine.adb:189:16" (#"machine.adb" 100 0 0# #"machine.adb" 100 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C31b.c31b) ((Machine__integerval__rep.of_rep((#"machine.adb" 100 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:100:31:inlined:machine.adb:189:16" "GP_Id:18" "comment:        Regs(Rd) := Regs(Rs1) * Regs(Rs2);
                              ^ machine.adb:100:31:inlined:machine.adb:189:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__mult" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C32b.c32b)))) * (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C33b.c33b))))))) )))))) )) );
               ( "GP_Sloc:machine.adb:101:13:inlined:machine.adb:189:16" (#"machine.adb" 101 0 0# #"machine.adb" 101 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:190:30" (#"machine.adb" 190 0 0# ()) );
              ( "GP_Sloc:machine.adb:190:16" (#"machine.adb" 190 0 0# ()) );
              ( "GP_Sloc:machine.adb:190:16" (#"machine.adb" 190 0 0# ()) );
              ( "GP_Sloc:machine.adb:190:16" (#"machine.adb" 190 0 0# ()) );
              ( "GP_Sloc:machine.adb:190:16" (#"machine.adb" 190 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:190:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:190:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:190:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:190:16" "GP_Id:23" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:190:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:190:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:190:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 4)) then (
              ( ( "GP_Sloc:machine.adb:192:65" (#"machine.adb" 192 0 0# ()) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# ()) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# (#"machine.adb" 192 0 0# ( (let machine__executeprogram__L_1__C40b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 192 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:192:16" "GP_Id:24" "comment:               DoDiv(Inst.DivRd, Inst.DivRs1, Inst.DivRs2, Ret, Regs);
               ^ machine.adb:192:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C40b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C40b__assume = Machine__executeprogram__L_1__C40b.c40b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C40b.c40b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# (#"machine.adb" 192 0 0# ( (let machine__executeprogram__L_1__C41b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 192 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:192:16" "comment:               DoDiv(Inst.DivRd, Inst.DivRs1, Inst.DivRs2, Ret, Regs);
               ^ machine.adb:192:16:VC_DISCRIMINANT_CHECK" "GP_Id:25" "GP_Shape:L_1_while__case__C41b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C41b__assume = Machine__executeprogram__L_1__C41b.c41b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C41b.c41b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# (#"machine.adb" 192 0 0# ( (let machine__executeprogram__L_1__C42b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 192 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:192:16" "comment:               DoDiv(Inst.DivRd, Inst.DivRs1, Inst.DivRs2, Ret, Regs);
               ^ machine.adb:192:16:VC_DISCRIMINANT_CHECK" "GP_Id:26" "GP_Shape:L_1_while__case__C42b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C42b__assume = Machine__executeprogram__L_1__C42b.c42b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C42b.c42b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# ()) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# ()) );
              ( "GP_Sloc:machine.adb:192:16" (#"machine.adb" 192 0 0# ()) );
              ( "GP_Sloc:machine.adb:109:7:inlined:machine.adb:192:16" (#"machine.adb" 109 0 0# (if ((Boolean.orb(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C42b.c42b)))) = 0)) ((Boolean.andb(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C41b.c41b)))) = ( -2147483648 ))) (((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C42b.c42b)))) = ( -1 ))))))) then (
               ( "GP_Sloc:machine.adb:110:14:inlined:machine.adb:192:16" (#"machine.adb" 110 0 0# #"machine.adb" 110 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:112:19:inlined:machine.adb:192:16" (#"machine.adb" 112 0 0# #"machine.adb" 112 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C40b.c40b) ((Machine__integerval__rep.of_rep((#"machine.adb" 112 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:112:32:inlined:machine.adb:192:16" "GP_Shape:L_1_while__case__if__regs_assign__div" "GP_Id:28" "comment:         Regs(Rd) := Regs(Rs1) / Regs(Rs2);
                               ^ machine.adb:112:32:inlined:machine.adb:192:16:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 112 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:112:32:inlined:machine.adb:192:16" "GP_Id:27" "comment:         Regs(Rd) := Regs(Rs1) / Regs(Rs2);
                               ^ machine.adb:112:32:inlined:machine.adb:192:16:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__div" (Int_Division.div_((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C41b.c41b))))) ((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C42b.c42b)))))) )))) )))))) )) );
               ( "GP_Sloc:machine.adb:113:14:inlined:machine.adb:192:16" (#"machine.adb" 113 0 0# #"machine.adb" 113 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:193:30" (#"machine.adb" 193 0 0# ()) );
              ( "GP_Sloc:machine.adb:193:16" (#"machine.adb" 193 0 0# ()) );
              ( "GP_Sloc:machine.adb:193:16" (#"machine.adb" 193 0 0# ()) );
              ( "GP_Sloc:machine.adb:193:16" (#"machine.adb" 193 0 0# ()) );
              ( "GP_Sloc:machine.adb:193:16" (#"machine.adb" 193 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:193:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:193:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:193:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:193:16" "GP_Id:29" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:193:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:193:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:193:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 6)) then (
              ( ( "GP_Sloc:machine.adb:195:65" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:71" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# (#"machine.adb" 195 0 0# ( (let machine__executeprogram__L_1__C49b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 195 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:195:16" "GP_Id:30" "comment:               DoLdr(Inst.LdrRd, Inst.LdrRs, Inst.LdrOffs, Ret, Regs, Mem);
               ^ machine.adb:195:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C49b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C49b__assume = Machine__executeprogram__L_1__C49b.c49b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C49b.c49b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# (#"machine.adb" 195 0 0# ( (let machine__executeprogram__L_1__C50b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 195 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:195:16" "comment:               DoLdr(Inst.LdrRd, Inst.LdrRs, Inst.LdrOffs, Ret, Regs, Mem);
               ^ machine.adb:195:16:VC_DISCRIMINANT_CHECK" "GP_Id:31" "GP_Shape:L_1_while__case__C50b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C50b__assume = Machine__executeprogram__L_1__C50b.c50b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C50b.c50b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# (#"machine.adb" 195 0 0# ( (let machine__executeprogram__L_1__C51b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 195 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:195:16" "comment:               DoLdr(Inst.LdrRd, Inst.LdrRs, Inst.LdrOffs, Ret, Regs, Mem);
               ^ machine.adb:195:16:VC_DISCRIMINANT_CHECK" "GP_Id:32" "GP_Shape:L_1_while__case__C51b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C51b__assume = Machine__executeprogram__L_1__C51b.c51b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C51b.c51b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:195:16" (#"machine.adb" 195 0 0# ()) );
              ( "GP_Sloc:machine.adb:121:7:inlined:machine.adb:195:16" (#"machine.adb" 121 0 0# (if ((Boolean.orb(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) > (65535 - Machine__executeprogram__L_1__C51b.c51b))) (((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) < (0 - Machine__executeprogram__L_1__C51b.c51b))))) then (
               ( "GP_Sloc:machine.adb:123:14:inlined:machine.adb:195:16" (#"machine.adb" 123 0 0# #"machine.adb" 123 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:125:19:inlined:machine.adb:195:16" (#"machine.adb" 125 0 0# #"machine.adb" 125 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C49b.c49b) ((Machine__integerval__rep.of_rep((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content) ((#"machine.adb" 125 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:125:40:inlined:machine.adb:195:16" "GP_Shape:L_1_while__case__if__regs_assign__ixdcomp__typeconv__add" "GP_Id:34" "comment:         Regs(Rd) := Mem(Addr(Regs(Rs) + IntegerVal(Offs)));
                                       ^ machine.adb:125:40:inlined:machine.adb:195:16:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 125 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:125:40:inlined:machine.adb:195:16" "GP_Id:33" "comment:         Regs(Rd) := Mem(Addr(Regs(Rs) + IntegerVal(Offs)));
                                       ^ machine.adb:125:40:inlined:machine.adb:195:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__ixdcomp__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) + Machine__executeprogram__L_1__C51b.c51b))) )))) )))))))))) )) );
               ( "GP_Sloc:machine.adb:126:14:inlined:machine.adb:195:16" (#"machine.adb" 126 0 0# #"machine.adb" 126 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:196:30" (#"machine.adb" 196 0 0# ()) );
              ( "GP_Sloc:machine.adb:196:16" (#"machine.adb" 196 0 0# ()) );
              ( "GP_Sloc:machine.adb:196:16" (#"machine.adb" 196 0 0# ()) );
              ( "GP_Sloc:machine.adb:196:16" (#"machine.adb" 196 0 0# ()) );
              ( "GP_Sloc:machine.adb:196:16" (#"machine.adb" 196 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:196:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:196:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:196:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:196:16" "GP_Id:35" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:196:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:196:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:196:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 7)) then (
              ( ( "GP_Sloc:machine.adb:198:65" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:71" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# (#"machine.adb" 198 0 0# ( (let machine__executeprogram__L_1__C59b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 198 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:198:16" "GP_Id:36" "comment:               DoStr(Inst.StrRa, Inst.StrOffs, Inst.StrRb, Ret, Regs, Mem);
               ^ machine.adb:198:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C59b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__strra_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C59b__assume = Machine__executeprogram__L_1__C59b.c59b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C59b.c59b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# (#"machine.adb" 198 0 0# ( (let machine__executeprogram__L_1__C60b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 198 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:198:16" "comment:               DoStr(Inst.StrRa, Inst.StrOffs, Inst.StrRb, Ret, Regs, Mem);
               ^ machine.adb:198:16:VC_DISCRIMINANT_CHECK" "GP_Id:37" "GP_Shape:L_1_while__case__C60b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__stroffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C60b__assume = Machine__executeprogram__L_1__C60b.c60b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C60b.c60b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# (#"machine.adb" 198 0 0# ( (let machine__executeprogram__L_1__C61b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 198 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:198:16" "comment:               DoStr(Inst.StrRa, Inst.StrOffs, Inst.StrRb, Ret, Regs, Mem);
               ^ machine.adb:198:16:VC_DISCRIMINANT_CHECK" "GP_Id:38" "GP_Shape:L_1_while__case__C61b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__strrb_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C61b__assume = Machine__executeprogram__L_1__C61b.c61b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C61b.c61b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:198:16" (#"machine.adb" 198 0 0# ()) );
              ( "GP_Sloc:machine.adb:134:7:inlined:machine.adb:198:16" (#"machine.adb" 134 0 0# (if ((Boolean.orb(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C59b.c59b)))) > (65535 - Machine__executeprogram__L_1__C60b.c60b))) (((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C59b.c59b)))) < (0 - Machine__executeprogram__L_1__C60b.c60b))))) then (
               ( "GP_Sloc:machine.adb:136:14:inlined:machine.adb:198:16" (#"machine.adb" 136 0 0# #"machine.adb" 136 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:138:49:inlined:machine.adb:198:16" (#"machine.adb" 138 0 0# #"machine.adb" 138 0 0# Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__mem.mem.Array__Int__Machine__integerval.map__content) ((#"machine.adb" 138 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:138:28:inlined:machine.adb:198:16" "GP_Shape:L_1_while__case__if__mem_assign__ixdcomp__typeconv__add" "GP_Id:40" "comment:         Mem(Addr(Regs(Ra) + IntegerVal(Offs))) := Regs(Rb);
                           ^ machine.adb:138:28:inlined:machine.adb:198:16:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 138 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:138:28:inlined:machine.adb:198:16" "GP_Id:39" "comment:         Mem(Addr(Regs(Ra) + IntegerVal(Offs))) := Regs(Rb);
                           ^ machine.adb:138:28:inlined:machine.adb:198:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__mem_assign__ixdcomp__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C59b.c59b)))) + Machine__executeprogram__L_1__C60b.c60b))) )))) ))) ((Machine__integerval__rep.of_rep((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C61b.c61b)))))))) )) );
               ( "GP_Sloc:machine.adb:139:14:inlined:machine.adb:198:16" (#"machine.adb" 139 0 0# #"machine.adb" 139 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:199:30" (#"machine.adb" 199 0 0# ()) );
              ( "GP_Sloc:machine.adb:199:16" (#"machine.adb" 199 0 0# ()) );
              ( "GP_Sloc:machine.adb:199:16" (#"machine.adb" 199 0 0# ()) );
              ( "GP_Sloc:machine.adb:199:16" (#"machine.adb" 199 0 0# ()) );
              ( "GP_Sloc:machine.adb:199:16" (#"machine.adb" 199 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:199:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:199:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:199:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:199:16" "GP_Id:41" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:199:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:199:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:199:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 8)) then (
              ( ( "GP_Sloc:machine.adb:201:53" (#"machine.adb" 201 0 0# ()) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# ()) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# (#"machine.adb" 201 0 0# ( (let machine__executeprogram__L_1__C69b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 201 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:201:16" "GP_Id:42" "comment:               DoMov(Inst.MovRd, Inst.MovOffs, Ret, Regs);
               ^ machine.adb:201:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C69b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__movrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C69b__assume = Machine__executeprogram__L_1__C69b.c69b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C69b.c69b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# (#"machine.adb" 201 0 0# ( (let machine__executeprogram__L_1__C70b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 201 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:201:16" "comment:               DoMov(Inst.MovRd, Inst.MovOffs, Ret, Regs);
               ^ machine.adb:201:16:VC_DISCRIMINANT_CHECK" "GP_Id:43" "GP_Shape:L_1_while__case__C70b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__movoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C70b__assume = Machine__executeprogram__L_1__C70b.c70b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C70b.c70b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# ()) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# ()) );
              ( "GP_Sloc:machine.adb:201:16" (#"machine.adb" 201 0 0# ()) );
              ( "GP_Sloc:machine.adb:147:7:inlined:machine.adb:201:16" (#"machine.adb" 147 0 0# (if ((Boolean.andb((Machine__executeprogram__L_1__C70b.c70b >= ( -65535 ))) ((Machine__executeprogram__L_1__C70b.c70b <= 65535)))) then (
               ( ( "GP_Sloc:machine.adb:148:19:inlined:machine.adb:201:16" (#"machine.adb" 148 0 0# #"machine.adb" 148 0 0# Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content <- ( (Array__Int__Machine__integerval.set(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) (Machine__executeprogram__L_1__C69b.c69b) ((Machine__integerval__rep.of_rep(Machine__executeprogram__L_1__C70b.c70b)))) )) );
               ( "GP_Sloc:machine.adb:149:14:inlined:machine.adb:201:16" (#"machine.adb" 149 0 0# #"machine.adb" 149 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
               ( "GP_Sloc:machine.adb:151:14:inlined:machine.adb:201:16" (#"machine.adb" 151 0 0# #"machine.adb" 151 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) );
              ( "GP_Sloc:machine.adb:202:30" (#"machine.adb" 202 0 0# ()) );
              ( "GP_Sloc:machine.adb:202:16" (#"machine.adb" 202 0 0# ()) );
              ( "GP_Sloc:machine.adb:202:16" (#"machine.adb" 202 0 0# ()) );
              ( "GP_Sloc:machine.adb:202:16" (#"machine.adb" 202 0 0# ()) );
              ( "GP_Sloc:machine.adb:202:16" (#"machine.adb" 202 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:202:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:202:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:202:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:202:16" "GP_Id:44" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:202:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:202:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:202:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 5)) then (
              ( ( "GP_Sloc:machine.adb:204:34" (#"machine.adb" 204 0 0# ()) );
              ( "GP_Sloc:machine.adb:204:39" (#"machine.adb" 204 0 0# ()) );
              ( "GP_Sloc:machine.adb:204:23" (#"machine.adb" 204 0 0# #"machine.adb" 204 0 0# Machine__executeprogram__result.result__.int__content <- ( (Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 204 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:204:43" "GP_Id:45" "comment:               Result := Integer(Regs(Inst.RetRs));
                                          ^ machine.adb:204:43:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__result_assign__typeconv__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__retrs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))))))) )) );
              ( "GP_Sloc:machine.adb:205:20" (#"machine.adb" 205 0 0# #"machine.adb" 205 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) );
              ( "GP_Sloc:machine.adb:206:16" (#"machine.adb" 206 0 0# #"machine.adb" 206 0 0# raise Return__exc) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 9)) then (
              ( ( "GP_Sloc:machine.adb:208:41" (#"machine.adb" 208 0 0# ()) );
              ( "GP_Sloc:machine.adb:208:16" (#"machine.adb" 208 0 0# ()) );
              ( "GP_Sloc:machine.adb:208:16" (#"machine.adb" 208 0 0# ()) );
              ( "GP_Sloc:machine.adb:208:16" (#"machine.adb" 208 0 0# (#"machine.adb" 208 0 0# ( (let machine__executeprogram__L_1__C79b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 208 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:208:16" "GP_Id:46" "comment:               IncPC(Ret, Inst.JmpOffs, PC);
               ^ machine.adb:208:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C79b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C79b__assume = Machine__executeprogram__L_1__C79b.c79b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C79b.c79b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:208:16" (#"machine.adb" 208 0 0# ()) );
              ( "GP_Sloc:machine.adb:208:16" (#"machine.adb" 208 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:208:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:208:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= (65536 - Machine__executeprogram__L_1__C79b.c79b))) ((Machine__executeprogram__pc.pc.int__content >= (1 - Machine__executeprogram__L_1__C79b.c79b))))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:208:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:208:16" "GP_Id:47" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:208:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + Machine__executeprogram__L_1__C79b.c79b))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:208:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:208:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 10)) then (
              ( ( "GP_Sloc:machine.adb:210:19" (#"machine.adb" 210 0 0# ()) );
              ( "GP_Sloc:machine.adb:210:24" (#"machine.adb" 210 0 0# ()) );
              ( "GP_Sloc:machine.adb:210:16" (#"machine.adb" 210 0 0# (if (((Machine__integerval__rep.to_rep((Array__Int__Machine__integerval.get(Machine__executeprogram__regs.regs.Array__Int__Machine__integerval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 210 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:210:28" "GP_Id:51" "comment:               if Regs(Inst.JzRa) = 0 then
                           ^ machine.adb:210:28:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__if__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__jzra_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))))))) = 0)) then (
               ( ( "GP_Sloc:machine.adb:211:43" (#"machine.adb" 211 0 0# ()) );
               ( "GP_Sloc:machine.adb:211:19" (#"machine.adb" 211 0 0# ()) );
               ( "GP_Sloc:machine.adb:211:19" (#"machine.adb" 211 0 0# ()) );
               ( "GP_Sloc:machine.adb:211:19" (#"machine.adb" 211 0 0# (#"machine.adb" 211 0 0# ( (let machine__executeprogram__L_1__C83b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 211 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:211:19" "GP_Id:49" "comment:                  IncPC(Ret, Inst.JzOffs, PC);
                  ^ machine.adb:211:19:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__if__C83b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                 assume {  (machine__executeprogram__L_1__C83b__assume = Machine__executeprogram__L_1__C83b.c83b) }))
               ;
                assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C83b.c83b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:211:19" (#"machine.adb" 211 0 0# ()) );
               ( "GP_Sloc:machine.adb:211:19" (#"machine.adb" 211 0 0# ()) );
               ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:211:19" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
                ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:211:19" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= (65536 - Machine__executeprogram__L_1__C83b.c83b))) ((Machine__executeprogram__pc.pc.int__content >= (1 - Machine__executeprogram__L_1__C83b.c83b))))) then (
                 ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:211:19" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:211:19" "GP_Id:50" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:211:19:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + Machine__executeprogram__L_1__C83b.c83b))) )) )) );
                 ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:211:19" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                 ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:211:19" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
                ()))) ) )) else (
               ( ( "GP_Sloc:machine.adb:213:33" (#"machine.adb" 213 0 0# ()) );
               ( "GP_Sloc:machine.adb:213:19" (#"machine.adb" 213 0 0# ()) );
               ( "GP_Sloc:machine.adb:213:19" (#"machine.adb" 213 0 0# ()) );
               ( "GP_Sloc:machine.adb:213:19" (#"machine.adb" 213 0 0# ()) );
               ( "GP_Sloc:machine.adb:213:19" (#"machine.adb" 213 0 0# ()) );
               ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:213:19" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
                ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:213:19" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                 ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:213:19" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:213:19" "GP_Id:48" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:213:19:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                 ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:213:19" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                 ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:213:19" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
                ()))) ) )))) ) )) else (
              ( ( "GP_Sloc:machine.adb:216:30" (#"machine.adb" 216 0 0# ()) );
              ( "GP_Sloc:machine.adb:216:16" (#"machine.adb" 216 0 0# ()) );
              ( "GP_Sloc:machine.adb:216:16" (#"machine.adb" 216 0 0# ()) );
              ( "GP_Sloc:machine.adb:216:16" (#"machine.adb" 216 0 0# ()) );
              ( "GP_Sloc:machine.adb:216:16" (#"machine.adb" 216 0 0# ()) );
              ( "GP_Sloc:machine.adb:54:7:inlined:machine.adb:216:16" (#"machine.adb" 54 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:56:10:inlined:machine.adb:216:16" (#"machine.adb" 56 0 0# (if ((Boolean.andb((Machine__executeprogram__pc.pc.int__content <= 65535)) ((Machine__executeprogram__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:58:16:inlined:machine.adb:216:16" (#"machine.adb" 58 0 0# #"machine.adb" 58 0 0# Machine__executeprogram__pc.pc.int__content <- ( (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:58:46:inlined:machine.adb:216:16" "GP_Id:52" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:58:46:inlined:machine.adb:216:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__executeprogram__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:59:17:inlined:machine.adb:216:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:61:17:inlined:machine.adb:216:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) )))) );
             ( "GP_Sloc:machine.adb:218:10" (#"machine.adb" 218 0 0# ()) );
             ( "GP_Sloc:machine.adb:218:24" (#"machine.adb" 218 0 0# ()) );
             ( "GP_Sloc:machine.adb:218:21" (#"machine.adb" 218 0 0# #"machine.adb" 218 0 0# Machine__executeprogram__cyclecount.cyclecount.int__content <- ( (#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:218:35" "GP_Id:53" "comment:         CycleCount := CycleCount + 1;
                                  ^ machine.adb:218:35:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__cyclecount_assign__add" (Standard__integer.range_check_((Machine__executeprogram__cyclecount.cyclecount.int__content + 1))) )) )) );
             () (* Check for the exit condition and loop statements appearing before the loop invariant of loop machine.adb:172 *)
             ;
             (if (not ( (Boolean.andb((Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles)) ((Machine__executeprogram__ret.ret.int__content = 0))) )) then (
               raise Machine__executeprogram__L_1.L_1)) )
            done )))
            )))
           )))
          )))
         )))
        )))
       )))
      )
    with
     Machine__executeprogram__L_1.L_1 -> ()
    end)) )) );
   ( "GP_Sloc:machine.adb:222:7" (#"machine.adb" 222 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
    ( "GP_Sloc:machine.adb:223:14" (#"machine.adb" 223 0 0# #"machine.adb" 223 0 0# Machine__executeprogram__ret.ret.int__content <- ( 1 )) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for defining the value of the aggregate at machine.adb:617 instantiated at machine.adb:807, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp_____aggregate_def_978___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Temp_____aggregate_def_978
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___980   : Machine__dataval.dataval.
   (let temp___979 = (Temp_____aggregate_def_978.temp_____aggregate_def_978 temp___980) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___980 True True True True)) then (
     (forall temp___981   : int.
      ((Array__Int__Machine__dataval.get temp___979 temp___981) = temp___980))) else true)))
  )

end

(* Module for defining the value of the aggregate at machine.adb:618 instantiated at machine.adb:807, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp_____aggregate_def_982___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Temp_____aggregate_def_982
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___984   : Machine__dataval.dataval.
   (let temp___983 = (Temp_____aggregate_def_982.temp_____aggregate_def_982 temp___984) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___984 True True True True)) then (
     (forall temp___985   : int.
      ((Array__Int__Machine__dataval.get temp___983 temp___985) = temp___984))) else true)))
  )

end

(* Module for checking contracts and absence of run-time errors in subprogram "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Machine__detectinvalidbehaviour__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Integer
 use        "_gnatprove_standard".Int_Division
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__integer___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg__rep
 use        Instruction__addr
 use        Instruction__offset
 use        Instruction__offset___axiom
 use        Instruction__offset__rep
 use        Instruction__instr
 use        Instruction__instr___axiom
 use        Machine__programcounter
 use        Machine__programcounter___axiom
 use        Array__Int__Instruction__instr
 use        Machine__program___axiom
 use        Machine__detectinvalidbehaviour__prog
 use        Machine__detectinvalidbehaviour__cycles
 use        Machine__TintegervalB
 use        Machine__integerval
 use        Machine__integerval__rep
 use        Machine__datavalstates
 use        Machine__datavalstates__rep
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Machine__register___axiom
 use        Machine__memory___axiom
 use        Machine__detectinvalidbehaviour__R573b__ret
 use        Machine__detectinvalidbehaviour__R573b__C575b
 use        Machine__detectinvalidbehaviour__R573b__B577b__cyclecount
 use        Machine__detectinvalidbehaviour__R573b__B577b__inst
 use        Machine__detectinvalidbehaviour__R573b__B577b__pc
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__R573b__B577b__regs
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__R573b__B577b__mem
 use        Machine__detectinvalidbehaviour__R573b__B577b__ret
 use        Machine__detectinvalidbehaviour__R573b__B577b__T578b
 use        Machine__detectinvalidbehaviour__R573b__B577b__T581b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b
 use        Array__Int__Machine__dataval
 use        Temp_____aggregate_def_978
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Temp_____aggregate_def_982
 use        Array__Int__Machine__dataval
 use        Standard__integer___axiom
 use        Standard__integer___axiom
 use        Machine__integerval___axiom
 use        Machine__datavalstates___axiom
 use        Machine__dataval___axiom
 use        Machine__register___axiom
 use        Machine__memory___axiom
 use        Machine__detectinvalidbehaviour__R573b__ret___axiom
 use        Machine__programcounter___axiom
 use        Machine__program___axiom
 use        Machine__detectinvalidbehaviour__prog___axiom
 use        Machine__detectinvalidbehaviour__cycles___axiom
 use        Instruction__opcode___axiom
 use        Instruction__reg___axiom
 use        Instruction__addr___axiom
 use        Instruction__offset___axiom
 use        Instruction__instr___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Machine__TintegervalB___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__cyclecount___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__inst___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__pc___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__regs___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__mem___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__ret___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2___axiom
 use        Temp_____aggregate_def_978___axiom
 use        Temp_____aggregate_def_982___axiom
 use        Machine__detectinvalidbehaviour__R573b__C575b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__T578b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__T581b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b___axiom
 use        Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b___axiom

 val machine__detectinvalidbehaviour__result "model_projected" "model_trace:7372@result" "name:DetectInvalidBehaviour"  : bool__ref 
 
 let def #"machine.ads" 47 0 0#"W:diverges:N" "GP_Subp:machine.ads:47" 
   (__void_param : unit)
  requires { #"machine.ads" 47 0 0# true }
  ensures { #"machine.ads" 47 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# (Machine__program___axiom.dynamic_invariant Machine__detectinvalidbehaviour__prog.prog True False True True) };
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__cycles.cycles True False True True) };
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# true };
  () (* Declarations introduced by the compiler at the beginning of the subprogram machine.ads:47 *)
  ;
  () (* Check for RTE in the Pre of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# true };
  #"machine.ads" 47 0 0# try
   ( ( "GP_Sloc:machine.adb:804:7" (#"machine.adb" 804 0 0# ( ( "GP_Sloc:machine.adb:804:14" (#"machine.adb" 804 0 0# (#"machine.adb" 804 0 0# ())) );
   ( "GP_Sloc:machine.adb:807:10" (#"machine.adb" 807 0 0# ()) );
   ( "GP_Sloc:machine.adb:807:17" (#"machine.adb" 807 0 0# ()) );
   ( "GP_Sloc:machine.adb:807:17" (#"machine.adb" 807 0 0# ()) );
   ( "GP_Sloc:machine.adb:807:17" (#"machine.adb" 807 0 0# (#"machine.adb" 807 0 0# ( (let machine__detectinvalidbehaviour__R573b__C575b__assume = Machine__detectinvalidbehaviour__cycles.cycles in (
    #"machine.adb" 807 0 0# assume { #"machine.adb" 807 0 0# (machine__detectinvalidbehaviour__R573b__C575b__assume = Machine__detectinvalidbehaviour__R573b__C575b.c575b) }))
   ;
   #"machine.adb" 807 0 0# assume { #"machine.adb" 807 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__C575b.c575b True False True True) } ))) );
   ( "GP_Sloc:machine.adb:807:17" (#"machine.adb" 807 0 0# ( (#"machine.adb" 609 0 0# ( #"machine.adb" 609 0 0# Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content <- ( 0 );
   #"machine.adb" 609 0 0# assume { #"machine.adb" 609 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content True False True True) } ));
   (#"machine.adb" 610 0 0# ( #"machine.adb" 610 0 0# abstract ensures {true}(let _ = #"machine.adb" 610 0 0# abstract ensures {true}(let _ = (let temp___1034 = 0 in (
    ()))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 610 0 0# assume { #"machine.adb" 610 0 0# (Instruction__instr___axiom.default_initial_assumption { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } False) };
   #"machine.adb" 610 0 0# assume { #"machine.adb" 610 0 0# (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } False False True True) } ));
   (#"machine.adb" 611 0 0# ( #"machine.adb" 611 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( 1 );
   #"machine.adb" 611 0 0# assume { #"machine.adb" 611 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content True False True True) } ));
   (#"machine.adb" 612 0 0# ( #"machine.adb" 612 0 0# abstract ensures {true}(let _ = #"machine.adb" 612 0 0# abstract ensures {true}(let _ = (if (((if ((Instruction__reg.first <= Instruction__reg.last)) then (
    ((Instruction__reg.last - Instruction__reg.first) + 1)) else (
    0)) > 0)) then (
    #"machine.adb" 612 0 0# abstract ensures {true}(let _ = (let temp___1032 = 0 in (
     ()))
     in (
     ()))
     end )) in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 612 0 0# assume { #"machine.adb" 612 0 0# (Machine__register___axiom.default_initial_assumption Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content False) };
   #"machine.adb" 612 0 0# assume { #"machine.adb" 612 0 0# (Machine__register___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content False False True True) } ));
   (#"machine.adb" 613 0 0# ( #"machine.adb" 613 0 0# abstract ensures {true}(let _ = #"machine.adb" 613 0 0# abstract ensures {true}(let _ = (if (((if ((Instruction__addr.first <= Instruction__addr.last)) then (
    ((Instruction__addr.last - Instruction__addr.first) + 1)) else (
    0)) > 0)) then (
    #"machine.adb" 613 0 0# abstract ensures {true}(let _ = (let temp___1030 = 0 in (
     ()))
     in (
     ()))
     end )) in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 613 0 0# assume { #"machine.adb" 613 0 0# (Machine__memory___axiom.default_initial_assumption Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content False) };
   #"machine.adb" 613 0 0# assume { #"machine.adb" 613 0 0# (Machine__memory___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content False False True True) } ));
   (#"machine.adb" 614 0 0# #"machine.adb" 614 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(1)) ));
   (#"machine.adb" 619 0 0# ());
   ( "GP_Sloc:machine.adb:617:12:inlined:machine.adb:807:17" (#"machine.adb" 617 0 0# #"machine.adb" 617 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Temp_____aggregate_def_978.temp_____aggregate_def_978({ ( { Machine__detectinvalidbehaviour__R573b__B577b__T578b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(0)) }; Machine__detectinvalidbehaviour__R573b__B577b__T578b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__T578b.rec__machine__dataval__garbage = ( 0 : Machine__integerval.integerval ); Machine__detectinvalidbehaviour__R573b__B577b__T578b.rec__machine__dataval__value = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__T578b.attr__constrained = true } ) with Machine__dataval.attr__constrained = False })) )) );
   ( "GP_Sloc:machine.adb:618:11:inlined:machine.adb:807:17" (#"machine.adb" 618 0 0# #"machine.adb" 618 0 0# Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content <- ( (Temp_____aggregate_def_982.temp_____aggregate_def_982({ ( { Machine__detectinvalidbehaviour__R573b__B577b__T581b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(0)) }; Machine__detectinvalidbehaviour__R573b__B577b__T581b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__T581b.rec__machine__dataval__garbage = ( 0 : Machine__integerval.integerval ); Machine__detectinvalidbehaviour__R573b__B577b__T581b.rec__machine__dataval__value = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__T581b.attr__constrained = true } ) with Machine__dataval.attr__constrained = False })) )) );
   ( "GP_Sloc:machine.adb:619:56:inlined:machine.adb:807:17" (#"machine.adb" 619 0 0# ( () (* Translation of an Ada loop from machine.adb:619 instantiated at machine.adb:807 *)
   ;
   (if ((let machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b = Machine__detectinvalidbehaviour__R573b__C575b.c575b in (
   (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b = Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content in (
    not ( not ( (machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b < machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b) ) )))
   ))
   ) then (
    #"machine.adb" 619 0 0# try
     ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content in (
      ()))
      end ;
     (let temp___1028 = #"machine.adb" 619 0 0# (any bool
     ensures {#"machine.adb" 619 0 0# (result = Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content)} 
     ) in (
      ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content in (
       ()))
       end ;
      (let temp___1026 = #"machine.adb" 619 0 0# (any Array__Int__Machine__dataval.map
      ensures {#"machine.adb" 619 0 0# (result = Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content)} 
      ) in (
       ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content in (
        ()))
        end ;
       (let temp___1024 = #"machine.adb" 619 0 0# (any Array__Int__Machine__dataval.map
       ensures {#"machine.adb" 619 0 0# (result = Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content)} 
       ) in (
        ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
         ()))
         end ;
        (let temp___1023 = #"machine.adb" 619 0 0# (any int
        ensures {#"machine.adb" 619 0 0# (result = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content)} 
        ) in (
         ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
          ()))
          end ;
         (let temp___1022 = #"machine.adb" 619 0 0# (any Instruction__instr.instr
         ensures {#"machine.adb" 619 0 0# (result = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })} 
         ) in (
          ( #"machine.adb" 619 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content in (
           ()))
           end ;
          (let temp___1021 = #"machine.adb" 619 0 0# (any int
          ensures {#"machine.adb" 619 0 0# (result = Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content)} 
          ) in (
           ( () (* First unroling of the loop statements appearing before the loop invariant of loop machine.adb:619 instantiated at machine.adb:807 *)
           ;
           () (* While loop translating the Ada loop from machine.adb:619 instantiated at machine.adb:807 *)
           ;
           #"machine.adb" 619 0 0# while True do
            ( () (* Assume implicit invariants from the loop machine.adb:619 instantiated at machine.adb:807 *)
            ;
            #"machine.adb" 619 0 0# assume { #"machine.adb" 619 0 0# (Boolean.andb(( ( ( ( ( ( ( ( ( ( ( ( true /\ (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content False True True True) ) /\ true ) /\ (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } False True True True) ) /\ true ) /\ (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content False True True True) ) /\ true ) /\ (Machine__register___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content False True True True) ) /\ (forall temp___1025 #"machine.adb" 619 0 0#  : int.
             (if (( (Instruction__reg.first <= temp___1025) /\ (temp___1025 <= Instruction__reg.last) )) then (
              (if (( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ ( false /\ false ) ) ) ) ) ) ) ) ) ) ) ) )) then (
               ((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content temp___1025) = (Array__Int__Machine__dataval.get temp___1024 temp___1025))) else (
               true))) else true)) ) /\ (Machine__memory___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content False True True True) ) /\ (forall temp___1027 #"machine.adb" 619 0 0#  : int.
             (if (( (Instruction__addr.first <= temp___1027) /\ (temp___1027 <= Instruction__addr.last) )) then (
              (if (( false /\ false )) then (
               ((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content temp___1027) = (Array__Int__Machine__dataval.get temp___1026 temp___1027))) else (
               true))) else true)) ) /\ true ) /\ true )) ((let machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b = Machine__detectinvalidbehaviour__R573b__C575b.c575b in (
            (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b = Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content in (
             not ( ((Boolean.notb (Integer.bool_lt machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b)) = True) )))
            ))
            )) };
            () (* Check for absence of RTE in the invariant of loop machine.adb:619 instantiated at machine.adb:807 *)
            ;
            () (* Loop statements appearing after the loop invariant of loop machine.adb:619 instantiated at machine.adb:807 *)
            ;
            ( "GP_Sloc:machine.adb:620:15:inlined:machine.adb:807:17" (#"machine.adb" 620 0 0# (let temp___988 = { ( (let temp___986 = (Array__Int__Instruction__instr.get(Machine__detectinvalidbehaviour__prog.prog) (Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content)) in (
            (let temp___987 = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
             ( #"machine.adb" 620 0 0# assert { #"machine.adb" 620 0 0# (#"machine.adb" 620 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:620:15:inlined:machine.adb:807:17" "GP_Id:54" "comment:         Inst := Prog(PC);
              ^ machine.adb:620:15:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__inst_assign" (if ((Instruction__instr.attr__constrained temp___987)) then (
              ((Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___986)) = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___987)))) else true) )) };
             temp___986 )))
            ))
             ) with Instruction__instr.attr__constrained = (Instruction__instr.attr__constrained({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })) } in (
             (  Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content <- ( (Instruction__instr.__split_fields(temp___988)) );
              Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content <- ( (Instruction__instr.__split_discrs(temp___988)) ) )))
            ) );
            ( "GP_Sloc:machine.adb:621:14:inlined:machine.adb:807:17" (#"machine.adb" 621 0 0# #"machine.adb" 621 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(1)) )) );
            ( "GP_Sloc:machine.adb:624:10:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ()) );
            ( "GP_Sloc:machine.adb:624:10:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ( (Debug__put__2___axiom.put__2(Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content)) )) );
            ( "GP_Sloc:machine.adb:624:28:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ()) );
            ( "GP_Sloc:machine.adb:624:28:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ( (Debug__put__3___axiom.put__3(58)) )) );
            ( "GP_Sloc:machine.adb:624:38:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ()) );
            ( "GP_Sloc:machine.adb:624:38:inlined:machine.adb:807:17" (#"machine.adb" 624 0 0# ( (Debug__put__3___axiom.put__3(9)) )) );
            ( "GP_Sloc:machine.adb:625:10:inlined:machine.adb:807:17" (#"machine.adb" 625 0 0# ()) );
            ( "GP_Sloc:machine.adb:625:10:inlined:machine.adb:807:17" (#"machine.adb" 625 0 0# ( (Instruction__debugprintinstr___axiom.debugprintinstr({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })) )) );
            ( "GP_Sloc:machine.adb:626:10:inlined:machine.adb:807:17" (#"machine.adb" 626 0 0# ()) );
            ( "GP_Sloc:machine.adb:626:10:inlined:machine.adb:807:17" (#"machine.adb" 626 0 0# ( (Debug__new_line___axiom.new_line(())) )) );
            ( "GP_Sloc:machine.adb:629:10:inlined:machine.adb:807:17" (#"machine.adb" 629 0 0# (if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 1)) then (
             ( ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# ()) );
             ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# (#"machine.adb" 631 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 631 0 0# assume { #"machine.adb" 631 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b) }))
             ;
             #"machine.adb" 631 0 0# assume { #"machine.adb" 631 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# ()) );
             ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# ()) );
             ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# ()) );
             ( "GP_Sloc:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 631 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# (#"machine.adb" 420 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b in (
              #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b) }))
             ;
             #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# (#"machine.adb" 420 0 0# ())) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# ( ( "GP_Sloc:machine.adb:237:15:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# ()) );
             ( "GP_Sloc:machine.adb:237:15:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# (#"machine.adb" 237 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 237 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:237:52:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:55" "comment:             (DetectUninitializedVariable(Regs(Inst.AddRs1)) and DetectUninitializedVariable(Regs(Inst.AddRs2))) or
                                                   ^ machine.adb:237:52:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C599b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b.c599b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b.c599b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:237:15:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# ()) );
             ( "GP_Sloc:machine.adb:237:66:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# ()) );
             ( "GP_Sloc:machine.adb:237:66:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# (#"machine.adb" 237 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 237 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:237:103:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:56" "comment:             (DetectUninitializedVariable(Regs(Inst.AddRs1)) and DetectUninitializedVariable(Regs(Inst.AddRs2))) or
                                                                                                      ^ machine.adb:237:103:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C603b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b.c603b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b.c603b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:237:66:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 237 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 236 0 0# #"machine.adb" 236 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b.c596b.bool__content <- ( (Boolean.orb((Boolean.orb((Boolean.orb((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C599b.c599b)))))) = 0)) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__B598b__C603b.c603b)))))) = 0)))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 239 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:239:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:57" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized and then Regs(Inst.AddRs1).Value /= 0) or
                       ^ machine.adb:239:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 239 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:239:71:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:58" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized and then Regs(Inst.AddRs1).Value /= 0) or
                                                                      ^ machine.adb:239:71:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 239 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:239:128:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:60" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized and then Regs(Inst.AddRs1).Value /= 0) or
                                                                                                                               ^ machine.adb:239:128:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 239 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:239:120:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:59" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized and then Regs(Inst.AddRs1).Value /= 0) or
                                                                                                                       ^ machine.adb:239:120:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) <> 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 241 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:241:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:61" "comment:             (Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized and then Regs(Inst.AddRs2).Value /= 0) or
                       ^ machine.adb:241:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 241 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:241:73:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:62" "comment:             (Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized and then Regs(Inst.AddRs2).Value /= 0) or
                                                                        ^ machine.adb:241:73:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 241 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:241:128:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:64" "comment:             (Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized and then Regs(Inst.AddRs2).Value /= 0) or
                                                                                                                               ^ machine.adb:241:128:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 241 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:241:120:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:63" "comment:             (Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized and then Regs(Inst.AddRs2).Value /= 0) or
                                                                                                                       ^ machine.adb:241:120:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) <> 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 243 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:243:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:65" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Initialized and then (
                       ^ machine.adb:243:24:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 243 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:243:71:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:66" "comment:             (Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Initialized and then (
                                                                      ^ machine.adb:243:71:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))))))) = 1) ) && (Boolean.orb(( ((Machine__integerval__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:245:35:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:68" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                  ^ machine.adb:245:35:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:245:27:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:67" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                          ^ machine.adb:245:27:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) > 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:245:72:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:70" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                                                       ^ machine.adb:245:72:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:245:64:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:69" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                                               ^ machine.adb:245:64:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) > (#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:245:97:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:73" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                                                                                ^ machine.adb:245:97:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub" (Machine__TintegervalB.range_check_((2147483647 - (Machine__integerval__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:245:116:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:72" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                                                                                                   ^ machine.adb:245:116:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 245 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:245:108:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:71" "comment:                (Regs(Inst.AddRs2).Value > 0 and then Regs(Inst.AddRs1).Value > IntegerVal'Last - Regs(Inst.AddRs2).Value) or
                                                                                                           ^ machine.adb:245:108:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) ))))))) ))) )) (( ((Machine__integerval__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:247:35:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:75" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                  ^ machine.adb:247:35:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:247:27:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:74" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                          ^ machine.adb:247:27:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) < 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:247:72:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:77" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                                                       ^ machine.adb:247:72:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:247:64:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:76" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                                               ^ machine.adb:247:64:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) )))) < (#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub" "GP_Sloc:machine.adb:247:98:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:80" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                                                                                 ^ machine.adb:247:98:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((( -2147483648 ) - (Machine__integerval__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub__selectcomp" "GP_Sloc:machine.adb:247:117:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:79" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                                                                                                    ^ machine.adb:247:117:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 247 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B598b_declblk__C596b_assign__typeconv__or__andthen__or__andthen__cmp__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:247:109:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:78" "comment:                (Regs(Inst.AddRs2).Value < 0 and then Regs(Inst.AddRs1).Value < IntegerVal'First - Regs(Inst.AddRs2).Value)
                                                                                                            ^ machine.adb:247:109:inlined:machine.adb:420:15:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C594b.c594b)) )))))))) ))))))) ))) ))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:420:47:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:47:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# (#"machine.adb" 420 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b.c607b) }))
             ;
             #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b.c607b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:420:47:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:7:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 420 0 0# (if (not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C596b.c596b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b.c607b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__C607b.c607b < 0))))) )) then (
              ( ( "GP_Sloc:machine.adb:422:10:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 422 0 0# (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 422 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:422:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:106" "comment:         if Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Initialized then
                     ^ machine.adb:422:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 422 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:422:69:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:107" "comment:         if Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Initialized then
                                                                    ^ machine.adb:422:69:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 1) )) then (
               ( "GP_Sloc:machine.adb:423:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 423 0 0# #"machine.adb" 423 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 423 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:423:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:105" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                     ^ machine.adb:423:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) ))))) ({ ( (let temp___993 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 424 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add" "GP_Sloc:machine.adb:424:67:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:103" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Value);
                                                                  ^ machine.adb:424:67:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 424 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" "GP_Sloc:machine.adb:424:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:100" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Value);
                                                           ^ machine.adb:424:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 424 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:424:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:99" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Value);
                                                   ^ machine.adb:424:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) )))) + (Machine__integerval__rep.to_rep((#"machine.adb" 424 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" "GP_Sloc:machine.adb:424:86:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:102" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Value);
                                                                                     ^ machine.adb:424:86:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 424 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:424:78:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:101" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Value);
                                                                             ^ machine.adb:424:78:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T611b.attr__constrained = true } in (
               (let temp___994 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))) in (
                (  assert {  (#"machine.adb" 423 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:423:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:104" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                             ^ machine.adb:423:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___994)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___993)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___994)))) else true) )) };
                temp___993 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:426:10:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 426 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:426:25:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:97" "comment:         elsif Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized then
                        ^ machine.adb:426:25:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 426 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:426:72:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:98" "comment:         elsif Regs(Inst.AddRs1).State = Initialized and then Regs(Inst.AddRs2).State = Uninitialized then
                                                                       ^ machine.adb:426:72:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 0) )) then (
                ( "GP_Sloc:machine.adb:427:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 427 0 0# #"machine.adb" 427 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 427 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:427:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:96" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                     ^ machine.adb:427:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) ))))) ({ ( (let temp___991 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 428 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add" "GP_Sloc:machine.adb:428:67:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:94" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Garbage);
                                                                  ^ machine.adb:428:67:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 428 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" "GP_Sloc:machine.adb:428:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:91" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Garbage);
                                                           ^ machine.adb:428:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 428 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:428:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:90" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Garbage);
                                                   ^ machine.adb:428:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) )))) + (Machine__integerval__rep.to_rep((#"machine.adb" 428 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" "GP_Sloc:machine.adb:428:86:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:93" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Garbage);
                                                                                     ^ machine.adb:428:86:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 428 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:428:78:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:92" "comment:                                 Value => Regs(Inst.AddRs1).Value + Regs(Inst.AddRs2).Garbage);
                                                                             ^ machine.adb:428:78:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T612b.attr__constrained = true } in (
                (let temp___992 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))) in (
                 (  assert {  (#"machine.adb" 427 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:427:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:95" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                             ^ machine.adb:427:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___992)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___991)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___992)))) else true) )) };
                 temp___991 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))))) })) )) )) else (
                ( "GP_Sloc:machine.adb:430:10:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 430 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:430:25:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:88" "comment:         elsif Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized then
                        ^ machine.adb:430:25:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 430 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:430:74:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:89" "comment:         elsif Regs(Inst.AddRs1).State = Uninitialized and then Regs(Inst.AddRs2).State = Initialized then
                                                                         ^ machine.adb:430:74:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))))))) = 1) )) then (
                 ( "GP_Sloc:machine.adb:431:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 431 0 0# #"machine.adb" 431 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 431 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:431:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:87" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                     ^ machine.adb:431:22:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) ))))) ({ ( (let temp___989 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 432 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:432:69:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:85" "comment:                                 Value => Regs(Inst.AddRs1).Garbage + Regs(Inst.AddRs2).Value);
                                                                    ^ machine.adb:432:69:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 432 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:432:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:82" "comment:                                 Value => Regs(Inst.AddRs1).Garbage + Regs(Inst.AddRs2).Value);
                                                           ^ machine.adb:432:60:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 432 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:432:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:81" "comment:                                 Value => Regs(Inst.AddRs1).Garbage + Regs(Inst.AddRs2).Value);
                                                   ^ machine.adb:432:52:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) )))) + (Machine__integerval__rep.to_rep((#"machine.adb" 432 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp" "GP_Sloc:machine.adb:432:88:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:84" "comment:                                 Value => Regs(Inst.AddRs1).Garbage + Regs(Inst.AddRs2).Value);
                                                                                       ^ machine.adb:432:88:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 432 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:432:80:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:83" "comment:                                 Value => Regs(Inst.AddRs1).Garbage + Regs(Inst.AddRs2).Value);
                                                                               ^ machine.adb:432:80:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B593b__T613b.attr__constrained = true } in (
                 (let temp___990 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))) in (
                  (  assert {  (#"machine.adb" 431 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:431:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:86" "comment:            Regs(Inst.AddRd) := (State => Initialized,
                             ^ machine.adb:431:30:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" (if ((Machine__dataval.attr__constrained temp___990)) then (
                   ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___989)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___990)))) else true) )) };
                  temp___989 )))
                 ))
                  ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__addrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C589b.c589b)))))) })) )) )) else (
                 ())) ))) )))) );
              ( "GP_Sloc:machine.adb:434:13:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 434 0 0# #"machine.adb" 434 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 434 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:434:43:inlined:machine.adb:631:16:inlined:machine.adb:807:17" "GP_Id:108" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:434:43:inlined:machine.adb:631:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:435:14:inlined:machine.adb:631:16:inlined:machine.adb:807:17" (#"machine.adb" 435 0 0# #"machine.adb" 435 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) )) else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 2)) then (
             ( ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# ()) );
             ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# (#"machine.adb" 633 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 633 0 0# assume { #"machine.adb" 633 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b) }))
             ;
             #"machine.adb" 633 0 0# assume { #"machine.adb" 633 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# ()) );
             ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# ()) );
             ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# ()) );
             ( "GP_Sloc:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 633 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# (#"machine.adb" 442 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b in (
              #"machine.adb" 442 0 0# assume { #"machine.adb" 442 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b) }))
             ;
             #"machine.adb" 442 0 0# assume { #"machine.adb" 442 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# (#"machine.adb" 442 0 0# ())) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# ( ( "GP_Sloc:machine.adb:255:15:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# ()) );
             ( "GP_Sloc:machine.adb:255:15:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# (#"machine.adb" 255 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 255 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:255:52:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:109" "comment:             (DetectUninitializedVariable(Regs(Inst.SubRs1)) and DetectUninitializedVariable(Regs(Inst.SubRs2))) or
                                                   ^ machine.adb:255:52:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C624b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b.c624b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b.c624b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:255:15:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# ()) );
             ( "GP_Sloc:machine.adb:255:66:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# ()) );
             ( "GP_Sloc:machine.adb:255:66:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# (#"machine.adb" 255 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 255 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:255:103:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:110" "comment:             (DetectUninitializedVariable(Regs(Inst.SubRs1)) and DetectUninitializedVariable(Regs(Inst.SubRs2))) or
                                                                                                      ^ machine.adb:255:103:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C628b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b.c628b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b.c628b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:255:66:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 255 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 254 0 0# #"machine.adb" 254 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b.c621b.bool__content <- ( (Boolean.orb((Boolean.orb((Boolean.orb((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C624b.c624b)))))) = 0)) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__B623b__C628b.c628b)))))) = 0)))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 257 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:257:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:111" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized and then Regs(Inst.SubRs1).Value /= -1) or
                       ^ machine.adb:257:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 257 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:257:71:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:112" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized and then Regs(Inst.SubRs1).Value /= -1) or
                                                                      ^ machine.adb:257:71:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 257 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:257:128:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:114" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized and then Regs(Inst.SubRs1).Value /= -1) or
                                                                                                                               ^ machine.adb:257:128:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 257 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:257:120:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:113" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized and then Regs(Inst.SubRs1).Value /= -1) or
                                                                                                                       ^ machine.adb:257:120:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) <> ( -1 )) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 259 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:259:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:115" "comment:             (Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized and then Regs(Inst.SubRs2).Value /= 0) or
                       ^ machine.adb:259:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 259 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:259:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:116" "comment:             (Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized and then Regs(Inst.SubRs2).Value /= 0) or
                                                                        ^ machine.adb:259:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 259 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:259:128:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:118" "comment:             (Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized and then Regs(Inst.SubRs2).Value /= 0) or
                                                                                                                               ^ machine.adb:259:128:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 259 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:259:120:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:117" "comment:             (Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized and then Regs(Inst.SubRs2).Value /= 0) or
                                                                                                                       ^ machine.adb:259:120:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) <> 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 261 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:261:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:119" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Initialized and then (
                       ^ machine.adb:261:24:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 261 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:261:71:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:120" "comment:             (Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Initialized and then (
                                                                      ^ machine.adb:261:71:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))))))) = 1) ) && (Boolean.orb(( ((Machine__integerval__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:263:35:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:122" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                  ^ machine.adb:263:35:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:263:27:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:121" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                          ^ machine.adb:263:27:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) < 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:263:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:124" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                                                        ^ machine.adb:263:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:263:65:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:123" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                                                ^ machine.adb:263:65:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) > (#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:263:98:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:127" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                                                                                 ^ machine.adb:263:98:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add" (Machine__TintegervalB.range_check_((2147483647 + (Machine__integerval__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:263:117:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:126" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                                                                                                    ^ machine.adb:263:117:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 263 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:263:109:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:125" "comment:                (Regs(Inst.SubRs2).Value < 0 and then (Regs(Inst.SubRs1).Value > IntegerVal'Last + Regs(Inst.SubRs2).Value)) or
                                                                                                            ^ machine.adb:263:109:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) ))))))) ))) )) (( ((Machine__integerval__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:265:35:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:129" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                  ^ machine.adb:265:35:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:265:27:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:128" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                          ^ machine.adb:265:27:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) > 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:265:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:131" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                                                        ^ machine.adb:265:73:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:265:65:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:130" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                                                ^ machine.adb:265:65:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) )))) < (#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add" "GP_Sloc:machine.adb:265:99:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:134" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                                                                                  ^ machine.adb:265:99:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((( -2147483648 ) + (Machine__integerval__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add__selectcomp" "GP_Sloc:machine.adb:265:118:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:133" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                                                                                                     ^ machine.adb:265:118:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 265 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B623b_declblk__C621b_assign__typeconv__or__andthen__or__andthen__cmp__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:265:110:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:132" "comment:                (Regs(Inst.SubRs2).Value > 0 and then (Regs(Inst.SubRs1).Value < IntegerVal'First + Regs(Inst.SubRs2).Value))
                                                                                                             ^ machine.adb:265:110:inlined:machine.adb:442:15:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C619b.c619b)) )))))))) ))))))) ))) ))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:442:47:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:47:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# (#"machine.adb" 442 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 442 0 0# assume { #"machine.adb" 442 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b.c632b) }))
             ;
             #"machine.adb" 442 0 0# assume { #"machine.adb" 442 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b.c632b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:442:47:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# ()) );
             ( "GP_Sloc:machine.adb:442:7:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 442 0 0# (if (not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C621b.c621b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b.c632b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__C632b.c632b < 0))))) )) then (
              ( ( "GP_Sloc:machine.adb:444:10:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 444 0 0# (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 444 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:444:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:160" "comment:         if Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Initialized then
                     ^ machine.adb:444:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 444 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:444:69:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:161" "comment:         if Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Initialized then
                                                                    ^ machine.adb:444:69:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 1) )) then (
               ( "GP_Sloc:machine.adb:445:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 445 0 0# #"machine.adb" 445 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 445 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:445:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:159" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                     ^ machine.adb:445:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) ))))) ({ ( (let temp___999 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 446 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub" "GP_Sloc:machine.adb:446:67:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:157" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Value);
                                                                  ^ machine.adb:446:67:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 446 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" "GP_Sloc:machine.adb:446:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:154" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Value);
                                                           ^ machine.adb:446:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 446 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:446:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:153" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Value);
                                                   ^ machine.adb:446:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) )))) - (Machine__integerval__rep.to_rep((#"machine.adb" 446 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" "GP_Sloc:machine.adb:446:86:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:156" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Value);
                                                                                     ^ machine.adb:446:86:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 446 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:446:78:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:155" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Value);
                                                                             ^ machine.adb:446:78:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T636b.attr__constrained = true } in (
               (let temp___1000 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))) in (
                (  assert {  (#"machine.adb" 445 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:445:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:158" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                             ^ machine.adb:445:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1000)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___999)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1000)))) else true) )) };
                temp___999 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:448:10:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 448 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:448:25:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:151" "comment:         elsif Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized then
                        ^ machine.adb:448:25:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 448 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:448:72:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:152" "comment:         elsif Regs(Inst.SubRs1).State = Initialized and then Regs(Inst.SubRs2).State = Uninitialized then
                                                                       ^ machine.adb:448:72:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 0) )) then (
                ( "GP_Sloc:machine.adb:449:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 449 0 0# #"machine.adb" 449 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 449 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:449:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:150" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                     ^ machine.adb:449:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) ))))) ({ ( (let temp___997 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 450 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub" "GP_Sloc:machine.adb:450:67:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:148" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Garbage);
                                                                  ^ machine.adb:450:67:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 450 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" "GP_Sloc:machine.adb:450:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:145" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Garbage);
                                                           ^ machine.adb:450:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 450 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:450:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:144" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Garbage);
                                                   ^ machine.adb:450:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) )))) - (Machine__integerval__rep.to_rep((#"machine.adb" 450 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" "GP_Sloc:machine.adb:450:86:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:147" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Garbage);
                                                                                     ^ machine.adb:450:86:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 450 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:450:78:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:146" "comment:                                 Value => Regs(Inst.SubRs1).Value - Regs(Inst.SubRs2).Garbage);
                                                                             ^ machine.adb:450:78:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T637b.attr__constrained = true } in (
                (let temp___998 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))) in (
                 (  assert {  (#"machine.adb" 449 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:449:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:149" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                             ^ machine.adb:449:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___998)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___997)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___998)))) else true) )) };
                 temp___997 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))))) })) )) )) else (
                ( "GP_Sloc:machine.adb:452:10:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 452 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:452:25:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:142" "comment:         elsif Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized then
                        ^ machine.adb:452:25:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 452 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:452:74:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:143" "comment:         elsif Regs(Inst.SubRs1).State = Uninitialized and then Regs(Inst.SubRs2).State = Initialized then
                                                                         ^ machine.adb:452:74:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))))))) = 1) )) then (
                 ( "GP_Sloc:machine.adb:453:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 453 0 0# #"machine.adb" 453 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 453 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:453:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:141" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                     ^ machine.adb:453:22:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) ))))) ({ ( (let temp___995 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 454 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:454:69:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:139" "comment:                                 Value => Regs(Inst.SubRs1).Garbage - Regs(Inst.SubRs2).Value);
                                                                    ^ machine.adb:454:69:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 454 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:454:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:136" "comment:                                 Value => Regs(Inst.SubRs1).Garbage - Regs(Inst.SubRs2).Value);
                                                           ^ machine.adb:454:60:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 454 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:454:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:135" "comment:                                 Value => Regs(Inst.SubRs1).Garbage - Regs(Inst.SubRs2).Value);
                                                   ^ machine.adb:454:52:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) )))) - (Machine__integerval__rep.to_rep((#"machine.adb" 454 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp" "GP_Sloc:machine.adb:454:88:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:138" "comment:                                 Value => Regs(Inst.SubRs1).Garbage - Regs(Inst.SubRs2).Value);
                                                                                       ^ machine.adb:454:88:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 454 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__sub__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:454:80:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:137" "comment:                                 Value => Regs(Inst.SubRs1).Garbage - Regs(Inst.SubRs2).Value);
                                                                               ^ machine.adb:454:80:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B618b__T638b.attr__constrained = true } in (
                 (let temp___996 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))) in (
                  (  assert {  (#"machine.adb" 453 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:453:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:140" "comment:            Regs(Inst.SubRd) := (State => Initialized,
                             ^ machine.adb:453:30:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___996)) then (
                   ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___995)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___996)))) else true) )) };
                  temp___995 )))
                 ))
                  ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__subrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C614b.c614b)))))) })) )) )) else (
                 ())) ))) )))) );
              ( "GP_Sloc:machine.adb:456:13:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 456 0 0# #"machine.adb" 456 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 456 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:456:43:inlined:machine.adb:633:16:inlined:machine.adb:807:17" "GP_Id:162" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:456:43:inlined:machine.adb:633:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:457:14:inlined:machine.adb:633:16:inlined:machine.adb:807:17" (#"machine.adb" 457 0 0# #"machine.adb" 457 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 3)) then (
             ( ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# ()) );
             ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# (#"machine.adb" 635 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 635 0 0# assume { #"machine.adb" 635 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b) }))
             ;
             #"machine.adb" 635 0 0# assume { #"machine.adb" 635 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# ()) );
             ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# ()) );
             ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# ()) );
             ( "GP_Sloc:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 635 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# (#"machine.adb" 464 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b in (
              #"machine.adb" 464 0 0# assume { #"machine.adb" 464 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b) }))
             ;
             #"machine.adb" 464 0 0# assume { #"machine.adb" 464 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# (#"machine.adb" 464 0 0# ())) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# ( ( "GP_Sloc:machine.adb:273:15:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# ()) );
             ( "GP_Sloc:machine.adb:273:15:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# (#"machine.adb" 273 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 273 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:273:52:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:163" "comment:             (DetectUninitializedVariable(Regs(Inst.MulRs1)) and DetectUninitializedVariable(Regs(Inst.MulRs2))) or
                                                   ^ machine.adb:273:52:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C649b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b.c649b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b.c649b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:273:15:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# ()) );
             ( "GP_Sloc:machine.adb:273:66:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# ()) );
             ( "GP_Sloc:machine.adb:273:66:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# (#"machine.adb" 273 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 273 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:273:103:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:164" "comment:             (DetectUninitializedVariable(Regs(Inst.MulRs1)) and DetectUninitializedVariable(Regs(Inst.MulRs2))) or
                                                                                                      ^ machine.adb:273:103:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C653b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b.c653b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b.c653b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:273:66:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 273 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 272 0 0# #"machine.adb" 272 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b.c646b.bool__content <- ( (Boolean.orb((Boolean.orb((Boolean.orb((Boolean.orb((Boolean.orb((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C649b.c649b)))))) = 0)) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__B648b__C653b.c653b)))))) = 0)))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 275 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:275:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:165" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 1) or
                       ^ machine.adb:275:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 275 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:275:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:166" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 1) or
                                                                      ^ machine.adb:275:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 275 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:275:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:168" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 1) or
                                                                                                                               ^ machine.adb:275:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 275 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:275:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:167" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 1) or
                                                                                                                       ^ machine.adb:275:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) <> 1) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 277 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:277:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:169" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 0) or
                       ^ machine.adb:277:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 277 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:277:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:170" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 0) or
                                                                      ^ machine.adb:277:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 277 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:277:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:172" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 0) or
                                                                                                                               ^ machine.adb:277:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 277 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:277:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:171" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized and then Regs(Inst.MulRs1).Value /= 0) or
                                                                                                                       ^ machine.adb:277:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) <> 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:279:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:173" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 1) or
                       ^ machine.adb:279:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:279:73:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:174" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 1) or
                                                                        ^ machine.adb:279:73:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:279:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:176" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 1) or
                                                                                                                               ^ machine.adb:279:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:279:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:175" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 1) or
                                                                                                                       ^ machine.adb:279:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) <> 1) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 281 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:281:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:177" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 0) or
                       ^ machine.adb:281:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 281 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:281:73:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:178" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 0) or
                                                                        ^ machine.adb:281:73:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 281 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:281:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:180" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 0) or
                                                                                                                               ^ machine.adb:281:128:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 281 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:281:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:179" "comment:             (Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized and then Regs(Inst.MulRs2).Value /= 0) or
                                                                                                                       ^ machine.adb:281:120:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) <> 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 283 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:283:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:181" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Initialized and then (
                       ^ machine.adb:283:24:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 283 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:283:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:182" "comment:             (Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Initialized and then (
                                                                      ^ machine.adb:283:71:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))))))) = 1) ) && (Boolean.orb((Boolean.orb((Boolean.orb((Boolean.orb((Boolean.orb(( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:184" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                  ^ machine.adb:285:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:183" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                          ^ machine.adb:285:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:285:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:186" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                       ^ machine.adb:285:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:285:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:185" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                               ^ machine.adb:285:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:188" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                            ^ machine.adb:285:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:187" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                    ^ machine.adb:285:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > (#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:285:134:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:191" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                     ^ machine.adb:285:134:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:153:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:190" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                        ^ machine.adb:285:153:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 285 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:285:145:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:189" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                ^ machine.adb:285:145:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) ))) )) (( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:287:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:193" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                  ^ machine.adb:287:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:287:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:192" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                          ^ machine.adb:287:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:287:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:195" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                       ^ machine.adb:287:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:287:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:194" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                               ^ machine.adb:287:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:287:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:197" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                            ^ machine.adb:287:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:287:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:196" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                    ^ machine.adb:287:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > (#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div" "GP_Sloc:machine.adb:287:134:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:200" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                     ^ machine.adb:287:134:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div__selectcomp" "GP_Sloc:machine.adb:287:153:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:199" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                        ^ machine.adb:287:153:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 287 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__or__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:287:145:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:198" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                ^ machine.adb:287:145:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) ))) )))) (( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:202" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                  ^ machine.adb:289:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:201" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                          ^ machine.adb:289:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:289:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:204" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                       ^ machine.adb:289:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:289:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:203" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                               ^ machine.adb:289:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:206" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                            ^ machine.adb:289:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:205" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                    ^ machine.adb:289:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < (#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:289:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__div" "GP_Id:210" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                                                      ^ machine.adb:289:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:289:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:209" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                                                      ^ machine.adb:289:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__div" (Int_Division.div_(( -2147483648 )) ((Machine__integerval__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:154:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:208" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                                                                         ^ machine.adb:289:154:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__div__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 289 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:289:146:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:207" "comment:                (Regs(Inst.MulRs1).Value < 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value < IntegerVal'First / Regs(Inst.MulRs2).Value) or
                                                                                                                                                 ^ machine.adb:289:146:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__or__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) )))) ))) )))) (( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:212" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                  ^ machine.adb:291:35:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:211" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                          ^ machine.adb:291:27:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:291:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:214" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                       ^ machine.adb:291:72:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:291:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:213" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                               ^ machine.adb:291:64:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:216" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                            ^ machine.adb:291:109:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:215" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                    ^ machine.adb:291:101:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) < (#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:291:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__div" "GP_Id:220" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                                                      ^ machine.adb:291:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:291:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:219" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                                                      ^ machine.adb:291:135:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__div" (Int_Division.div_(( -2147483648 )) ((Machine__integerval__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:154:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:218" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                                                                         ^ machine.adb:291:154:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__div__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 291 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:291:146:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:217" "comment:                (Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value < 0 and then Regs(Inst.MulRs2).Value < IntegerVal'First / Regs(Inst.MulRs1).Value) or
                                                                                                                                                 ^ machine.adb:291:146:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__or__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) )))) ))) )))) (not ( ( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:39:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:222" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                      ^ machine.adb:293:39:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:31:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:221" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                              ^ machine.adb:293:31:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) = 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:293:76:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:224" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                           ^ machine.adb:293:76:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:293:68:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:223" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                   ^ machine.adb:293:68:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:113:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:226" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                ^ machine.adb:293:113:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:105:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:225" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                        ^ machine.adb:293:105:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > (#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:293:138:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:229" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                         ^ machine.adb:293:138:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:157:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:228" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                            ^ machine.adb:293:157:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__cmp__div__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 293 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:293:149:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:227" "comment:                not (Regs(Inst.MulRs1).Value = 0 and then Regs(Inst.MulRs2).Value > 0 and then Regs(Inst.MulRs1).Value > IntegerVal'Last / Regs(Inst.MulRs2).Value) or
                                                                                                                                                    ^ machine.adb:293:149:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__or__not__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) ))) ) )))) (not ( ( ( ((Machine__integerval__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:39:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:231" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                      ^ machine.adb:295:39:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:31:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:230" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                              ^ machine.adb:295:31:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) = 0) && ((Machine__integerval__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:295:76:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:233" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                           ^ machine.adb:295:76:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:295:68:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:232" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                   ^ machine.adb:295:68:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > 0) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:113:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:235" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                                                                ^ machine.adb:295:113:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:105:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:234" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                                                        ^ machine.adb:295:105:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))) > (#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:295:138:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:238" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                                                                                         ^ machine.adb:295:138:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__integerval__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:157:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:237" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                                                                                                            ^ machine.adb:295:157:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__cmp__div__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 295 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:295:149:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:236" "comment:                not (Regs(Inst.MulRs2).Value = 0 and then Regs(Inst.MulRs1).Value > 0 and then Regs(Inst.MulRs2).Value > IntegerVal'Last / Regs(Inst.MulRs1).Value)
                                                                                                                                                    ^ machine.adb:295:149:inlined:machine.adb:464:15:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B648b_declblk__C646b_assign__typeconv__or__andthen__or__not__andthen__cmp__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C644b.c644b)) )))))))) )))))) ))) ) ))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:464:47:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:47:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# (#"machine.adb" 464 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 464 0 0# assume { #"machine.adb" 464 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b.c657b) }))
             ;
             #"machine.adb" 464 0 0# assume { #"machine.adb" 464 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b.c657b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:464:47:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# ()) );
             ( "GP_Sloc:machine.adb:464:7:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 464 0 0# (if (not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C646b.c646b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b.c657b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__C657b.c657b < 0))))) )) then (
              ( ( "GP_Sloc:machine.adb:466:10:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 466 0 0# (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 466 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:466:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:264" "comment:         if Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Initialized then
                     ^ machine.adb:466:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 466 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:466:69:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:265" "comment:         if Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Initialized then
                                                                    ^ machine.adb:466:69:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 1) )) then (
               ( "GP_Sloc:machine.adb:467:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 467 0 0# #"machine.adb" 467 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 467 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:467:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:263" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                     ^ machine.adb:467:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) ))))) ({ ( (let temp___1005 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 468 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult" "GP_Sloc:machine.adb:468:67:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:261" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Value);
                                                                  ^ machine.adb:468:67:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 468 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" "GP_Sloc:machine.adb:468:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:258" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Value);
                                                           ^ machine.adb:468:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 468 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:468:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:257" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Value);
                                                   ^ machine.adb:468:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) )))) * (Machine__integerval__rep.to_rep((#"machine.adb" 468 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" "GP_Sloc:machine.adb:468:86:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:260" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Value);
                                                                                     ^ machine.adb:468:86:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 468 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:468:78:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:259" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Value);
                                                                             ^ machine.adb:468:78:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T661b.attr__constrained = true } in (
               (let temp___1006 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))) in (
                (  assert {  (#"machine.adb" 467 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:467:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:262" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                             ^ machine.adb:467:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1006)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1005)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1006)))) else true) )) };
                temp___1005 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:470:10:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 470 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:470:25:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:255" "comment:         elsif Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized then
                        ^ machine.adb:470:25:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 470 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:470:72:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:256" "comment:         elsif Regs(Inst.MulRs1).State = Initialized and then Regs(Inst.MulRs2).State = Uninitialized then
                                                                       ^ machine.adb:470:72:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 0) )) then (
                ( "GP_Sloc:machine.adb:471:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 471 0 0# #"machine.adb" 471 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 471 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:471:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:254" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                     ^ machine.adb:471:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) ))))) ({ ( (let temp___1003 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 472 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult" "GP_Sloc:machine.adb:472:67:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:252" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Garbage);
                                                                  ^ machine.adb:472:67:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 472 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" "GP_Sloc:machine.adb:472:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:249" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Garbage);
                                                           ^ machine.adb:472:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 472 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:472:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:248" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Garbage);
                                                   ^ machine.adb:472:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) )))) * (Machine__integerval__rep.to_rep((#"machine.adb" 472 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" "GP_Sloc:machine.adb:472:86:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:251" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Garbage);
                                                                                     ^ machine.adb:472:86:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 472 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:472:78:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:250" "comment:                                 Value => Regs(Inst.MulRs1).Value * Regs(Inst.MulRs2).Garbage);
                                                                             ^ machine.adb:472:78:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T662b.attr__constrained = true } in (
                (let temp___1004 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))) in (
                 (  assert {  (#"machine.adb" 471 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:471:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:253" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                             ^ machine.adb:471:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1004)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1003)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1004)))) else true) )) };
                 temp___1003 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))))) })) )) )) else (
                ( "GP_Sloc:machine.adb:474:10:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 474 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:474:25:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:246" "comment:         elsif Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized then
                        ^ machine.adb:474:25:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 474 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:474:74:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:247" "comment:         elsif Regs(Inst.MulRs1).State = Uninitialized and then Regs(Inst.MulRs2).State = Initialized then
                                                                         ^ machine.adb:474:74:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))))))) = 1) )) then (
                 ( "GP_Sloc:machine.adb:475:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 475 0 0# #"machine.adb" 475 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 475 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:475:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:245" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                     ^ machine.adb:475:22:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) ))))) ({ ( (let temp___1001 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 476 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:476:69:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:243" "comment:                                 Value => Regs(Inst.MulRs1).Garbage * Regs(Inst.MulRs2).Value);
                                                                    ^ machine.adb:476:69:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 476 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:476:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:240" "comment:                                 Value => Regs(Inst.MulRs1).Garbage * Regs(Inst.MulRs2).Value);
                                                           ^ machine.adb:476:60:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 476 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:476:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:239" "comment:                                 Value => Regs(Inst.MulRs1).Garbage * Regs(Inst.MulRs2).Value);
                                                   ^ machine.adb:476:52:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) )))) * (Machine__integerval__rep.to_rep((#"machine.adb" 476 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp" "GP_Sloc:machine.adb:476:88:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:242" "comment:                                 Value => Regs(Inst.MulRs1).Garbage * Regs(Inst.MulRs2).Value);
                                                                                       ^ machine.adb:476:88:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 476 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__mult__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:476:80:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:241" "comment:                                 Value => Regs(Inst.MulRs1).Garbage * Regs(Inst.MulRs2).Value);
                                                                               ^ machine.adb:476:80:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)) )))))))) ))))))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B643b__T663b.attr__constrained = true } in (
                 (let temp___1002 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))) in (
                  (  assert {  (#"machine.adb" 475 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:475:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:244" "comment:            Regs(Inst.MulRd) := (State => Initialized,
                             ^ machine.adb:475:30:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1002)) then (
                   ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1001)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1002)))) else true) )) };
                  temp___1001 )))
                 ))
                  ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__mulrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C639b.c639b)))))) })) )) )) else (
                 ())) ))) )))) );
              ( "GP_Sloc:machine.adb:478:13:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 478 0 0# #"machine.adb" 478 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 478 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:478:43:inlined:machine.adb:635:16:inlined:machine.adb:807:17" "GP_Id:266" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:478:43:inlined:machine.adb:635:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:479:14:inlined:machine.adb:635:16:inlined:machine.adb:807:17" (#"machine.adb" 479 0 0# #"machine.adb" 479 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 4)) then (
             ( ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# ()) );
             ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# (#"machine.adb" 637 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 637 0 0# assume { #"machine.adb" 637 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b) }))
             ;
             #"machine.adb" 637 0 0# assume { #"machine.adb" 637 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# ()) );
             ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# ()) );
             ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# ()) );
             ( "GP_Sloc:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 637 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# (#"machine.adb" 486 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b in (
              #"machine.adb" 486 0 0# assume { #"machine.adb" 486 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b) }))
             ;
             #"machine.adb" 486 0 0# assume { #"machine.adb" 486 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# (#"machine.adb" 486 0 0# ())) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# ( ( "GP_Sloc:machine.adb:303:15:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# ()) );
             ( "GP_Sloc:machine.adb:303:15:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# (#"machine.adb" 303 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 303 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:303:52:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:267" "comment:             (DetectUninitializedVariable(Regs(Inst.DivRs1)) and DetectUninitializedVariable(Regs(Inst.DivRs2))) or
                                                   ^ machine.adb:303:52:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C674b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b.c674b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b.c674b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:303:15:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# ()) );
             ( "GP_Sloc:machine.adb:303:66:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# ()) );
             ( "GP_Sloc:machine.adb:303:66:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# (#"machine.adb" 303 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 303 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:303:103:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:268" "comment:             (DetectUninitializedVariable(Regs(Inst.DivRs1)) and DetectUninitializedVariable(Regs(Inst.DivRs2))) or
                                                                                                      ^ machine.adb:303:103:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C678b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b.c678b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b.c678b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:303:66:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 303 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 302 0 0# #"machine.adb" 302 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b.c671b.bool__content <- ( (Boolean.orb((Boolean.orb((Boolean.orb((Boolean.orb((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C674b.c674b)))))) = 0)) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__B673b__C678b.c678b)))))) = 0)))) (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 305 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:305:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:269" "comment:             (Regs(Inst.DivRs1).State = Initialized and then Regs(Inst.DivRs2).State = Uninitialized) or
                       ^ machine.adb:305:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 305 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:305:71:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:270" "comment:             (Regs(Inst.DivRs1).State = Initialized and then Regs(Inst.DivRs2).State = Uninitialized) or
                                                                      ^ machine.adb:305:71:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 307 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:307:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:271" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = 0) or
                       ^ machine.adb:307:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 307 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:307:73:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:272" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = 0) or
                                                                        ^ machine.adb:307:73:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 307 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:307:128:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:274" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = 0) or
                                                                                                                               ^ machine.adb:307:128:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 307 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:307:120:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:273" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = 0) or
                                                                                                                       ^ machine.adb:307:120:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))) )))) = 0) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 309 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:309:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:275" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = -1) or
                       ^ machine.adb:309:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 309 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:309:73:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:276" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = -1) or
                                                                        ^ machine.adb:309:73:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 1) ) && ((Machine__integerval__rep.to_rep((#"machine.adb" 309 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:309:128:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:278" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = -1) or
                                                                                                                               ^ machine.adb:309:128:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 309 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:309:120:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:277" "comment:             (Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized and then Regs(Inst.DivRs2).Value = -1) or
                                                                                                                       ^ machine.adb:309:120:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))) )))) = ( -1 )) )))) (( ( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 311 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:311:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:279" "comment:             (Regs(Inst.DivRs1).State = Initialized and then Regs(Inst.DivRs2).State = Initialized and then (
                       ^ machine.adb:311:24:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 1) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 311 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:311:71:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:280" "comment:             (Regs(Inst.DivRs1).State = Initialized and then Regs(Inst.DivRs2).State = Initialized and then (
                                                                      ^ machine.adb:311:71:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))))))) = 1) ) && (Boolean.orb(((Machine__integerval__rep.to_rep((#"machine.adb" 313 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:313:35:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:282" "comment:                (Regs(Inst.DivRs2).Value = 0) or
                                  ^ machine.adb:313:35:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 313 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:313:27:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:281" "comment:                (Regs(Inst.DivRs2).Value = 0) or
                          ^ machine.adb:313:27:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))) )))) = 0)) ((Boolean.andb(((Machine__integerval__rep.to_rep((#"machine.adb" 315 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:315:35:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:284" "comment:                (Regs(Inst.DivRs1).Value = IntegerVal'First and Regs(Inst.DivRs2).Value = -1)
                                  ^ machine.adb:315:35:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__and__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 315 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:315:27:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:283" "comment:                (Regs(Inst.DivRs1).Value = IntegerVal'First and Regs(Inst.DivRs2).Value = -1)
                          ^ machine.adb:315:27:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__and__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))) )))) = ( -2147483648 ))) (((Machine__integerval__rep.to_rep((#"machine.adb" 315 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__and__cmp__selectcomp" "GP_Sloc:machine.adb:315:82:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:286" "comment:                (Regs(Inst.DivRs1).Value = IntegerVal'First and Regs(Inst.DivRs2).Value = -1)
                                                                                 ^ machine.adb:315:82:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 315 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B673b_declblk__C671b_assign__typeconv__or__andthen__or__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:315:74:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:285" "comment:                (Regs(Inst.DivRs1).Value = IntegerVal'First and Regs(Inst.DivRs2).Value = -1)
                                                                         ^ machine.adb:315:74:inlined:machine.adb:486:15:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C669b.c669b)) )))))))) )))) = ( -1 )))))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:486:47:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:47:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# (#"machine.adb" 486 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 486 0 0# assume { #"machine.adb" 486 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b.c682b) }))
             ;
             #"machine.adb" 486 0 0# assume { #"machine.adb" 486 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b.c682b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:486:47:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# ()) );
             ( "GP_Sloc:machine.adb:486:7:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 486 0 0# (if (not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C671b.c671b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b.c682b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__C682b.c682b < 0))))) )) then (
              ( ( "GP_Sloc:machine.adb:488:10:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 488 0 0# (if ((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 488 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:488:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:305" "comment:         if Regs(Inst.DivRs1).State = Initialized and Regs(Inst.DivRs2).State = Initialized then
                     ^ machine.adb:488:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))))))) = 1)) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 488 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:488:64:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:306" "comment:         if Regs(Inst.DivRs1).State = Initialized and Regs(Inst.DivRs2).State = Initialized then
                                                               ^ machine.adb:488:64:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))))))) = 1)))) then (
               ( "GP_Sloc:machine.adb:489:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 489 0 0# #"machine.adb" 489 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 489 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:489:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:304" "comment:            Regs(Inst.DivRd) := (State => Initialized,
                     ^ machine.adb:489:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) ))))) ({ ( (let temp___1009 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div" "GP_Sloc:machine.adb:490:67:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:302" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                                  ^ machine.adb:490:67:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div" "GP_Sloc:machine.adb:490:67:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:301" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                                  ^ machine.adb:490:67:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" (Int_Division.div_((Machine__integerval__rep.to_rep((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp" "GP_Sloc:machine.adb:490:60:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:298" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                           ^ machine.adb:490:60:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:490:52:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:297" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                   ^ machine.adb:490:52:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))) ))))) ((Machine__integerval__rep.to_rep((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp" "GP_Sloc:machine.adb:490:86:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:300" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                                                     ^ machine.adb:490:86:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 490 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:490:78:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:299" "comment:                                 Value => Regs(Inst.DivRs1).Value / Regs(Inst.DivRs2).Value);
                                                                             ^ machine.adb:490:78:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))) )))))) )))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T686b.attr__constrained = true } in (
               (let temp___1010 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__divrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)))) in (
                (  assert {  (#"machine.adb" 489 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:489:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:303" "comment:            Regs(Inst.DivRd) := (State => Initialized,
                             ^ machine.adb:489:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1010)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1009)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1010)))) else true) )) };
                temp___1009 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__divrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:492:10:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 492 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:492:25:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:295" "comment:         elsif Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized then
                        ^ machine.adb:492:25:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))))))) = 0) && ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 492 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:492:74:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:296" "comment:         elsif Regs(Inst.DivRs1).State = Uninitialized and then Regs(Inst.DivRs2).State = Initialized then
                                                                         ^ machine.adb:492:74:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))))))) = 1) )) then (
                ( "GP_Sloc:machine.adb:493:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 493 0 0# #"machine.adb" 493 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 493 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:493:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:294" "comment:            Regs(Inst.DivRd) := (State => Initialized,
                     ^ machine.adb:493:22:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) ))))) ({ ( (let temp___1007 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:494:69:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div" "GP_Id:292" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                                    ^ machine.adb:494:69:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:494:69:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:291" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                                    ^ machine.adb:494:69:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DIVISION_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div" (Int_Division.div_((Machine__integerval__rep.to_rep((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:494:60:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:288" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                           ^ machine.adb:494:60:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:494:52:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:287" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                   ^ machine.adb:494:52:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))) ))))) ((Machine__integerval__rep.to_rep((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp" "GP_Sloc:machine.adb:494:88:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:290" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                                                       ^ machine.adb:494:88:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 494 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__typeconv__div__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:494:80:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:289" "comment:                                 Value => Regs(Inst.DivRs1).Garbage / Regs(Inst.DivRs2).Value);
                                                                               ^ machine.adb:494:80:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)) )))))))) )))))) )))) )))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B668b__T687b.attr__constrained = true } in (
                (let temp___1008 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__divrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)))) in (
                 (  assert {  (#"machine.adb" 493 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:493:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:293" "comment:            Regs(Inst.DivRd) := (State => Initialized,
                             ^ machine.adb:493:30:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1008)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1007)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1008)))) else true) )) };
                 temp___1007 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__divrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C664b.c664b)))))) })) )) )) else (
                ())) )))) );
              ( "GP_Sloc:machine.adb:496:13:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 496 0 0# #"machine.adb" 496 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 496 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:496:43:inlined:machine.adb:637:16:inlined:machine.adb:807:17" "GP_Id:307" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:496:43:inlined:machine.adb:637:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:497:14:inlined:machine.adb:637:16:inlined:machine.adb:807:17" (#"machine.adb" 497 0 0# #"machine.adb" 497 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 6)) then (
             ( ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# (#"machine.adb" 639 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 639 0 0# assume { #"machine.adb" 639 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b) }))
             ;
             #"machine.adb" 639 0 0# assume { #"machine.adb" 639 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 639 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# (#"machine.adb" 504 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b in (
              #"machine.adb" 504 0 0# assume { #"machine.adb" 504 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b) }))
             ;
             #"machine.adb" 504 0 0# assume { #"machine.adb" 504 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# (#"machine.adb" 504 0 0# ())) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# ( ( "GP_Sloc:machine.adb:322:15:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 322 0 0# ()) );
             ( "GP_Sloc:machine.adb:322:15:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 322 0 0# (#"machine.adb" 322 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 322 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:322:52:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:308" "comment:      return (DetectUninitializedVariable(Regs(Inst.LdrRs))) or
                                                   ^ machine.adb:322:52:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C699b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b.c699b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b.c699b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:322:15:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 322 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 322 0 0# #"machine.adb" 322 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b.c696b.bool__content <- ( (Boolean.orb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__B698b__C699b.c699b)))))) = 0)) (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:323:24:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:309" "comment:             (Regs(Inst.LdrRs).State = Initialized and then (
                       ^ machine.adb:323:24:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) )))))))))))) = 1) && (Boolean.orb(((Machine__integerval__rep.to_rep((#"machine.adb" 324 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:324:34:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:311" "comment:                (Regs(Inst.LdrRs).Value < IntegerVal(Addr'First) - IntegerVal(Inst.LdrOffs)) or
                                 ^ machine.adb:324:34:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 324 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:324:27:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:310" "comment:                (Regs(Inst.LdrRs).Value < IntegerVal(Addr'First) - IntegerVal(Inst.LdrOffs)) or
                          ^ machine.adb:324:27:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) )))))))) )))) < (0 - (Instruction__offset__rep.to_rep((#"machine.adb" 324 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:324:83:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:312" "comment:                (Regs(Inst.LdrRs).Value < IntegerVal(Addr'First) - IntegerVal(Inst.LdrOffs)) or
                                                                                  ^ machine.adb:324:83:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__sub__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) ))))))) (((Machine__integerval__rep.to_rep((#"machine.adb" 325 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__selectcomp" "GP_Sloc:machine.adb:325:34:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:314" "comment:                (Regs(Inst.LdrRs).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.LdrOffs))
                                 ^ machine.adb:325:34:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 325 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:325:27:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:313" "comment:                (Regs(Inst.LdrRs).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.LdrOffs))
                          ^ machine.adb:325:27:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) )))))))) )))) > (65535 - (Instruction__offset__rep.to_rep((#"machine.adb" 325 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B698b_declblk__C696b_assign__typeconv__or__andthen__or__cmp__sub__typeconv__selectcomp" "GP_Sloc:machine.adb:325:82:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:315" "comment:                (Regs(Inst.LdrRs).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.LdrOffs))
                                                                                 ^ machine.adb:325:82:inlined:machine.adb:504:15:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C694b.c694b)) )))))))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:504:47:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:47:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# (#"machine.adb" 504 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 504 0 0# assume { #"machine.adb" 504 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b.c703b) }))
             ;
             #"machine.adb" 504 0 0# assume { #"machine.adb" 504 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b.c703b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:504:47:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# ()) );
             ( "GP_Sloc:machine.adb:504:7:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 504 0 0# (if ((Boolean.andb(not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C696b.c696b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b.c703b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__C703b.c703b < 0))))) )) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 504 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:504:84:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:343" "comment:      if not (DetectInvalidLdr(Inst, Regs) or DetectInvalidPC(PC, 1)) and Regs(Inst.LdrRs).State = Initialized then
                                                                                   ^ machine.adb:504:84:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__and__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) )))))))))))) = 1)))) then (
              ( ( "GP_Sloc:machine.adb:506:10:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 506 0 0# (if (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 506 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:506:45:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:341" "comment:         if Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Initialized then
                                            ^ machine.adb:506:45:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 506 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:506:45:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:340" "comment:         if Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Initialized then
                                            ^ machine.adb:506:45:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 506 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__selectcomp" "GP_Sloc:machine.adb:506:38:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:338" "comment:         if Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Initialized then
                                     ^ machine.adb:506:38:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 506 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:506:31:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:337" "comment:         if Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Initialized then
                              ^ machine.adb:506:31:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 506 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__typeconv__selectcomp" "GP_Sloc:machine.adb:506:62:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:339" "comment:         if Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Initialized then
                                                             ^ machine.adb:506:62:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))))) )))) )))))))))) = 1)) then (
               ( "GP_Sloc:machine.adb:507:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 507 0 0# #"machine.adb" 507 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 507 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:507:22:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:336" "comment:            Regs(Inst.LdrRd) := (State => Initialized,
                     ^ machine.adb:507:22:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))) ({ ( (let temp___1013 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b.rec__machine__dataval__value = (#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp" "GP_Sloc:machine.adb:508:103:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:334" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                                                                      ^ machine.adb:508:103:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:508:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:333" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                                          ^ machine.adb:508:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:508:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:332" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                                          ^ machine.adb:508:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__selectcomp" "GP_Sloc:machine.adb:508:68:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:330" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                                   ^ machine.adb:508:68:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:508:61:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:329" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                            ^ machine.adb:508:61:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 508 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__typeconv__selectcomp" "GP_Sloc:machine.adb:508:92:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:331" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Value);
                                                                                           ^ machine.adb:508:92:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))))) )))) )))))) )); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T707b.attr__constrained = true } in (
               (let temp___1014 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__ldrrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)))) in (
                (  assert {  (#"machine.adb" 507 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:507:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:335" "comment:            Regs(Inst.LdrRd) := (State => Initialized,
                             ^ machine.adb:507:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1014)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1013)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1014)))) else true) )) };
                temp___1013 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__ldrrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:510:10:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (if (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 510 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:510:48:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add" "GP_Id:328" "comment:         elsif Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Uninitialized then
                                               ^ machine.adb:510:48:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 510 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:510:48:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:327" "comment:         elsif Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Uninitialized then
                                               ^ machine.adb:510:48:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 510 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:510:41:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:325" "comment:         elsif Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Uninitialized then
                                        ^ machine.adb:510:41:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 510 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:510:34:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:324" "comment:         elsif Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Uninitialized then
                                 ^ machine.adb:510:34:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 510 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:510:65:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:326" "comment:         elsif Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).State = Uninitialized then
                                                                ^ machine.adb:510:65:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))))) )))) )))))))))) = 0)) then (
                ( "GP_Sloc:machine.adb:511:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 511 0 0# #"machine.adb" 511 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 511 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:511:22:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:323" "comment:            Regs(Inst.LdrRd) := (State => Initialized,
                     ^ machine.adb:511:22:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))) ({ ( (let temp___1011 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b.rec__machine__dataval__value = (#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:512:103:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:321" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                                                                      ^ machine.adb:512:103:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:512:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add" "GP_Id:320" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                                          ^ machine.adb:512:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:512:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:319" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                                          ^ machine.adb:512:75:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:512:68:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:317" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                                   ^ machine.adb:512:68:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:512:61:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:316" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                            ^ machine.adb:512:61:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 512 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:512:92:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:318" "comment:                                 Value => Mem(Addr(Regs(Inst.LdrRs).Value + IntegerVal(Inst.LdrOffs))).Garbage);
                                                                                           ^ machine.adb:512:92:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign__aggr__selectcomp__ixdcomp__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)) ))))))) )))) )))))) )); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B693b__T708b.attr__constrained = true } in (
                (let temp___1012 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__ldrrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)))) in (
                 (  assert {  (#"machine.adb" 511 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__regs_assign" "GP_Sloc:machine.adb:511:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:322" "comment:            Regs(Inst.LdrRd) := (State => Initialized,
                             ^ machine.adb:511:30:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1012)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1011)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1012)))) else true) )) };
                 temp___1011 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__ldrrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C688b.c688b)))))) })) )) )) else (
                ())) )))) );
              ( "GP_Sloc:machine.adb:514:13:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 514 0 0# #"machine.adb" 514 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 514 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:514:43:inlined:machine.adb:639:16:inlined:machine.adb:807:17" "GP_Id:342" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:514:43:inlined:machine.adb:639:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:515:14:inlined:machine.adb:639:16:inlined:machine.adb:807:17" (#"machine.adb" 515 0 0# #"machine.adb" 515 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 7)) then (
             ( ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# (#"machine.adb" 641 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 641 0 0# assume { #"machine.adb" 641 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b) }))
             ;
             #"machine.adb" 641 0 0# assume { #"machine.adb" 641 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 641 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# (#"machine.adb" 522 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b in (
              #"machine.adb" 522 0 0# assume { #"machine.adb" 522 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b) }))
             ;
             #"machine.adb" 522 0 0# assume { #"machine.adb" 522 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# (#"machine.adb" 522 0 0# ())) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# ( ( "GP_Sloc:machine.adb:332:15:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 332 0 0# ()) );
             ( "GP_Sloc:machine.adb:332:15:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 332 0 0# (#"machine.adb" 332 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b__assume = (Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 332 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:332:52:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:344" "comment:      return (DetectUninitializedVariable(Regs(Inst.StrRa))) or
                                                   ^ machine.adb:332:52:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C720b_decl__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) )))))) in (
               assume {  ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b__assume ) with Machine__dataval.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b.c720b) }))
             ;
              assume {  (Machine__dataval___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b.c720b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:332:15:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 332 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 332 0 0# #"machine.adb" 332 0 0# Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b.c717b.bool__content <- ( (Boolean.orb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__B719b__C720b.c720b)))))) = 0)) (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 333 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:333:24:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:345" "comment:             (Regs(Inst.StrRa).State = Initialized and then (
                       ^ machine.adb:333:24:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) )))))))))))) = 1) && (Boolean.orb(((Machine__integerval__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:34:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:347" "comment:                (Regs(Inst.StrRa).Value < IntegerVal(Addr'First) - IntegerVal(Inst.StrOffs)) or
                                 ^ machine.adb:334:34:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:27:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:346" "comment:                (Regs(Inst.StrRa).Value < IntegerVal(Addr'First) - IntegerVal(Inst.StrOffs)) or
                          ^ machine.adb:334:27:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) )))))))) )))) < (0 - (Instruction__offset__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:83:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:348" "comment:                (Regs(Inst.StrRa).Value < IntegerVal(Addr'First) - IntegerVal(Inst.StrOffs)) or
                                                                                  ^ machine.adb:334:83:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__sub__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) ))))))) (((Machine__integerval__rep.to_rep((#"machine.adb" 335 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__selectcomp" "GP_Sloc:machine.adb:335:34:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:350" "comment:                (Regs(Inst.StrRa).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.StrOffs))
                                 ^ machine.adb:335:34:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 335 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:335:27:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:349" "comment:                (Regs(Inst.StrRa).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.StrOffs))
                          ^ machine.adb:335:27:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) )))))))) )))) > (65535 - (Instruction__offset__rep.to_rep((#"machine.adb" 335 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__B719b_declblk__C717b_assign__typeconv__or__andthen__or__cmp__sub__typeconv__selectcomp" "GP_Sloc:machine.adb:335:82:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:351" "comment:                (Regs(Inst.StrRa).Value > IntegerVal(Addr'Last) - IntegerVal(Inst.StrOffs))
                                                                                 ^ machine.adb:335:82:inlined:machine.adb:522:15:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C715b.c715b)) )))))))) ))) )) ) )) );
             ( "GP_Sloc:machine.adb:522:47:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:47:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# (#"machine.adb" 522 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 522 0 0# assume { #"machine.adb" 522 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b.c724b) }))
             ;
             #"machine.adb" 522 0 0# assume { #"machine.adb" 522 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b.c724b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:522:47:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# ()) );
             ( "GP_Sloc:machine.adb:522:7:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 522 0 0# (if ((Boolean.andb(not ( (Boolean.orb(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C717b.c717b.bool__content) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b.c724b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__C724b.c724b < 0))))) )) (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 522 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:522:84:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:371" "comment:      if not (DetectInvalidStr(Inst, Regs) or DetectInvalidPC(PC, 1)) and Regs(Inst.StrRa).State = Initialized then
                                                                                   ^ machine.adb:522:84:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))))))) = 1)))) then (
              ( ( "GP_Sloc:machine.adb:524:10:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 524 0 0# (if (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 524 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:524:22:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:369" "comment:         if Regs(Inst.StrRb).State = Initialized then
                     ^ machine.adb:524:22:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strrb_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))))))) = 1)) then (
               ( "GP_Sloc:machine.adb:526:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 526 0 0# #"machine.adb" 526 0 0# Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:526:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:368" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                            ^ machine.adb:526:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add" "GP_Sloc:machine.adb:526:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:367" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                            ^ machine.adb:526:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__selectcomp" "GP_Sloc:machine.adb:526:38:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:365" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                     ^ machine.adb:526:38:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:526:31:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:364" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                              ^ machine.adb:526:31:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__typeconv__selectcomp" "GP_Sloc:machine.adb:526:62:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:366" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                                             ^ machine.adb:526:62:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) ))))))) )))) ))) ({ ( (let temp___1017 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b.rec__machine__dataval__value = (#"machine.adb" 527 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__aggr__selectcomp" "GP_Sloc:machine.adb:527:103:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:362" "comment:                                                                             Value => Regs(Inst.StrRb).Value);
                                                                                                      ^ machine.adb:527:103:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 527 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__aggr__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:527:96:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:361" "comment:                                                                             Value => Regs(Inst.StrRb).Value);
                                                                                               ^ machine.adb:527:96:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strrb_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))) )); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T728b.attr__constrained = true } in (
               (let temp___1018 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content ((Machine__integerval__rep.to_rep (Machine__dataval.rec__machine__dataval__value (Machine__dataval.__split_fields (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__strra (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) + (Instruction__offset__rep.to_rep (Instruction__instr.rec__instruction__instr__stroffs (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))) in (
                (  assert {  (#"machine.adb" 526 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign" "GP_Sloc:machine.adb:526:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:363" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                                                         ^ machine.adb:526:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (if ((Machine__dataval.attr__constrained temp___1018)) then (
                 ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1017)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1018)))) else true) )) };
                temp___1017 )))
               ))
                ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content ((Machine__integerval__rep.to_rep (Machine__dataval.rec__machine__dataval__value (Machine__dataval.__split_fields (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__strra (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) + (Instruction__offset__rep.to_rep (Instruction__instr.rec__instruction__instr__stroffs (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) })) )) )) else (
               ( "GP_Sloc:machine.adb:529:10:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (if (((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 529 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:529:25:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:360" "comment:         elsif Regs(Inst.StrRb).State = Uninitialized then
                        ^ machine.adb:529:25:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strrb_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))))))) = 0)) then (
                ( "GP_Sloc:machine.adb:531:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 531 0 0# #"machine.adb" 531 0 0# Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:531:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add" "GP_Id:359" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                            ^ machine.adb:531:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:531:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:358" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                            ^ machine.adb:531:45:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add" (Machine__TintegervalB.range_check_(((Machine__integerval__rep.to_rep((#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:531:38:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:356" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                     ^ machine.adb:531:38:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:531:31:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:355" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                              ^ machine.adb:531:31:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))) )))) + (Instruction__offset__rep.to_rep((#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:531:62:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:357" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                                             ^ machine.adb:531:62:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__ixdcomp__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) ))))))) )))) ))) ({ ( (let temp___1015 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b.rec__machine__dataval__value = (#"machine.adb" 532 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:532:103:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:353" "comment:                                                                             Value => Regs(Inst.StrRb).Garbage);
                                                                                                      ^ machine.adb:532:103:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__aggr__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 532 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:532:96:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:352" "comment:                                                                             Value => Regs(Inst.StrRb).Garbage);
                                                                                               ^ machine.adb:532:96:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign__aggr__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strrb_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b)) )))))))) )); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B714b__T729b.attr__constrained = true } in (
                (let temp___1016 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content ((Machine__integerval__rep.to_rep (Machine__dataval.rec__machine__dataval__value (Machine__dataval.__split_fields (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__strra (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) + (Instruction__offset__rep.to_rep (Instruction__instr.rec__instruction__instr__stroffs (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))) in (
                 (  assert {  (#"machine.adb" 531 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:531:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:354" "comment:            Mem(Addr(Regs(Inst.StrRa).Value + IntegerVal(Inst.StrOffs))) := (State => Initialized,
                                                                         ^ machine.adb:531:74:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__mem_assign" (if ((Machine__dataval.attr__constrained temp___1016)) then (
                  ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1015)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1016)))) else true) )) };
                 temp___1015 )))
                ))
                 ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__mem.mem.Array__Int__Machine__dataval.map__content ((Machine__integerval__rep.to_rep (Machine__dataval.rec__machine__dataval__value (Machine__dataval.__split_fields (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__strra (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) + (Instruction__offset__rep.to_rep (Instruction__instr.rec__instruction__instr__stroffs (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C709b.c709b))))))) })) )) )) else (
                ())) )))) );
              ( "GP_Sloc:machine.adb:534:13:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 534 0 0# #"machine.adb" 534 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 534 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:534:43:inlined:machine.adb:641:16:inlined:machine.adb:807:17" "GP_Id:370" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:534:43:inlined:machine.adb:641:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:535:14:inlined:machine.adb:641:16:inlined:machine.adb:807:17" (#"machine.adb" 535 0 0# #"machine.adb" 535 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 8)) then (
             ( ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# ()) );
             ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# (#"machine.adb" 643 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 643 0 0# assume { #"machine.adb" 643 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b) }))
             ;
             #"machine.adb" 643 0 0# assume { #"machine.adb" 643 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# ()) );
             ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# ()) );
             ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# ()) );
             ( "GP_Sloc:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 643 0 0# ()) );
             ( "GP_Sloc:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# ()) );
             ( "GP_Sloc:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# (#"machine.adb" 542 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b in (
              #"machine.adb" 542 0 0# assume { #"machine.adb" 542 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b.c735b) }))
             ;
             #"machine.adb" 542 0 0# assume { #"machine.adb" 542 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b.c735b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# ()) );
             ( "GP_Sloc:machine.adb:542:41:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# ()) );
             ( "GP_Sloc:machine.adb:542:41:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# (#"machine.adb" 542 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 542 0 0# assume { #"machine.adb" 542 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b.c739b) }))
             ;
             #"machine.adb" 542 0 0# assume { #"machine.adb" 542 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b.c739b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:542:41:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# ()) );
             ( "GP_Sloc:machine.adb:542:7:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 542 0 0# (if (not ( (Boolean.orb((Boolean.orb(((Instruction__offset__rep.to_rep((#"machine.adb" 343 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:343:19:inlined:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:376" "comment:             (Inst.MovOffs < Offset'First) or
                  ^ machine.adb:343:19:inlined:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__or__typeconv__or__cmp__selectcomp" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b.c735b)) )))) < ( -65535 ))) (((Instruction__offset__rep.to_rep((#"machine.adb" 345 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__or__typeconv__or__cmp__selectcomp" "GP_Sloc:machine.adb:345:19:inlined:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:377" "comment:             (Inst.MovOffs > Offset'Last);
                  ^ machine.adb:345:19:inlined:machine.adb:542:15:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C735b.c735b)) )))) > 65535)))) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b.c739b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__C739b.c739b < 0))))) )) then (
              ( ( "GP_Sloc:machine.adb:544:27:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 544 0 0# #"machine.adb" 544 0 0# Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 544 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:544:19:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:374" "comment:         Regs(Inst.MovRd) := (State => Initialized,
                  ^ machine.adb:544:19:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__movrd_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b)) ))))) ({ ( (let temp___1019 = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b.__split_discrs = { Machine__dataval.rec__machine__dataval__state = (Machine__datavalstates__rep.of_rep(1)) }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b.__split_fields = { Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b.rec__machine__dataval__value = (Machine__integerval__rep.of_rep((Instruction__offset__rep.to_rep((#"machine.adb" 545 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:545:55:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:372" "comment:                              Value => IntegerVal(Inst.MovOffs));
                                                      ^ machine.adb:545:55:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__regs_assign__aggr__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b)) )))))); Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b.rec__machine__dataval__garbage = Machine__integerval.dummy }; Machine__detectinvalidbehaviour__R573b__B577b__L_2__B734b__T743b.attr__constrained = true } in (
              (let temp___1020 = (Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__movrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b)))) in (
               (  assert {  (#"machine.adb" 544 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:544:27:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:373" "comment:         Regs(Inst.MovRd) := (State => Initialized,
                          ^ machine.adb:544:27:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__regs_assign" (if ((Machine__dataval.attr__constrained temp___1020)) then (
                ((Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1019)) = (Machine__dataval.rec__machine__dataval__state (Machine__dataval.__split_discrs temp___1020)))) else true) )) };
               temp___1019 )))
              ))
               ) with Machine__dataval.attr__constrained = (Machine__dataval.attr__constrained((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content (Instruction__reg__rep.to_rep (Instruction__instr.rec__instruction__instr__movrd (Instruction__instr.__split_fields Machine__detectinvalidbehaviour__R573b__B577b__L_2__C730b.c730b)))))) })) )) );
              ( "GP_Sloc:machine.adb:546:13:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 546 0 0# #"machine.adb" 546 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 546 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:546:43:inlined:machine.adb:643:16:inlined:machine.adb:807:17" "GP_Id:375" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:546:43:inlined:machine.adb:643:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:547:14:inlined:machine.adb:643:16:inlined:machine.adb:807:17" (#"machine.adb" 547 0 0# #"machine.adb" 547 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 5)) then (
             ( ( "GP_Sloc:machine.adb:645:16:inlined:machine.adb:807:17" (#"machine.adb" 645 0 0# ()) );
             ( "GP_Sloc:machine.adb:645:16:inlined:machine.adb:807:17" (#"machine.adb" 645 0 0# ()) );
             ( "GP_Sloc:machine.adb:645:16:inlined:machine.adb:807:17" (#"machine.adb" 645 0 0# ()) );
             ( "GP_Sloc:machine.adb:554:11:inlined:machine.adb:645:16:inlined:machine.adb:807:17" (#"machine.adb" 554 0 0# #"machine.adb" 554 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) );
             ( "GP_Sloc:machine.adb:646:16:inlined:machine.adb:807:17" (#"machine.adb" 646 0 0# #"machine.adb" 646 0 0# raise Machine__detectinvalidbehaviour__R573b__B577b__L_2.L_2) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 9)) then (
             ( ( "GP_Sloc:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 648 0 0# ()) );
             ( "GP_Sloc:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 648 0 0# (#"machine.adb" 648 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 648 0 0# assume { #"machine.adb" 648 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b.c746b) }))
             ;
             #"machine.adb" 648 0 0# assume { #"machine.adb" 648 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b.c746b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 648 0 0# ()) );
             ( "GP_Sloc:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 648 0 0# ()) );
             ( "GP_Sloc:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 648 0 0# ()) );
             ( "GP_Sloc:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# ()) );
             ( "GP_Sloc:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# (#"machine.adb" 560 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b.c746b in (
              #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b.c750b) }))
             ;
             #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b.c750b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# (#"machine.adb" 560 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b.c751b) }))
             ;
             #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b.c751b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# ()) );
             ( "GP_Sloc:machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# ()) );
             ( "GP_Sloc:machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# (#"machine.adb" 560 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b.c755b) }))
             ;
             #"machine.adb" 560 0 0# assume { #"machine.adb" 560 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b.c755b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# (#"machine.adb" 560 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 560 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:378" "comment:      if not (DetectInvalidJmp(Inst, PC) or DetectInvalidPC(PC, Inst.JmpOffs)) then
                                            ^ machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__C756b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b.c746b)) )))) in (
               assume {  (machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b.c756b) }))
             ;
              assume {  (Instruction__offset___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b.c756b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:560:45:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# ()) );
             ( "GP_Sloc:machine.adb:560:7:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 560 0 0# (if (not ( (Boolean.orb((Boolean.orb((Boolean.orb(((Instruction__offset__rep.to_rep((#"machine.adb" 352 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:352:27:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:381" "comment:             (Integer(Inst.JmpOffs) = 0) or
                          ^ machine.adb:352:27:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__or__typeconv__or__or__cmp__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b.c750b)) )))) = 0)) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b.c751b + (Instruction__offset__rep.to_rep((#"machine.adb" 354 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:354:41:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:382" "comment:             (Integer(PC) + Integer(Inst.JmpOffs) < Integer(ProgramCounter'First)) or
                                        ^ machine.adb:354:41:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__or__typeconv__or__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b.c750b)) ))))) < 1)))) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C751b.c751b + (Instruction__offset__rep.to_rep((#"machine.adb" 356 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:356:41:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:383" "comment:             (Integer(PC) + Integer(Inst.JmpOffs) > Integer(ProgramCounter'Last));
                                        ^ machine.adb:356:41:inlined:machine.adb:560:15:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__or__typeconv__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C750b.c750b)) ))))) > 65536)))) ((Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b.c755b > (65536 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b.c756b))) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C755b.c755b < (1 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B749b__C756b.c756b)))))) )) then (
              ( ( "GP_Sloc:machine.adb:561:13:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 561 0 0# #"machine.adb" 561 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 561 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:561:43:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:380" "comment:         PC := ProgramCounter(Integer(PC) + Integer(Inst.JmpOffs));
                                          ^ machine.adb:561:43:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + (Instruction__offset__rep.to_rep((#"machine.adb" 561 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:561:57:inlined:machine.adb:648:16:inlined:machine.adb:807:17" "GP_Id:379" "comment:         PC := ProgramCounter(Integer(PC) + Integer(Inst.JmpOffs));
                                                        ^ machine.adb:561:57:inlined:machine.adb:648:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C746b.c746b)) ))))))) )) )) );
              ( "GP_Sloc:machine.adb:562:14:inlined:machine.adb:648:16:inlined:machine.adb:807:17" (#"machine.adb" 562 0 0# #"machine.adb" 562 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained })))))) = 10)) then (
             ( ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# ()) );
             ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# (#"machine.adb" 650 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__R573b__B577b__inst.inst__attr__constrained } in (
              #"machine.adb" 650 0 0# assume { #"machine.adb" 650 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b) }))
             ;
             #"machine.adb" 650 0 0# assume { #"machine.adb" 650 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# ()) );
             ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# ()) );
             ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# ()) );
             ( "GP_Sloc:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 650 0 0# ()) );
             ( "GP_Sloc:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# ()) );
             ( "GP_Sloc:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# (#"machine.adb" 569 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b in (
              #"machine.adb" 569 0 0# assume { #"machine.adb" 569 0 0# ({ ( machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b) }))
             ;
             #"machine.adb" 569 0 0# assume { #"machine.adb" 569 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# (#"machine.adb" 569 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 569 0 0# assume { #"machine.adb" 569 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b) }))
             ;
             #"machine.adb" 569 0 0# assume { #"machine.adb" 569 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# ()) );
             ( "GP_Sloc:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# ()) );
             ( "GP_Sloc:machine.adb:569:7:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 569 0 0# (if (not ( (Boolean.orb(( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 363 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:363:24:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:404" "comment:             (Regs(Inst.JzRa).State = Initialized and then (
                       ^ machine.adb:363:24:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))))))) = 1) && (Boolean.orb(( ((Machine__integerval__rep.to_rep((#"machine.adb" 365 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:365:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:406" "comment:                (Regs(Inst.JzRa).Value = 0 and then (
                                ^ machine.adb:365:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 365 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:365:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:405" "comment:                (Regs(Inst.JzRa).Value = 0 and then (
                          ^ machine.adb:365:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))) )))) = 0) && (Boolean.orb((Boolean.orb(((Instruction__offset__rep.to_rep((#"machine.adb" 367 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:367:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:407" "comment:                   (Integer(Inst.JzOffs) = 0) or
                                ^ machine.adb:367:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__or__cmp__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))) = 0)) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + (Instruction__offset__rep.to_rep((#"machine.adb" 369 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:369:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:408" "comment:                   (Integer(PC) + Integer(Inst.JzOffs) < Integer(ProgramCounter'First)) or
                                              ^ machine.adb:369:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) ))))) < 1)))) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + (Instruction__offset__rep.to_rep((#"machine.adb" 371 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:371:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:409" "comment:                   (Integer(PC) + Integer(Inst.JzOffs) > Integer(ProgramCounter'Last))
                                              ^ machine.adb:371:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) ))))) > 65536))) )) (( ((Machine__integerval__rep.to_rep((#"machine.adb" 374 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:374:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:411" "comment:                (Regs(Inst.JzRa).Value /= 0 and then (
                                ^ machine.adb:374:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 374 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:374:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:410" "comment:                (Regs(Inst.JzRa).Value /= 0 and then (
                          ^ machine.adb:374:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))) )))) <> 0) && (Boolean.orb(((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + 1) < 1)) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + 1) > 65536))) ))) )) (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 382 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:382:24:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:412" "comment:             (Regs(Inst.JzRa).State = Uninitialized and then (
                       ^ machine.adb:382:24:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))))))) = 0) && (Boolean.orb(( ((Machine__integerval__rep.to_rep((#"machine.adb" 384 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:384:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:414" "comment:                (Regs(Inst.JzRa).Garbage = 0 and then (
                                ^ machine.adb:384:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 384 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:384:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:413" "comment:                (Regs(Inst.JzRa).Garbage = 0 and then (
                          ^ machine.adb:384:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))) )))) = 0) && (Boolean.orb((Boolean.orb(((Instruction__offset__rep.to_rep((#"machine.adb" 386 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__or__cmp__typeconv__selectcomp" "GP_Sloc:machine.adb:386:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:415" "comment:                   (Integer(Inst.JzOffs) = 0) or
                                ^ machine.adb:386:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))) = 0)) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + (Instruction__offset__rep.to_rep((#"machine.adb" 388 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__or__cmp__add__typeconv__selectcomp" "GP_Sloc:machine.adb:388:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:416" "comment:                   (Integer(PC) + Integer(Inst.JzOffs) < Integer(ProgramCounter'First)) or
                                              ^ machine.adb:388:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) ))))) < 1)))) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + (Instruction__offset__rep.to_rep((#"machine.adb" 390 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__or__cmp__add__typeconv__selectcomp" "GP_Sloc:machine.adb:390:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:417" "comment:                   (Integer(PC) + Integer(Inst.JzOffs) > Integer(ProgramCounter'Last))
                                              ^ machine.adb:390:47:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) ))))) > 65536))) )) (( ((Machine__integerval__rep.to_rep((#"machine.adb" 393 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:393:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:419" "comment:                (Regs(Inst.JzRa).Garbage /= 0 and then (
                                ^ machine.adb:393:33:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 393 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:393:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:418" "comment:                (Regs(Inst.JzRa).Garbage /= 0 and then (
                          ^ machine.adb:393:27:inlined:machine.adb:569:14:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C765b.c765b)) )))))))) )))) <> 0) && (Boolean.orb(((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + 1) < 1)) (((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C766b.c766b + 1) > 65536))) ))) ))) )) then (
              ( "GP_Sloc:machine.adb:571:10:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 571 0 0# (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 571 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:571:23:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:401" "comment:         if (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value = 0) then
                      ^ machine.adb:571:23:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))))))) = 1) && ((Machine__integerval__rep.to_rep((#"machine.adb" 571 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp" "GP_Sloc:machine.adb:571:76:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:403" "comment:         if (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value = 0) then
                                                                           ^ machine.adb:571:76:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 571 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:571:70:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:402" "comment:         if (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value = 0) then
                                                                     ^ machine.adb:571:70:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))) )))) = 0) )) then (
               ( ( "GP_Sloc:machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 572 0 0# ()) );
               ( "GP_Sloc:machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 572 0 0# (#"machine.adb" 572 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
                #"machine.adb" 572 0 0# assume { #"machine.adb" 572 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b.c771b) }))
               ;
               #"machine.adb" 572 0 0# assume { #"machine.adb" 572 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b.c771b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 572 0 0# (#"machine.adb" 572 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 572 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:398" "comment:            if not DetectInvalidPC(PC, Inst.JzOffs) then
                   ^ machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__C772b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))) in (
                 assume {  (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b.c772b) }))
               ;
                assume {  (Instruction__offset___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b.c772b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:572:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 572 0 0# ()) );
               ( "GP_Sloc:machine.adb:572:13:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 572 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b.c771b > (65536 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b.c772b))) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C771b.c771b < (1 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C772b.c772b)))) )) then (
                ( ( "GP_Sloc:machine.adb:573:19:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 573 0 0# #"machine.adb" 573 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 573 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:573:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:400" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                ^ machine.adb:573:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + (Instruction__offset__rep.to_rep((#"machine.adb" 573 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add__typeconv__selectcomp" "GP_Sloc:machine.adb:573:63:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:399" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                              ^ machine.adb:573:63:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) ))))))) )) )) );
                ( "GP_Sloc:machine.adb:574:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 574 0 0# #"machine.adb" 574 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                ()))) ) )) else (
               ( "GP_Sloc:machine.adb:577:10:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (if (( ((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 577 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:577:26:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:395" "comment:         elsif (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value /= 0) then
                         ^ machine.adb:577:26:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))))))) = 1) && ((Machine__integerval__rep.to_rep((#"machine.adb" 577 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:577:79:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:397" "comment:         elsif (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value /= 0) then
                                                                              ^ machine.adb:577:79:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__value_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 577 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__andthen__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:577:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:396" "comment:         elsif (Regs(Inst.JzRa).State = Initialized) and then (Regs(Inst.JzRa).Value /= 0) then
                                                                        ^ machine.adb:577:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))) )))) <> 0) )) then (
                ( ( "GP_Sloc:machine.adb:578:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 578 0 0# ()) );
                ( "GP_Sloc:machine.adb:578:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 578 0 0# (#"machine.adb" 578 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
                 #"machine.adb" 578 0 0# assume { #"machine.adb" 578 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b.c776b) }))
                ;
                #"machine.adb" 578 0 0# assume { #"machine.adb" 578 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b.c776b True False True True) } ))) );
                ( "GP_Sloc:machine.adb:578:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 578 0 0# ()) );
                ( "GP_Sloc:machine.adb:578:13:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 578 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b.c776b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C776b.c776b < 0))) )) then (
                 ( ( "GP_Sloc:machine.adb:579:19:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 579 0 0# #"machine.adb" 579 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 579 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:579:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:394" "comment:               PC := ProgramCounter(Integer(PC) + Integer(1));
                                                ^ machine.adb:579:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
                 ( "GP_Sloc:machine.adb:580:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 580 0 0# #"machine.adb" 580 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                 ()))) ) )) else (
                ( "GP_Sloc:machine.adb:583:10:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (if ((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 583 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:583:25:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:391" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage = 0 then
                        ^ machine.adb:583:25:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))))))) = 0)) (((Machine__integerval__rep.to_rep((#"machine.adb" 583 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp" "GP_Sloc:machine.adb:583:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:393" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage = 0 then
                                                                        ^ machine.adb:583:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 583 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:583:67:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:392" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage = 0 then
                                                                  ^ machine.adb:583:67:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))) )))) = 0)))) then (
                 ( ( "GP_Sloc:machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 584 0 0# ()) );
                 ( "GP_Sloc:machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 584 0 0# (#"machine.adb" 584 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
                  #"machine.adb" 584 0 0# assume { #"machine.adb" 584 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b.c780b) }))
                 ;
                 #"machine.adb" 584 0 0# assume { #"machine.adb" 584 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b.c780b True False True True) } ))) );
                 ( "GP_Sloc:machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 584 0 0# (#"machine.adb" 584 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 584 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:388" "comment:            if not DetectInvalidPC(PC, Inst.JzOffs) then
                   ^ machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__C781b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))) in (
                   assume {  (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b.c781b) }))
                 ;
                  assume {  (Instruction__offset___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b.c781b True False True True) } ))) );
                 ( "GP_Sloc:machine.adb:584:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 584 0 0# ()) );
                 ( "GP_Sloc:machine.adb:584:13:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 584 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b.c780b > (65536 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b.c781b))) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C780b.c780b < (1 - Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C781b.c781b)))) )) then (
                  ( ( "GP_Sloc:machine.adb:585:19:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 585 0 0# #"machine.adb" 585 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 585 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:585:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:390" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                ^ machine.adb:585:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + (Instruction__offset__rep.to_rep((#"machine.adb" 585 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:585:63:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:389" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                              ^ machine.adb:585:63:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) ))))))) )) )) );
                  ( "GP_Sloc:machine.adb:586:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 586 0 0# #"machine.adb" 586 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                  ()))) ) )) else (
                 ( "GP_Sloc:machine.adb:589:10:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (if ((Boolean.andb(((Machine__datavalstates__rep.to_rep((Machine__dataval.rec__machine__dataval__state((Machine__dataval.__split_discrs((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 589 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:589:25:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:385" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage /= 0 then
                        ^ machine.adb:589:25:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))))))) = 0)) (((Machine__integerval__rep.to_rep((#"machine.adb" 589 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:589:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:387" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage /= 0 then
                                                                        ^ machine.adb:589:73:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp" (Machine__dataval.rec__machine__dataval__garbage_((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__R573b__B577b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 589 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__and__cmp__selectcomp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:589:67:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:386" "comment:         elsif Regs(Inst.JzRa).State = Uninitialized and Regs(Inst.JzRa).Garbage /= 0 then
                                                                  ^ machine.adb:589:67:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__R573b__B577b__L_2__C760b.c760b)) )))))))) )))) <> 0)))) then (
                  ( ( "GP_Sloc:machine.adb:590:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 590 0 0# ()) );
                  ( "GP_Sloc:machine.adb:590:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 590 0 0# (#"machine.adb" 590 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
                   #"machine.adb" 590 0 0# assume { #"machine.adb" 590 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b.c785b) }))
                  ;
                  #"machine.adb" 590 0 0# assume { #"machine.adb" 590 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b.c785b True False True True) } ))) );
                  ( "GP_Sloc:machine.adb:590:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 590 0 0# ()) );
                  ( "GP_Sloc:machine.adb:590:13:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 590 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b.c785b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B764b__C785b.c785b < 0))) )) then (
                   ( ( "GP_Sloc:machine.adb:591:19:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 591 0 0# #"machine.adb" 591 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 591 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:591:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17" "GP_Id:384" "comment:               PC := ProgramCounter(Integer(PC) + Integer(1));
                                                ^ machine.adb:591:49:inlined:machine.adb:650:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
                   ( "GP_Sloc:machine.adb:592:20:inlined:machine.adb:650:16:inlined:machine.adb:807:17" (#"machine.adb" 592 0 0# #"machine.adb" 592 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                   ()))) ) )) else (
                  ())) ))) ))) )))) )) else (
              ()))) ) )) else (
             ( ( "GP_Sloc:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 652 0 0# ()) );
             ( "GP_Sloc:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 652 0 0# ()) );
             ( "GP_Sloc:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 652 0 0# ()) );
             ( "GP_Sloc:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 652 0 0# ()) );
             ( "GP_Sloc:machine.adb:601:14:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 601 0 0# ()) );
             ( "GP_Sloc:machine.adb:601:14:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 601 0 0# (#"machine.adb" 601 0 0# ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b__assume = Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content in (
              #"machine.adb" 601 0 0# assume { #"machine.adb" 601 0 0# (machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b__assume = Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b.c792b) }))
             ;
             #"machine.adb" 601 0 0# assume { #"machine.adb" 601 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b.c792b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:601:14:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 601 0 0# ()) );
             ( "GP_Sloc:machine.adb:601:7:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 601 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b.c792b > 65535)) ((Machine__detectinvalidbehaviour__R573b__B577b__L_2__B791b__C792b.c792b < 0))) )) then (
              ( ( "GP_Sloc:machine.adb:602:13:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 602 0 0# #"machine.adb" 602 0 0# Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content <- ( (#"machine.adb" 602 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__case__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:602:43:inlined:machine.adb:652:16:inlined:machine.adb:807:17" "GP_Id:420" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:602:43:inlined:machine.adb:652:16:inlined:machine.adb:807:17:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__pc.pc.int__content + 1))) )) )) );
              ( "GP_Sloc:machine.adb:603:14:inlined:machine.adb:652:16:inlined:machine.adb:807:17" (#"machine.adb" 603 0 0# #"machine.adb" 603 0 0# Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
              ()))) ) )))) );
            ( "GP_Sloc:machine.adb:656:10:inlined:machine.adb:807:17" (#"machine.adb" 656 0 0# (if (((Boolean.to_int(Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content)) = (Boolean.to_int((Boolean.of_int(1)))))) then (
             #"machine.adb" 656 0 0# raise Machine__detectinvalidbehaviour__R573b__B577b__L_2.L_2))) );
            ( "GP_Sloc:machine.adb:657:21:inlined:machine.adb:807:17" (#"machine.adb" 657 0 0# #"machine.adb" 657 0 0# Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content <- ( (#"machine.adb" 657 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:657:35:inlined:machine.adb:807:17" "GP_Id:421" "comment:         CycleCount := CycleCount + 1;
                                  ^ machine.adb:657:35:inlined:machine.adb:807:17:VC_OVERFLOW_CHECK" "GP_Shape:return__B577b_declblk__L_2_while__cyclecount_assign__add" (Standard__integer.range_check_((Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content + 1))) )) )) );
            () (* Check for the exit condition and loop statements appearing before the loop invariant of loop machine.adb:619 instantiated at machine.adb:807 *)
            ;
            (if (not ( (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b = Machine__detectinvalidbehaviour__R573b__C575b.c575b in (
            (let machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b = Machine__detectinvalidbehaviour__R573b__B577b__cyclecount.cyclecount.int__content in (
             not ( not ( (machine__detectinvalidbehaviour__R573b__B577b__L_2__C584b < machine__detectinvalidbehaviour__R573b__B577b__L_2__C585b) ) )))
            ))
             )) then (
              raise Machine__detectinvalidbehaviour__R573b__B577b__L_2.L_2)) )
           done )))
           )))
          )))
         )))
        )))
       )))
      )
    with
     Machine__detectinvalidbehaviour__R573b__B577b__L_2.L_2 -> ()
    end)) )) );
   ( "GP_Sloc:machine.adb:807:17" (#"machine.adb" 659 0 0# #"machine.adb" 659 0 0# Machine__detectinvalidbehaviour__R573b__ret.ret.bool__content <- ( Machine__detectinvalidbehaviour__R573b__B577b__ret.ret.bool__content )) ) )) );
    machine__detectinvalidbehaviour__result.bool__content <- ( Machine__detectinvalidbehaviour__R573b__ret.ret.bool__content );
    raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   abstract ensures {true}(let _ = True in (
   ()))
   end ;
  machine__detectinvalidbehaviour__result.bool__content )
end
