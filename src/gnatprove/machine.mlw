(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_short_integer__ref =
  { mutable short_short_integer__content "model_trace:" "name:" : short_short_integer }
 
 function short_short_integer__ref___projection 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer__rep
 use        Standard__short_short_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__short_short_integer.short_short_integer) : int =
  (Standard__short_short_integer.short_short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_short_integer.short_short_integer, 
 predicate in_range = Standard__short_short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer =
  < range -32768 32767 >
 
 function first 
   : int =
  ( -32768 )
 
 function last 
   : int =
  32767
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_integer__ref =
  { mutable short_integer__content "model_trace:" "name:" : short_integer }
 
 function short_integer__ref___projection 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer__rep
 use        Standard__short_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__short_integer.short_integer) : int =
  (Standard__short_integer.short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_integer.short_integer, 
 predicate in_range = Standard__short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer__ref =
  { mutable integer__content "model_trace:" "name:" : integer }
 
 function integer__ref___projection 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc 
   (x : integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
 use        Standard__integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer.integer) : int =
  (Standard__integer.integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer.integer, 
 predicate in_range = Standard__integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_integer__ref =
  { mutable long_integer__content "model_trace:" "name:" : long_integer }
 
 function long_integer__ref___projection 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer__rep
 use        Standard__long_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__long_integer.long_integer) : int =
  (Standard__long_integer.long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_integer.long_integer, 
 predicate in_range = Standard__long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_long_integer__ref =
  { mutable long_long_integer__content "model_trace:" "name:" : long_long_integer }
 
 function long_long_integer__ref___projection 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer__rep
 use        Standard__long_long_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__long_long_integer.long_long_integer) : int =
  (Standard__long_long_integer.long_long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_long_integer.long_long_integer, 
 predicate in_range = Standard__long_long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural =
  < range 0 2147483647 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type natural__ref =
  { mutable natural__content "model_trace:" "name:" : natural }
 
 function natural__ref___projection 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc 
   (x : natural__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
 use        Standard__natural
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__natural.natural) : int =
  (Standard__natural.natural'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__natural.natural, 
 predicate in_range = Standard__natural.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive =
  < range 1 2147483647 >
 
 function first 
   : int =
  1
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive__ref =
  { mutable positive__content "model_trace:" "name:" : positive }
 
 function positive__ref___projection 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc 
   (x : positive__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
 use        Standard__positive
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__positive.positive) : int =
  (Standard__positive.positive'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__positive.positive, 
 predicate in_range = Standard__positive.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type short_float 
 
 function first 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range 
   (x : Float32.t)  =
  (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = short_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_float__ref =
  { mutable short_float__content "model_trace:" "name:" : short_float }
 
 function short_float__ref___projection 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float__rep
 use        Standard__short_float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__short_float.short_float, 
 predicate in_range = Standard__short_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type float 
 
 function first 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range 
   (x : Float32.t)  =
  (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type float__ref =
  { mutable float__content "model_trace:" "name:" : float }
 
 function float__ref___projection 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc 
   (x : float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float__rep
 use        Standard__float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__float.float, 
 predicate in_range = Standard__float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type long_float 
 
 function first 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range 
   (x : Float64.t)  =
  (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_float__ref =
  { mutable long_float__content "model_trace:" "name:" : long_float }
 
 function long_float__ref___projection 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float__rep
 use        Standard__long_float
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Standard__long_float.long_float, 
 predicate in_range = Standard__long_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  255
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type character__ref =
  { mutable character__content "model_trace:" "name:" : character }
 
 function character__ref___projection 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc 
   (x : character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
 use        Standard__character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__character.character, 
 predicate in_range = Standard__character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_character__ref =
  { mutable wide_character__content "model_trace:" "name:" : wide_character }
 
 function wide_character__ref___projection 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character__rep
 use        Standard__wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_character.wide_character, 
 predicate in_range = Standard__wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_wide_character__ref =
  { mutable wide_wide_character__content "model_trace:" "name:" : wide_wide_character }
 
 function wide_wide_character__ref___projection 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character__rep
 use        Standard__wide_wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_wide_character.wide_wide_character, 
 predicate in_range = Standard__wide_wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_91   : int.
   (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
    ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_91   : int.
    (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
     ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__character.component_type, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character__rep
 use        Array__Int__Standard__character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__character.component_type, 
 function to_rep = Standard__character__rep.to_rep, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get, 
 function bool_eq = Array__Int__Standard__character.bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__integer__rep

 type component_type =
  Standard__character.character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string 
   (x : Main.__image) : string
 
 function from_string 
   (x : string) : Main.__image
 
 type string__ref =
  { mutable string__content "model_trace:" "name:" : string }
 
 function string__ref___projection 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character
 use        Standard__wide_character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_98   : int.
   (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
    ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_98   : int.
    (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
     ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__wide_character.component_type, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character__rep
 use        Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__wide_character.component_type, 
 function to_rep = Standard__wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_character.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_character

 type component_type =
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref =
  { mutable wide_string__content "model_trace:" "name:" : wide_string }
 
 function wide_string__ref___projection 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character
 use        Standard__wide_wide_character__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_105   : int.
   (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
    ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_105   : int.
    (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
     ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_wide_character__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_wide_character_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character__rep
 use        Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 function to_rep = Standard__wide_wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_wide_character.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_wide_character

 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref =
  { mutable wide_wide_string__content "model_trace:" "name:" : wide_wide_string }
 
 function wide_wide_string__ref___projection 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for fixed-point operation for type at system.ads:1, created in Why.Gen.Scalars.Create_Fixed_Point_Theory_If_Needed *)
module Fixed_Point__1_1000000000
 use import "_gnatprove_standard".Main
 use import "int".Int

 function num_small 
   : int =
  1
 
 function den_small 
   : int =
  1000000000
 
 clone export "ada__model".Fixed_Point_Rep with
 function num_small = num_small, 
 function den_small = den_small

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration 
 
 function num_small 
   : Main.__fixed =
  1
 
 function den_small 
   : Main.__fixed =
  1000000000
 
 function first 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type duration__ref =
  { mutable duration__content "model_trace:" "name:" : duration }
 
 function duration__ref___projection 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref =
  { mutable integer_8__content "model_trace:" "name:" : integer_8 }
 
 function integer_8__ref___projection 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8__rep
 use        Standard__integer_8
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_8.integer_8) : int =
  (Standard__integer_8.integer_8'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_8.integer_8, 
 predicate in_range = Standard__integer_8.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 =
  < range -32768 32767 >
 
 function first 
   : int =
  ( -32768 )
 
 function last 
   : int =
  32767
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref =
  { mutable integer_16__content "model_trace:" "name:" : integer_16 }
 
 function integer_16__ref___projection 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16__rep
 use        Standard__integer_16
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_16.integer_16) : int =
  (Standard__integer_16.integer_16'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_16.integer_16, 
 predicate in_range = Standard__integer_16.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref =
  { mutable integer_32__content "model_trace:" "name:" : integer_32 }
 
 function integer_32__ref___projection 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32__rep
 use        Standard__integer_32
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_32.integer_32) : int =
  (Standard__integer_32.integer_32'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_32.integer_32, 
 predicate in_range = Standard__integer_32.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref =
  { mutable integer_64__content "model_trace:" "name:" : integer_64 }
 
 function integer_64__ref___projection 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64__rep
 use        Standard__integer_64
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__integer_64.integer_64) : int =
  (Standard__integer_64.integer_64'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_64.integer_64, 
 predicate in_range = Standard__integer_64.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 function first 
   : int =
  ( -9223372036854775808 )
 
 function last 
   : int =
  9223372036854775807
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type universal_integer__ref =
  { mutable universal_integer__content "model_trace:" "name:" : universal_integer }
 
 function universal_integer__ref___projection 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer__rep
 use        Standard__universal_integer
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Standard__universal_integer.universal_integer) : int =
  (Standard__universal_integer.universal_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__universal_integer.universal_integer, 
 predicate in_range = Standard__universal_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Instruction__opcode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type opcode 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  10
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = opcode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type opcode__ref =
  { mutable opcode__content "model_trace:" "name:" : opcode }
 
 function opcode__ref___projection 
   (a : opcode__ref) : opcode =
  a.opcode__content
 
 meta "model_projection" function opcode__ref___projection
 
 meta "inline : no" function opcode__ref___projection
 
 val opcode__havoc 
   (x : opcode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Instruction__opcode__rep
 use        Instruction__opcode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__opcode.opcode, 
 predicate in_range = Instruction__opcode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "num_regs" defined at instruction.ads:8, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__num_regs
 use import "_gnatprove_standard".Main

 function num_regs #"instruction.ads" 8 0 0#"model" "model_trace:5683" "name:NUM_REGS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TregB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tregB =
  < range -128 127 >
 
 function first 
   : int =
  ( -128 )
 
 function last 
   : int =
  127
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tregB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tregB__ref =
  { mutable tregB__content "model_trace:" "name:" : tregB }
 
 function tregB__ref___projection 
   (a : tregB__ref) : tregB =
  a.tregB__content
 
 meta "model_projection" function tregB__ref___projection
 
 meta "inline : no" function tregB__ref___projection
 
 val tregB__havoc 
   (x : tregB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TregB__rep
 use        Instruction__TregB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__TregB.tregB) : int =
  (Instruction__TregB.tregB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__TregB.tregB, 
 predicate in_range = Instruction__TregB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__reg
 use import "_gnatprove_standard".Main
 use import "int".Int

 type reg =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = reg, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type reg__ref =
  { mutable reg__content "model_trace:" "name:" : reg }
 
 function reg__ref___projection 
   (a : reg__ref) : reg =
  a.reg__content
 
 meta "model_projection" function reg__ref___projection
 
 meta "inline : no" function reg__ref___projection
 
 val reg__havoc 
   (x : reg__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Instruction__reg__rep
 use        Instruction__reg
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__reg.reg) : int =
  (Instruction__reg.reg'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__reg.reg, 
 predicate in_range = Instruction__reg.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "memory_size" defined at instruction.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"instruction.ads" 15 0 0#"model" "model_trace:5706" "name:MEMORY_SIZE" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TaddrB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type taddrB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = taddrB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type taddrB__ref =
  { mutable taddrB__content "model_trace:" "name:" : taddrB }
 
 function taddrB__ref___projection 
   (a : taddrB__ref) : taddrB =
  a.taddrB__content
 
 meta "model_projection" function taddrB__ref___projection
 
 meta "inline : no" function taddrB__ref___projection
 
 val taddrB__havoc 
   (x : taddrB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__TaddrB__rep
 use        Instruction__TaddrB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__TaddrB.taddrB) : int =
  (Instruction__TaddrB.taddrB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__TaddrB.taddrB, 
 predicate in_range = Instruction__TaddrB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__addr
 use import "_gnatprove_standard".Main
 use import "int".Int

 type addr =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = addr, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type addr__ref =
  { mutable addr__content "model_trace:" "name:" : addr }
 
 function addr__ref___projection 
   (a : addr__ref) : addr =
  a.addr__content
 
 meta "model_projection" function addr__ref___projection
 
 meta "inline : no" function addr__ref___projection
 
 val addr__havoc 
   (x : addr__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Instruction__addr__rep
 use        Instruction__addr
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__addr.addr) : int =
  (Instruction__addr.addr'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__addr.addr, 
 predicate in_range = Instruction__addr.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__ToffsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type toffsetB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = toffsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type toffsetB__ref =
  { mutable toffsetB__content "model_trace:" "name:" : toffsetB }
 
 function toffsetB__ref___projection 
   (a : toffsetB__ref) : toffsetB =
  a.toffsetB__content
 
 meta "model_projection" function toffsetB__ref___projection
 
 meta "inline : no" function toffsetB__ref___projection
 
 val toffsetB__havoc 
   (x : toffsetB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__ToffsetB__rep
 use        Instruction__ToffsetB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__ToffsetB.toffsetB) : int =
  (Instruction__ToffsetB.toffsetB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__ToffsetB.toffsetB, 
 predicate in_range = Instruction__ToffsetB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type offset =
  < range -65535 65535 >
 
 function first 
   : int =
  ( -65535 )
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type offset__ref =
  { mutable offset__content "model_trace:" "name:" : offset }
 
 function offset__ref___projection 
   (a : offset__ref) : offset =
  a.offset__content
 
 meta "model_projection" function offset__ref___projection
 
 meta "inline : no" function offset__ref___projection
 
 val offset__havoc 
   (x : offset__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Instruction__offset__rep
 use        Instruction__offset
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Instruction__offset.offset) : int =
  (Instruction__offset.offset'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Instruction__offset.offset, 
 predicate in_range = Instruction__offset.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "instr" defined at instruction.ads:25, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg__rep
 use        Instruction__offset
 use        Instruction__offset__rep

 type __split_discrs =
  { rec__instruction__instr__op "model_trace:.5753" "name:Op" : Instruction__opcode.opcode }
 
 function __split_discrs___projection 
   (a : __split_discrs) : Instruction__opcode.opcode =
  a.rec__instruction__instr__op
 
 meta "model_projection" function __split_discrs___projection
 
 meta "inline : no" function __split_discrs___projection
 
 type __split_discrs__ref =
  { mutable __split_discrs__content "model_trace:" "name:" : __split_discrs }
 
 function __split_discrs__ref___projection 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___projection
 
 meta "inline : no" function __split_discrs__ref___projection
 
 val __split_discrs__havoc 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields =
  { rec__instruction__instr__addrd "model_trace:.5774" "name:AddRd" : Instruction__reg.reg; rec__instruction__instr__addrs1 "model_trace:.5784" "name:AddRs1" : Instruction__reg.reg; rec__instruction__instr__addrs2 "model_trace:.5794" "name:AddRs2" : Instruction__reg.reg; rec__instruction__instr__subrd "model_trace:.5808" "name:SubRd" : Instruction__reg.reg; rec__instruction__instr__subrs1 "model_trace:.5818" "name:SubRs1" : Instruction__reg.reg; rec__instruction__instr__subrs2 "model_trace:.5828" "name:SubRs2" : Instruction__reg.reg; rec__instruction__instr__mulrd "model_trace:.5842" "name:MulRd" : Instruction__reg.reg; rec__instruction__instr__mulrs1 "model_trace:.5852" "name:MulRs1" : Instruction__reg.reg; rec__instruction__instr__mulrs2 "model_trace:.5862" "name:MulRs2" : Instruction__reg.reg; rec__instruction__instr__divrd "model_trace:.5876" "name:DivRd" : Instruction__reg.reg; rec__instruction__instr__divrs1 "model_trace:.5886" "name:DivRs1" : Instruction__reg.reg; rec__instruction__instr__divrs2 "model_trace:.5896" "name:DivRs2" : Instruction__reg.reg; rec__instruction__instr__retrs "model_trace:.5910" "name:RetRs" : Instruction__reg.reg; rec__instruction__instr__ldrrd "model_trace:.5924" "name:LdrRd" : Instruction__reg.reg; rec__instruction__instr__ldrrs "model_trace:.5934" "name:LdrRs" : Instruction__reg.reg; rec__instruction__instr__ldroffs "model_trace:.5944" "name:LdrOffs" : Instruction__offset.offset; rec__instruction__instr__strra "model_trace:.5958" "name:StrRa" : Instruction__reg.reg; rec__instruction__instr__stroffs "model_trace:.5968" "name:StrOffs" : Instruction__offset.offset; rec__instruction__instr__strrb "model_trace:.5978" "name:StrRb" : Instruction__reg.reg; rec__instruction__instr__movrd "model_trace:.5992" "name:MovRd" : Instruction__reg.reg; rec__instruction__instr__movoffs "model_trace:.6002" "name:MovOffs" : Instruction__offset.offset; rec__instruction__instr__jmpoffs "model_trace:.6016" "name:JmpOffs" : Instruction__offset.offset; rec__instruction__instr__jzra "model_trace:.6030" "name:JzRa" : Instruction__reg.reg; rec__instruction__instr__jzoffs "model_trace:.6040" "name:JzOffs" : Instruction__offset.offset }
 
 function __split_fields_AddRd__projection "model_trace:.5774" "name:AddRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrd
 
 meta "model_projection" function __split_fields_AddRd__projection
 
 meta "inline : no" function __split_fields_AddRd__projection
 
 function __split_fields_AddRs1__projection "model_trace:.5784" "name:AddRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrs1
 
 meta "model_projection" function __split_fields_AddRs1__projection
 
 meta "inline : no" function __split_fields_AddRs1__projection
 
 function __split_fields_AddRs2__projection "model_trace:.5794" "name:AddRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__addrs2
 
 meta "model_projection" function __split_fields_AddRs2__projection
 
 meta "inline : no" function __split_fields_AddRs2__projection
 
 function __split_fields_SubRd__projection "model_trace:.5808" "name:SubRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrd
 
 meta "model_projection" function __split_fields_SubRd__projection
 
 meta "inline : no" function __split_fields_SubRd__projection
 
 function __split_fields_SubRs1__projection "model_trace:.5818" "name:SubRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrs1
 
 meta "model_projection" function __split_fields_SubRs1__projection
 
 meta "inline : no" function __split_fields_SubRs1__projection
 
 function __split_fields_SubRs2__projection "model_trace:.5828" "name:SubRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__subrs2
 
 meta "model_projection" function __split_fields_SubRs2__projection
 
 meta "inline : no" function __split_fields_SubRs2__projection
 
 function __split_fields_MulRd__projection "model_trace:.5842" "name:MulRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrd
 
 meta "model_projection" function __split_fields_MulRd__projection
 
 meta "inline : no" function __split_fields_MulRd__projection
 
 function __split_fields_MulRs1__projection "model_trace:.5852" "name:MulRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrs1
 
 meta "model_projection" function __split_fields_MulRs1__projection
 
 meta "inline : no" function __split_fields_MulRs1__projection
 
 function __split_fields_MulRs2__projection "model_trace:.5862" "name:MulRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__mulrs2
 
 meta "model_projection" function __split_fields_MulRs2__projection
 
 meta "inline : no" function __split_fields_MulRs2__projection
 
 function __split_fields_DivRd__projection "model_trace:.5876" "name:DivRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrd
 
 meta "model_projection" function __split_fields_DivRd__projection
 
 meta "inline : no" function __split_fields_DivRd__projection
 
 function __split_fields_DivRs1__projection "model_trace:.5886" "name:DivRs1" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrs1
 
 meta "model_projection" function __split_fields_DivRs1__projection
 
 meta "inline : no" function __split_fields_DivRs1__projection
 
 function __split_fields_DivRs2__projection "model_trace:.5896" "name:DivRs2" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__divrs2
 
 meta "model_projection" function __split_fields_DivRs2__projection
 
 meta "inline : no" function __split_fields_DivRs2__projection
 
 function __split_fields_RetRs__projection "model_trace:.5910" "name:RetRs" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__retrs
 
 meta "model_projection" function __split_fields_RetRs__projection
 
 meta "inline : no" function __split_fields_RetRs__projection
 
 function __split_fields_LdrRd__projection "model_trace:.5924" "name:LdrRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__ldrrd
 
 meta "model_projection" function __split_fields_LdrRd__projection
 
 meta "inline : no" function __split_fields_LdrRd__projection
 
 function __split_fields_LdrRs__projection "model_trace:.5934" "name:LdrRs" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__ldrrs
 
 meta "model_projection" function __split_fields_LdrRs__projection
 
 meta "inline : no" function __split_fields_LdrRs__projection
 
 function __split_fields_LdrOffs__projection "model_trace:.5944" "name:LdrOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__ldroffs
 
 meta "model_projection" function __split_fields_LdrOffs__projection
 
 meta "inline : no" function __split_fields_LdrOffs__projection
 
 function __split_fields_StrRa__projection "model_trace:.5958" "name:StrRa" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__strra
 
 meta "model_projection" function __split_fields_StrRa__projection
 
 meta "inline : no" function __split_fields_StrRa__projection
 
 function __split_fields_StrOffs__projection "model_trace:.5968" "name:StrOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__stroffs
 
 meta "model_projection" function __split_fields_StrOffs__projection
 
 meta "inline : no" function __split_fields_StrOffs__projection
 
 function __split_fields_StrRb__projection "model_trace:.5978" "name:StrRb" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__strrb
 
 meta "model_projection" function __split_fields_StrRb__projection
 
 meta "inline : no" function __split_fields_StrRb__projection
 
 function __split_fields_MovRd__projection "model_trace:.5992" "name:MovRd" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__movrd
 
 meta "model_projection" function __split_fields_MovRd__projection
 
 meta "inline : no" function __split_fields_MovRd__projection
 
 function __split_fields_MovOffs__projection "model_trace:.6002" "name:MovOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__movoffs
 
 meta "model_projection" function __split_fields_MovOffs__projection
 
 meta "inline : no" function __split_fields_MovOffs__projection
 
 function __split_fields_JmpOffs__projection "model_trace:.6016" "name:JmpOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__jmpoffs
 
 meta "model_projection" function __split_fields_JmpOffs__projection
 
 meta "inline : no" function __split_fields_JmpOffs__projection
 
 function __split_fields_JzRa__projection "model_trace:.6030" "name:JzRa" 
   (a : __split_fields) : Instruction__reg.reg =
  a.rec__instruction__instr__jzra
 
 meta "model_projection" function __split_fields_JzRa__projection
 
 meta "inline : no" function __split_fields_JzRa__projection
 
 function __split_fields_JzOffs__projection "model_trace:.6040" "name:JzOffs" 
   (a : __split_fields) : Instruction__offset.offset =
  a.rec__instruction__instr__jzoffs
 
 meta "model_projection" function __split_fields_JzOffs__projection
 
 meta "inline : no" function __split_fields_JzOffs__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content "model_trace:" "name:" : __split_fields }
 
 function __split_fields__ref___projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_discrs "model_trace:" "name:" : __split_discrs; __split_fields "model_trace:" "name:" : __split_fields; attr__constrained "model_trace:" "name:" : bool }
 
 function __rep___projection 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep___projection
 
 meta "inline : no" function __rep___projection
 
 function __rep___2__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___2__projection
 
 meta "inline : no" function __rep___2__projection
 
 function __rep___3__projection 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep___3__projection
 
 meta "inline : no" function __rep___3__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 
 function of_base 
   (a : __rep) : __rep =
  a
 
 val rec__instruction__instr__op_ 
   (a : __rep) : Instruction__opcode.opcode
  requires {  true }
  ensures {  (result = a.__split_discrs.rec__instruction__instr__op) }
 
 predicate instruction__instr__addrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrd) }
 
 predicate instruction__instr__addrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrs1) }
 
 predicate instruction__instr__addrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 1)
 
 val rec__instruction__instr__addrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__addrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__addrs2) }
 
 predicate instruction__instr__subrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrd) }
 
 predicate instruction__instr__subrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrs1) }
 
 predicate instruction__instr__subrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 2)
 
 val rec__instruction__instr__subrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__subrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__subrs2) }
 
 predicate instruction__instr__mulrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrd) }
 
 predicate instruction__instr__mulrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrs1) }
 
 predicate instruction__instr__mulrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 3)
 
 val rec__instruction__instr__mulrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__mulrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__mulrs2) }
 
 predicate instruction__instr__divrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrd) }
 
 predicate instruction__instr__divrs1__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrs1_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrs1__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrs1) }
 
 predicate instruction__instr__divrs2__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 4)
 
 val rec__instruction__instr__divrs2_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__divrs2__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__divrs2) }
 
 predicate instruction__instr__retrs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 5)
 
 val rec__instruction__instr__retrs_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__retrs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__retrs) }
 
 predicate instruction__instr__ldrrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldrrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__ldrrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldrrd) }
 
 predicate instruction__instr__ldrrs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldrrs_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__ldrrs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldrrs) }
 
 predicate instruction__instr__ldroffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 6)
 
 val rec__instruction__instr__ldroffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__ldroffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__ldroffs) }
 
 predicate instruction__instr__strra__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__strra_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__strra__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__strra) }
 
 predicate instruction__instr__stroffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__stroffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__stroffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__stroffs) }
 
 predicate instruction__instr__strrb__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 7)
 
 val rec__instruction__instr__strrb_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__strrb__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__strrb) }
 
 predicate instruction__instr__movrd__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 8)
 
 val rec__instruction__instr__movrd_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__movrd__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__movrd) }
 
 predicate instruction__instr__movoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 8)
 
 val rec__instruction__instr__movoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__movoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__movoffs) }
 
 predicate instruction__instr__jmpoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 9)
 
 val rec__instruction__instr__jmpoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__jmpoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jmpoffs) }
 
 predicate instruction__instr__jzra__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 10)
 
 val rec__instruction__instr__jzra_ 
   (a : __rep) : Instruction__reg.reg
  requires {  (instruction__instr__jzra__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jzra) }
 
 predicate instruction__instr__jzoffs__pred 
   (a : __rep)  =
  ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = 10)
 
 val rec__instruction__instr__jzoffs_ 
   (a : __rep) : Instruction__offset.offset
  requires {  (instruction__instr__jzoffs__pred a) }
  ensures {  (result = a.__split_fields.rec__instruction__instr__jzoffs) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Instruction__opcode__rep.to_rep a.__split_discrs.rec__instruction__instr__op) = (Instruction__opcode__rep.to_rep b.__split_discrs.rec__instruction__instr__op)) /\ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (instruction__instr__addrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrd)) ) /\ ( (instruction__instr__addrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrs1)) ) ) /\ ( (instruction__instr__addrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__addrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__addrs2)) ) ) /\ ( (instruction__instr__subrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrd)) ) ) /\ ( (instruction__instr__subrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrs1)) ) ) /\ ( (instruction__instr__subrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__subrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__subrs2)) ) ) /\ ( (instruction__instr__mulrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrd)) ) ) /\ ( (instruction__instr__mulrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrs1)) ) ) /\ ( (instruction__instr__mulrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__mulrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__mulrs2)) ) ) /\ ( (instruction__instr__divrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrd)) ) ) /\ ( (instruction__instr__divrs1__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrs1) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrs1)) ) ) /\ ( (instruction__instr__divrs2__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__divrs2) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__divrs2)) ) ) /\ ( (instruction__instr__retrs__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__retrs) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__retrs)) ) ) /\ ( (instruction__instr__ldrrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__ldrrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__ldrrd)) ) ) /\ ( (instruction__instr__ldrrs__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__ldrrs) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__ldrrs)) ) ) /\ ( (instruction__instr__ldroffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__ldroffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__ldroffs)) ) ) /\ ( (instruction__instr__strra__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__strra) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__strra)) ) ) /\ ( (instruction__instr__stroffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__stroffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__stroffs)) ) ) /\ ( (instruction__instr__strrb__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__strrb) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__strrb)) ) ) /\ ( (instruction__instr__movrd__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__movrd) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__movrd)) ) ) /\ ( (instruction__instr__movoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__movoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__movoffs)) ) ) /\ ( (instruction__instr__jmpoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__jmpoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__jmpoffs)) ) ) /\ ( (instruction__instr__jzra__pred a) -> ((Instruction__reg__rep.to_rep a.__split_fields.rec__instruction__instr__jzra) = (Instruction__reg__rep.to_rep b.__split_fields.rec__instruction__instr__jzra)) ) ) /\ ( (instruction__instr__jzoffs__pred a) -> ((Instruction__offset__rep.to_rep a.__split_fields.rec__instruction__instr__jzoffs) = (Instruction__offset__rep.to_rep b.__split_fields.rec__instruction__instr__jzoffs)) ) ) )) then (
   True) else (
   False))

end

(* Module for axiomatizing type "instr" defined at instruction.ads:25, created in Gnat2Why.Types.Translate_Type *)
module Instruction__instr
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type instr =
  __rep
 
 function value__size 
   : int
 
 function object__size 
   (a : instr) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : instr) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : instr.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : instr.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : instr) (b : instr) : bool
 
 function dummy 
   : instr
 
 type instr__ref =
  { mutable instr__content "model_trace:" "name:" : instr }
 
 function instr__ref___projection 
   (a : instr__ref) : instr =
  a.instr__content
 
 meta "model_projection" function instr__ref___projection
 
 meta "inline : no" function instr__ref___projection
 
 val instr__havoc 
   (x : instr__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at instruction.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Instruction__debugprintinstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"instruction.ads" 78 0 0#"model_projected" "name:Inst" "model_trace:6099" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at instruction.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Instruction__debugprintinstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"debug.ads" 4 0 0#"model_projected" "model_trace:6141" "name:Item" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:8, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"debug.ads" 8 0 0#"model_projected" "name:Item" "model_trace:6164" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put_line__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:12, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__2__item
 use import "_gnatprove_standard".Main

 function item #"debug.ads" 12 0 0#"model" "name:Item" "model_trace:6187" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:12, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at debug.ads:20, created in Gnat2Why.Decls.Translate_Constant *)
module Debug__put__3__item
 use import "_gnatprove_standard".Main

 function item #"debug.ads" 20 0 0#"model" "name:Item" "model_trace:6224" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at debug.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Debug__put__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nul" defined at a-chlat1.ads:25, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nul
 use import "_gnatprove_standard".Main

 function nul #"a-chlat1.ads" 25 0 0#"model" "model_trace:6305" "name:NUL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "soh" defined at a-chlat1.ads:26, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__soh
 use import "_gnatprove_standard".Main

 function soh #"a-chlat1.ads" 26 0 0#"model" "model_trace:6318" "name:SOH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "stx" defined at a-chlat1.ads:27, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__stx
 use import "_gnatprove_standard".Main

 function stx #"a-chlat1.ads" 27 0 0#"model" "model_trace:6331" "name:STX" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "etx" defined at a-chlat1.ads:28, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__etx
 use import "_gnatprove_standard".Main

 function etx #"a-chlat1.ads" 28 0 0#"model" "model_trace:6344" "name:ETX" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "eot" defined at a-chlat1.ads:29, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__eot
 use import "_gnatprove_standard".Main

 function eot #"a-chlat1.ads" 29 0 0#"model" "model_trace:6357" "name:EOT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "enq" defined at a-chlat1.ads:30, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__enq
 use import "_gnatprove_standard".Main

 function enq #"a-chlat1.ads" 30 0 0#"model" "model_trace:6370" "name:ENQ" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ack" defined at a-chlat1.ads:31, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ack
 use import "_gnatprove_standard".Main

 function ack #"a-chlat1.ads" 31 0 0#"model" "model_trace:6383" "name:ACK" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bel" defined at a-chlat1.ads:32, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bel
 use import "_gnatprove_standard".Main

 function bel #"a-chlat1.ads" 32 0 0#"model" "model_trace:6396" "name:BEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bs" defined at a-chlat1.ads:33, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bs
 use import "_gnatprove_standard".Main

 function bs #"a-chlat1.ads" 33 0 0#"model" "model_trace:6409" "name:BS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ht" defined at a-chlat1.ads:34, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ht
 use import "_gnatprove_standard".Main

 function ht #"a-chlat1.ads" 34 0 0#"model" "model_trace:6422" "name:HT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lf" defined at a-chlat1.ads:35, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lf
 use import "_gnatprove_standard".Main

 function lf #"a-chlat1.ads" 35 0 0#"model" "model_trace:6435" "name:LF" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vt" defined at a-chlat1.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vt
 use import "_gnatprove_standard".Main

 function vt #"a-chlat1.ads" 36 0 0#"model" "model_trace:6448" "name:VT" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ff" defined at a-chlat1.ads:37, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ff
 use import "_gnatprove_standard".Main

 function ff #"a-chlat1.ads" 37 0 0#"model" "model_trace:6461" "name:FF" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cr" defined at a-chlat1.ads:38, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cr
 use import "_gnatprove_standard".Main

 function cr #"a-chlat1.ads" 38 0 0#"model" "model_trace:6474" "name:CR" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "so" defined at a-chlat1.ads:39, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__so
 use import "_gnatprove_standard".Main

 function so__ #"a-chlat1.ads" 39 0 0#"model" "model_trace:6487" "name:SO" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "si" defined at a-chlat1.ads:40, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__si
 use import "_gnatprove_standard".Main

 function si #"a-chlat1.ads" 40 0 0#"model" "model_trace:6500" "name:SI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dle" defined at a-chlat1.ads:42, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dle
 use import "_gnatprove_standard".Main

 function dle #"a-chlat1.ads" 42 0 0#"model" "model_trace:6513" "name:DLE" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc1" defined at a-chlat1.ads:43, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc1
 use import "_gnatprove_standard".Main

 function dc1 #"a-chlat1.ads" 43 0 0#"model" "model_trace:6526" "name:DC1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc2" defined at a-chlat1.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc2
 use import "_gnatprove_standard".Main

 function dc2 #"a-chlat1.ads" 44 0 0#"model" "model_trace:6539" "name:DC2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc3" defined at a-chlat1.ads:45, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc3
 use import "_gnatprove_standard".Main

 function dc3 #"a-chlat1.ads" 45 0 0#"model" "model_trace:6552" "name:DC3" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dc4" defined at a-chlat1.ads:46, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dc4
 use import "_gnatprove_standard".Main

 function dc4 #"a-chlat1.ads" 46 0 0#"model" "model_trace:6565" "name:DC4" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nak" defined at a-chlat1.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nak
 use import "_gnatprove_standard".Main

 function nak #"a-chlat1.ads" 47 0 0#"model" "model_trace:6578" "name:NAK" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "syn" defined at a-chlat1.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__syn
 use import "_gnatprove_standard".Main

 function syn #"a-chlat1.ads" 48 0 0#"model" "model_trace:6591" "name:SYN" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "etb" defined at a-chlat1.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__etb
 use import "_gnatprove_standard".Main

 function etb #"a-chlat1.ads" 49 0 0#"model" "model_trace:6604" "name:ETB" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "can" defined at a-chlat1.ads:50, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__can
 use import "_gnatprove_standard".Main

 function can #"a-chlat1.ads" 50 0 0#"model" "model_trace:6617" "name:CAN" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "em" defined at a-chlat1.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__em
 use import "_gnatprove_standard".Main

 function em #"a-chlat1.ads" 51 0 0#"model" "model_trace:6630" "name:EM" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sub" defined at a-chlat1.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sub
 use import "_gnatprove_standard".Main

 function sub #"a-chlat1.ads" 52 0 0#"model" "model_trace:6643" "name:SUB" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "esc" defined at a-chlat1.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__esc
 use import "_gnatprove_standard".Main

 function esc #"a-chlat1.ads" 53 0 0#"model" "model_trace:6656" "name:ESC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fs" defined at a-chlat1.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fs
 use import "_gnatprove_standard".Main

 function fs #"a-chlat1.ads" 54 0 0#"model" "model_trace:6669" "name:FS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "gs" defined at a-chlat1.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__gs
 use import "_gnatprove_standard".Main

 function gs #"a-chlat1.ads" 55 0 0#"model" "model_trace:6682" "name:GS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "rs" defined at a-chlat1.ads:56, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__rs
 use import "_gnatprove_standard".Main

 function rs #"a-chlat1.ads" 56 0 0#"model" "model_trace:6695" "name:RS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "us" defined at a-chlat1.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__us
 use import "_gnatprove_standard".Main

 function us #"a-chlat1.ads" 57 0 0#"model" "model_trace:6708" "name:US" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "space" defined at a-chlat1.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__space
 use import "_gnatprove_standard".Main

 function space #"a-chlat1.ads" 63 0 0#"model" "model_trace:6721" "name:Space" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "exclamation" defined at a-chlat1.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__exclamation
 use import "_gnatprove_standard".Main

 function exclamation #"a-chlat1.ads" 64 0 0#"model" "model_trace:6731" "name:Exclamation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "quotation" defined at a-chlat1.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__quotation
 use import "_gnatprove_standard".Main

 function quotation #"a-chlat1.ads" 65 0 0#"model" "model_trace:6741" "name:Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "number_sign" defined at a-chlat1.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__number_sign
 use import "_gnatprove_standard".Main

 function number_sign #"a-chlat1.ads" 66 0 0#"model" "model_trace:6751" "name:Number_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dollar_sign" defined at a-chlat1.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dollar_sign
 use import "_gnatprove_standard".Main

 function dollar_sign #"a-chlat1.ads" 67 0 0#"model" "model_trace:6761" "name:Dollar_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "percent_sign" defined at a-chlat1.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__percent_sign
 use import "_gnatprove_standard".Main

 function percent_sign #"a-chlat1.ads" 68 0 0#"model" "model_trace:6771" "name:Percent_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ampersand" defined at a-chlat1.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ampersand
 use import "_gnatprove_standard".Main

 function ampersand #"a-chlat1.ads" 69 0 0#"model" "model_trace:6781" "name:Ampersand" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "apostrophe" defined at a-chlat1.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__apostrophe
 use import "_gnatprove_standard".Main

 function apostrophe #"a-chlat1.ads" 70 0 0#"model" "model_trace:6791" "name:Apostrophe" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_parenthesis" defined at a-chlat1.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_parenthesis
 use import "_gnatprove_standard".Main

 function left_parenthesis #"a-chlat1.ads" 71 0 0#"model" "model_trace:6801" "name:Left_Parenthesis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_parenthesis" defined at a-chlat1.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_parenthesis
 use import "_gnatprove_standard".Main

 function right_parenthesis #"a-chlat1.ads" 72 0 0#"model" "model_trace:6811" "name:Right_Parenthesis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "asterisk" defined at a-chlat1.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__asterisk
 use import "_gnatprove_standard".Main

 function asterisk #"a-chlat1.ads" 73 0 0#"model" "model_trace:6821" "name:Asterisk" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plus_sign" defined at a-chlat1.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plus_sign
 use import "_gnatprove_standard".Main

 function plus_sign #"a-chlat1.ads" 74 0 0#"model" "model_trace:6831" "name:Plus_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "comma" defined at a-chlat1.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__comma
 use import "_gnatprove_standard".Main

 function comma #"a-chlat1.ads" 75 0 0#"model" "model_trace:6841" "name:Comma" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "hyphen" defined at a-chlat1.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__hyphen
 use import "_gnatprove_standard".Main

 function hyphen #"a-chlat1.ads" 76 0 0#"model" "model_trace:6851" "name:Hyphen" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "full_stop" defined at a-chlat1.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__full_stop
 use import "_gnatprove_standard".Main

 function full_stop #"a-chlat1.ads" 78 0 0#"model" "model_trace:6871" "name:Full_Stop" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "solidus" defined at a-chlat1.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__solidus
 use import "_gnatprove_standard".Main

 function solidus #"a-chlat1.ads" 79 0 0#"model" "model_trace:6881" "name:Solidus" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "colon" defined at a-chlat1.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__colon
 use import "_gnatprove_standard".Main

 function colon #"a-chlat1.ads" 83 0 0#"model" "model_trace:6891" "name:Colon" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "semicolon" defined at a-chlat1.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__semicolon
 use import "_gnatprove_standard".Main

 function semicolon #"a-chlat1.ads" 84 0 0#"model" "model_trace:6901" "name:Semicolon" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "less_than_sign" defined at a-chlat1.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__less_than_sign
 use import "_gnatprove_standard".Main

 function less_than_sign #"a-chlat1.ads" 85 0 0#"model" "model_trace:6911" "name:Less_Than_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "equals_sign" defined at a-chlat1.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__equals_sign
 use import "_gnatprove_standard".Main

 function equals_sign #"a-chlat1.ads" 86 0 0#"model" "model_trace:6921" "name:Equals_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "greater_than_sign" defined at a-chlat1.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__greater_than_sign
 use import "_gnatprove_standard".Main

 function greater_than_sign #"a-chlat1.ads" 87 0 0#"model" "model_trace:6931" "name:Greater_Than_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "question" defined at a-chlat1.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__question
 use import "_gnatprove_standard".Main

 function question #"a-chlat1.ads" 88 0 0#"model" "model_trace:6941" "name:Question" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "commercial_at" defined at a-chlat1.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__commercial_at
 use import "_gnatprove_standard".Main

 function commercial_at #"a-chlat1.ads" 89 0 0#"model" "model_trace:6951" "name:Commercial_At" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_square_bracket" defined at a-chlat1.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_square_bracket
 use import "_gnatprove_standard".Main

 function left_square_bracket #"a-chlat1.ads" 93 0 0#"model" "model_trace:6961" "name:Left_Square_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reverse_solidus" defined at a-chlat1.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reverse_solidus
 use import "_gnatprove_standard".Main

 function reverse_solidus #"a-chlat1.ads" 94 0 0#"model" "model_trace:6971" "name:Reverse_Solidus" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_square_bracket" defined at a-chlat1.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_square_bracket
 use import "_gnatprove_standard".Main

 function right_square_bracket #"a-chlat1.ads" 95 0 0#"model" "model_trace:6981" "name:Right_Square_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "circumflex" defined at a-chlat1.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__circumflex
 use import "_gnatprove_standard".Main

 function circumflex #"a-chlat1.ads" 96 0 0#"model" "model_trace:6991" "name:Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "low_line" defined at a-chlat1.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__low_line
 use import "_gnatprove_standard".Main

 function low_line #"a-chlat1.ads" 97 0 0#"model" "model_trace:7001" "name:Low_Line" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "grave" defined at a-chlat1.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__grave
 use import "_gnatprove_standard".Main

 function grave #"a-chlat1.ads" 99 0 0#"model" "model_trace:7011" "name:Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a" defined at a-chlat1.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a
 use import "_gnatprove_standard".Main

 function lc_a #"a-chlat1.ads" 100 0 0#"model" "model_trace:7021" "name:LC_A" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_b" defined at a-chlat1.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_b
 use import "_gnatprove_standard".Main

 function lc_b #"a-chlat1.ads" 101 0 0#"model" "model_trace:7031" "name:LC_B" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_c" defined at a-chlat1.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_c
 use import "_gnatprove_standard".Main

 function lc_c #"a-chlat1.ads" 102 0 0#"model" "model_trace:7041" "name:LC_C" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_d" defined at a-chlat1.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_d
 use import "_gnatprove_standard".Main

 function lc_d #"a-chlat1.ads" 103 0 0#"model" "model_trace:7051" "name:LC_D" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e" defined at a-chlat1.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e
 use import "_gnatprove_standard".Main

 function lc_e #"a-chlat1.ads" 104 0 0#"model" "model_trace:7061" "name:LC_E" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_f" defined at a-chlat1.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_f
 use import "_gnatprove_standard".Main

 function lc_f #"a-chlat1.ads" 105 0 0#"model" "model_trace:7071" "name:LC_F" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_g" defined at a-chlat1.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_g
 use import "_gnatprove_standard".Main

 function lc_g #"a-chlat1.ads" 106 0 0#"model" "model_trace:7081" "name:LC_G" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_h" defined at a-chlat1.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_h
 use import "_gnatprove_standard".Main

 function lc_h #"a-chlat1.ads" 107 0 0#"model" "model_trace:7091" "name:LC_H" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i" defined at a-chlat1.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i
 use import "_gnatprove_standard".Main

 function lc_i #"a-chlat1.ads" 108 0 0#"model" "model_trace:7101" "name:LC_I" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_j" defined at a-chlat1.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_j
 use import "_gnatprove_standard".Main

 function lc_j #"a-chlat1.ads" 109 0 0#"model" "model_trace:7111" "name:LC_J" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_k" defined at a-chlat1.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_k
 use import "_gnatprove_standard".Main

 function lc_k #"a-chlat1.ads" 110 0 0#"model" "model_trace:7121" "name:LC_K" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_l" defined at a-chlat1.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_l
 use import "_gnatprove_standard".Main

 function lc_l #"a-chlat1.ads" 111 0 0#"model" "model_trace:7131" "name:LC_L" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_m" defined at a-chlat1.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_m
 use import "_gnatprove_standard".Main

 function lc_m #"a-chlat1.ads" 112 0 0#"model" "model_trace:7141" "name:LC_M" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_n" defined at a-chlat1.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_n
 use import "_gnatprove_standard".Main

 function lc_n #"a-chlat1.ads" 113 0 0#"model" "model_trace:7151" "name:LC_N" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o" defined at a-chlat1.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o
 use import "_gnatprove_standard".Main

 function lc_o #"a-chlat1.ads" 114 0 0#"model" "model_trace:7161" "name:LC_O" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_p" defined at a-chlat1.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_p
 use import "_gnatprove_standard".Main

 function lc_p #"a-chlat1.ads" 115 0 0#"model" "model_trace:7171" "name:LC_P" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_q" defined at a-chlat1.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_q
 use import "_gnatprove_standard".Main

 function lc_q #"a-chlat1.ads" 116 0 0#"model" "model_trace:7181" "name:LC_Q" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_r" defined at a-chlat1.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_r
 use import "_gnatprove_standard".Main

 function lc_r #"a-chlat1.ads" 117 0 0#"model" "model_trace:7191" "name:LC_R" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_s" defined at a-chlat1.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_s
 use import "_gnatprove_standard".Main

 function lc_s #"a-chlat1.ads" 118 0 0#"model" "model_trace:7201" "name:LC_S" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_t" defined at a-chlat1.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_t
 use import "_gnatprove_standard".Main

 function lc_t #"a-chlat1.ads" 119 0 0#"model" "model_trace:7211" "name:LC_T" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u" defined at a-chlat1.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u
 use import "_gnatprove_standard".Main

 function lc_u #"a-chlat1.ads" 120 0 0#"model" "model_trace:7221" "name:LC_U" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_v" defined at a-chlat1.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_v
 use import "_gnatprove_standard".Main

 function lc_v #"a-chlat1.ads" 121 0 0#"model" "model_trace:7231" "name:LC_V" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_w" defined at a-chlat1.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_w
 use import "_gnatprove_standard".Main

 function lc_w #"a-chlat1.ads" 122 0 0#"model" "model_trace:7241" "name:LC_W" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_x" defined at a-chlat1.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_x
 use import "_gnatprove_standard".Main

 function lc_x #"a-chlat1.ads" 123 0 0#"model" "model_trace:7251" "name:LC_X" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y" defined at a-chlat1.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y
 use import "_gnatprove_standard".Main

 function lc_y #"a-chlat1.ads" 124 0 0#"model" "model_trace:7261" "name:LC_Y" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_z" defined at a-chlat1.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_z
 use import "_gnatprove_standard".Main

 function lc_z #"a-chlat1.ads" 125 0 0#"model" "model_trace:7271" "name:LC_Z" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_curly_bracket" defined at a-chlat1.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_curly_bracket
 use import "_gnatprove_standard".Main

 function left_curly_bracket #"a-chlat1.ads" 126 0 0#"model" "model_trace:7281" "name:Left_Curly_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vertical_line" defined at a-chlat1.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vertical_line
 use import "_gnatprove_standard".Main

 function vertical_line #"a-chlat1.ads" 127 0 0#"model" "model_trace:7291" "name:Vertical_Line" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_curly_bracket" defined at a-chlat1.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_curly_bracket
 use import "_gnatprove_standard".Main

 function right_curly_bracket #"a-chlat1.ads" 128 0 0#"model" "model_trace:7301" "name:Right_Curly_Bracket" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "tilde" defined at a-chlat1.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__tilde
 use import "_gnatprove_standard".Main

 function tilde #"a-chlat1.ads" 129 0 0#"model" "model_trace:7311" "name:Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "del" defined at a-chlat1.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__del
 use import "_gnatprove_standard".Main

 function del #"a-chlat1.ads" 130 0 0#"model" "model_trace:7321" "name:DEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_128" defined at a-chlat1.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_128
 use import "_gnatprove_standard".Main

 function reserved_128 #"a-chlat1.ads" 141 0 0#"model" "model_trace:7374" "name:Reserved_128" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_129" defined at a-chlat1.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_129
 use import "_gnatprove_standard".Main

 function reserved_129 #"a-chlat1.ads" 142 0 0#"model" "model_trace:7387" "name:Reserved_129" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "bph" defined at a-chlat1.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__bph
 use import "_gnatprove_standard".Main

 function bph #"a-chlat1.ads" 143 0 0#"model" "model_trace:7400" "name:BPH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nbh" defined at a-chlat1.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nbh
 use import "_gnatprove_standard".Main

 function nbh #"a-chlat1.ads" 144 0 0#"model" "model_trace:7413" "name:NBH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_132" defined at a-chlat1.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_132
 use import "_gnatprove_standard".Main

 function reserved_132 #"a-chlat1.ads" 145 0 0#"model" "model_trace:7426" "name:Reserved_132" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "nel" defined at a-chlat1.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__nel
 use import "_gnatprove_standard".Main

 function nel #"a-chlat1.ads" 146 0 0#"model" "model_trace:7439" "name:NEL" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ssa" defined at a-chlat1.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ssa
 use import "_gnatprove_standard".Main

 function ssa #"a-chlat1.ads" 147 0 0#"model" "model_trace:7452" "name:SSA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "esa" defined at a-chlat1.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__esa
 use import "_gnatprove_standard".Main

 function esa #"a-chlat1.ads" 148 0 0#"model" "model_trace:7465" "name:ESA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "hts" defined at a-chlat1.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__hts
 use import "_gnatprove_standard".Main

 function hts #"a-chlat1.ads" 149 0 0#"model" "model_trace:7478" "name:HTS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "htj" defined at a-chlat1.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__htj
 use import "_gnatprove_standard".Main

 function htj #"a-chlat1.ads" 150 0 0#"model" "model_trace:7491" "name:HTJ" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "vts" defined at a-chlat1.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__vts
 use import "_gnatprove_standard".Main

 function vts #"a-chlat1.ads" 151 0 0#"model" "model_trace:7504" "name:VTS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pld" defined at a-chlat1.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pld
 use import "_gnatprove_standard".Main

 function pld #"a-chlat1.ads" 152 0 0#"model" "model_trace:7517" "name:PLD" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plu" defined at a-chlat1.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plu
 use import "_gnatprove_standard".Main

 function plu #"a-chlat1.ads" 153 0 0#"model" "model_trace:7530" "name:PLU" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ri" defined at a-chlat1.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ri
 use import "_gnatprove_standard".Main

 function ri #"a-chlat1.ads" 154 0 0#"model" "model_trace:7543" "name:RI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ss2" defined at a-chlat1.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ss2
 use import "_gnatprove_standard".Main

 function ss2 #"a-chlat1.ads" 155 0 0#"model" "model_trace:7556" "name:SS2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "ss3" defined at a-chlat1.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__ss3
 use import "_gnatprove_standard".Main

 function ss3 #"a-chlat1.ads" 156 0 0#"model" "model_trace:7569" "name:SS3" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "dcs" defined at a-chlat1.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__dcs
 use import "_gnatprove_standard".Main

 function dcs #"a-chlat1.ads" 158 0 0#"model" "model_trace:7582" "name:DCS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pu1" defined at a-chlat1.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pu1
 use import "_gnatprove_standard".Main

 function pu1 #"a-chlat1.ads" 159 0 0#"model" "model_trace:7595" "name:PU1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pu2" defined at a-chlat1.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pu2
 use import "_gnatprove_standard".Main

 function pu2 #"a-chlat1.ads" 160 0 0#"model" "model_trace:7608" "name:PU2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sts" defined at a-chlat1.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sts
 use import "_gnatprove_standard".Main

 function sts #"a-chlat1.ads" 161 0 0#"model" "model_trace:7621" "name:STS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cch" defined at a-chlat1.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cch
 use import "_gnatprove_standard".Main

 function cch #"a-chlat1.ads" 162 0 0#"model" "model_trace:7634" "name:CCH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "mw" defined at a-chlat1.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__mw
 use import "_gnatprove_standard".Main

 function mw #"a-chlat1.ads" 163 0 0#"model" "model_trace:7647" "name:MW" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "spa" defined at a-chlat1.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__spa
 use import "_gnatprove_standard".Main

 function spa #"a-chlat1.ads" 164 0 0#"model" "model_trace:7660" "name:SPA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "epa" defined at a-chlat1.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__epa
 use import "_gnatprove_standard".Main

 function epa #"a-chlat1.ads" 165 0 0#"model" "model_trace:7673" "name:EPA" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sos" defined at a-chlat1.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sos
 use import "_gnatprove_standard".Main

 function sos #"a-chlat1.ads" 167 0 0#"model" "model_trace:7686" "name:SOS" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "reserved_153" defined at a-chlat1.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__reserved_153
 use import "_gnatprove_standard".Main

 function reserved_153 #"a-chlat1.ads" 168 0 0#"model" "model_trace:7699" "name:Reserved_153" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "sci" defined at a-chlat1.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__sci
 use import "_gnatprove_standard".Main

 function sci #"a-chlat1.ads" 169 0 0#"model" "model_trace:7712" "name:SCI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "csi" defined at a-chlat1.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__csi
 use import "_gnatprove_standard".Main

 function csi #"a-chlat1.ads" 170 0 0#"model" "model_trace:7725" "name:CSI" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "st" defined at a-chlat1.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__st
 use import "_gnatprove_standard".Main

 function st #"a-chlat1.ads" 171 0 0#"model" "model_trace:7738" "name:ST" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "osc" defined at a-chlat1.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__osc
 use import "_gnatprove_standard".Main

 function osc #"a-chlat1.ads" 172 0 0#"model" "model_trace:7751" "name:OSC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pm" defined at a-chlat1.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pm
 use import "_gnatprove_standard".Main

 function pm #"a-chlat1.ads" 173 0 0#"model" "model_trace:7764" "name:PM" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "apc" defined at a-chlat1.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__apc
 use import "_gnatprove_standard".Main

 function apc #"a-chlat1.ads" 174 0 0#"model" "model_trace:7777" "name:APC" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "no_break_space" defined at a-chlat1.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__no_break_space
 use import "_gnatprove_standard".Main

 function no_break_space #"a-chlat1.ads" 182 0 0#"model" "model_trace:7790" "name:No_Break_Space" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inverted_exclamation" defined at a-chlat1.ads:184, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__inverted_exclamation
 use import "_gnatprove_standard".Main

 function inverted_exclamation #"a-chlat1.ads" 184 0 0#"model" "model_trace:7813" "name:Inverted_Exclamation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cent_sign" defined at a-chlat1.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cent_sign
 use import "_gnatprove_standard".Main

 function cent_sign #"a-chlat1.ads" 185 0 0#"model" "model_trace:7826" "name:Cent_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pound_sign" defined at a-chlat1.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pound_sign
 use import "_gnatprove_standard".Main

 function pound_sign #"a-chlat1.ads" 186 0 0#"model" "model_trace:7839" "name:Pound_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "currency_sign" defined at a-chlat1.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__currency_sign
 use import "_gnatprove_standard".Main

 function currency_sign #"a-chlat1.ads" 187 0 0#"model" "model_trace:7852" "name:Currency_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "yen_sign" defined at a-chlat1.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__yen_sign
 use import "_gnatprove_standard".Main

 function yen_sign #"a-chlat1.ads" 188 0 0#"model" "model_trace:7865" "name:Yen_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "broken_bar" defined at a-chlat1.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__broken_bar
 use import "_gnatprove_standard".Main

 function broken_bar #"a-chlat1.ads" 189 0 0#"model" "model_trace:7878" "name:Broken_Bar" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "section_sign" defined at a-chlat1.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__section_sign
 use import "_gnatprove_standard".Main

 function section_sign #"a-chlat1.ads" 190 0 0#"model" "model_trace:7891" "name:Section_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "diaeresis" defined at a-chlat1.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__diaeresis
 use import "_gnatprove_standard".Main

 function diaeresis #"a-chlat1.ads" 191 0 0#"model" "model_trace:7904" "name:Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "copyright_sign" defined at a-chlat1.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__copyright_sign
 use import "_gnatprove_standard".Main

 function copyright_sign #"a-chlat1.ads" 192 0 0#"model" "model_trace:7917" "name:Copyright_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "feminine_ordinal_indicator" defined at a-chlat1.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__feminine_ordinal_indicator
 use import "_gnatprove_standard".Main

 function feminine_ordinal_indicator #"a-chlat1.ads" 193 0 0#"model" "model_trace:7930" "name:Feminine_Ordinal_Indicator" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "left_angle_quotation" defined at a-chlat1.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__left_angle_quotation
 use import "_gnatprove_standard".Main

 function left_angle_quotation #"a-chlat1.ads" 194 0 0#"model" "model_trace:7943" "name:Left_Angle_Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "not_sign" defined at a-chlat1.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__not_sign
 use import "_gnatprove_standard".Main

 function not_sign #"a-chlat1.ads" 195 0 0#"model" "model_trace:7956" "name:Not_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "soft_hyphen" defined at a-chlat1.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__soft_hyphen
 use import "_gnatprove_standard".Main

 function soft_hyphen #"a-chlat1.ads" 196 0 0#"model" "model_trace:7969" "name:Soft_Hyphen" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "registered_trade_mark_sign" defined at a-chlat1.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__registered_trade_mark_sign
 use import "_gnatprove_standard".Main

 function registered_trade_mark_sign #"a-chlat1.ads" 197 0 0#"model" "model_trace:7982" "name:Registered_Trade_Mark_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "macron" defined at a-chlat1.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__macron
 use import "_gnatprove_standard".Main

 function macron #"a-chlat1.ads" 198 0 0#"model" "model_trace:7995" "name:Macron" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "degree_sign" defined at a-chlat1.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__degree_sign
 use import "_gnatprove_standard".Main

 function degree_sign #"a-chlat1.ads" 202 0 0#"model" "model_trace:8008" "name:Degree_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "plus_minus_sign" defined at a-chlat1.ads:204, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__plus_minus_sign
 use import "_gnatprove_standard".Main

 function plus_minus_sign #"a-chlat1.ads" 204 0 0#"model" "model_trace:8031" "name:Plus_Minus_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_two" defined at a-chlat1.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_two
 use import "_gnatprove_standard".Main

 function superscript_two #"a-chlat1.ads" 205 0 0#"model" "model_trace:8044" "name:Superscript_Two" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_three" defined at a-chlat1.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_three
 use import "_gnatprove_standard".Main

 function superscript_three #"a-chlat1.ads" 206 0 0#"model" "model_trace:8057" "name:Superscript_Three" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "acute" defined at a-chlat1.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__acute
 use import "_gnatprove_standard".Main

 function acute #"a-chlat1.ads" 207 0 0#"model" "model_trace:8070" "name:Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "micro_sign" defined at a-chlat1.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__micro_sign
 use import "_gnatprove_standard".Main

 function micro_sign #"a-chlat1.ads" 208 0 0#"model" "model_trace:8083" "name:Micro_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "pilcrow_sign" defined at a-chlat1.ads:209, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__pilcrow_sign
 use import "_gnatprove_standard".Main

 function pilcrow_sign #"a-chlat1.ads" 209 0 0#"model" "model_trace:8096" "name:Pilcrow_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "middle_dot" defined at a-chlat1.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__middle_dot
 use import "_gnatprove_standard".Main

 function middle_dot #"a-chlat1.ads" 211 0 0#"model" "model_trace:8119" "name:Middle_Dot" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "cedilla" defined at a-chlat1.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__cedilla
 use import "_gnatprove_standard".Main

 function cedilla #"a-chlat1.ads" 212 0 0#"model" "model_trace:8132" "name:Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "superscript_one" defined at a-chlat1.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__superscript_one
 use import "_gnatprove_standard".Main

 function superscript_one #"a-chlat1.ads" 213 0 0#"model" "model_trace:8145" "name:Superscript_One" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "masculine_ordinal_indicator" defined at a-chlat1.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__masculine_ordinal_indicator
 use import "_gnatprove_standard".Main

 function masculine_ordinal_indicator #"a-chlat1.ads" 214 0 0#"model" "model_trace:8158" "name:Masculine_Ordinal_Indicator" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "right_angle_quotation" defined at a-chlat1.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__right_angle_quotation
 use import "_gnatprove_standard".Main

 function right_angle_quotation #"a-chlat1.ads" 215 0 0#"model" "model_trace:8171" "name:Right_Angle_Quotation" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_one_quarter" defined at a-chlat1.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_one_quarter
 use import "_gnatprove_standard".Main

 function fraction_one_quarter #"a-chlat1.ads" 216 0 0#"model" "model_trace:8184" "name:Fraction_One_Quarter" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_one_half" defined at a-chlat1.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_one_half
 use import "_gnatprove_standard".Main

 function fraction_one_half #"a-chlat1.ads" 217 0 0#"model" "model_trace:8197" "name:Fraction_One_Half" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "fraction_three_quarters" defined at a-chlat1.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__fraction_three_quarters
 use import "_gnatprove_standard".Main

 function fraction_three_quarters #"a-chlat1.ads" 218 0 0#"model" "model_trace:8210" "name:Fraction_Three_Quarters" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inverted_question" defined at a-chlat1.ads:219, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__inverted_question
 use import "_gnatprove_standard".Main

 function inverted_question #"a-chlat1.ads" 219 0 0#"model" "model_trace:8223" "name:Inverted_Question" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_grave" defined at a-chlat1.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_grave
 use import "_gnatprove_standard".Main

 function uc_a_grave #"a-chlat1.ads" 223 0 0#"model" "model_trace:8236" "name:UC_A_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_acute" defined at a-chlat1.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_acute
 use import "_gnatprove_standard".Main

 function uc_a_acute #"a-chlat1.ads" 224 0 0#"model" "model_trace:8249" "name:UC_A_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_circumflex" defined at a-chlat1.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_circumflex
 use import "_gnatprove_standard".Main

 function uc_a_circumflex #"a-chlat1.ads" 225 0 0#"model" "model_trace:8262" "name:UC_A_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_tilde" defined at a-chlat1.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_tilde
 use import "_gnatprove_standard".Main

 function uc_a_tilde #"a-chlat1.ads" 226 0 0#"model" "model_trace:8275" "name:UC_A_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_diaeresis" defined at a-chlat1.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_diaeresis
 use import "_gnatprove_standard".Main

 function uc_a_diaeresis #"a-chlat1.ads" 227 0 0#"model" "model_trace:8288" "name:UC_A_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_a_ring" defined at a-chlat1.ads:228, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_a_ring
 use import "_gnatprove_standard".Main

 function uc_a_ring #"a-chlat1.ads" 228 0 0#"model" "model_trace:8301" "name:UC_A_Ring" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_ae_diphthong" defined at a-chlat1.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_ae_diphthong
 use import "_gnatprove_standard".Main

 function uc_ae_diphthong #"a-chlat1.ads" 229 0 0#"model" "model_trace:8314" "name:UC_AE_Diphthong" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_c_cedilla" defined at a-chlat1.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_c_cedilla
 use import "_gnatprove_standard".Main

 function uc_c_cedilla #"a-chlat1.ads" 230 0 0#"model" "model_trace:8327" "name:UC_C_Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_grave" defined at a-chlat1.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_grave
 use import "_gnatprove_standard".Main

 function uc_e_grave #"a-chlat1.ads" 231 0 0#"model" "model_trace:8340" "name:UC_E_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_acute" defined at a-chlat1.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_acute
 use import "_gnatprove_standard".Main

 function uc_e_acute #"a-chlat1.ads" 232 0 0#"model" "model_trace:8353" "name:UC_E_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_circumflex" defined at a-chlat1.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_circumflex
 use import "_gnatprove_standard".Main

 function uc_e_circumflex #"a-chlat1.ads" 233 0 0#"model" "model_trace:8366" "name:UC_E_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_e_diaeresis" defined at a-chlat1.ads:234, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_e_diaeresis
 use import "_gnatprove_standard".Main

 function uc_e_diaeresis #"a-chlat1.ads" 234 0 0#"model" "model_trace:8379" "name:UC_E_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_grave" defined at a-chlat1.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_grave
 use import "_gnatprove_standard".Main

 function uc_i_grave #"a-chlat1.ads" 235 0 0#"model" "model_trace:8392" "name:UC_I_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_acute" defined at a-chlat1.ads:236, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_acute
 use import "_gnatprove_standard".Main

 function uc_i_acute #"a-chlat1.ads" 236 0 0#"model" "model_trace:8405" "name:UC_I_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_circumflex" defined at a-chlat1.ads:237, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_circumflex
 use import "_gnatprove_standard".Main

 function uc_i_circumflex #"a-chlat1.ads" 237 0 0#"model" "model_trace:8418" "name:UC_I_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_i_diaeresis" defined at a-chlat1.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_i_diaeresis
 use import "_gnatprove_standard".Main

 function uc_i_diaeresis #"a-chlat1.ads" 238 0 0#"model" "model_trace:8431" "name:UC_I_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_icelandic_eth" defined at a-chlat1.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_icelandic_eth
 use import "_gnatprove_standard".Main

 function uc_icelandic_eth #"a-chlat1.ads" 242 0 0#"model" "model_trace:8444" "name:UC_Icelandic_Eth" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_n_tilde" defined at a-chlat1.ads:243, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_n_tilde
 use import "_gnatprove_standard".Main

 function uc_n_tilde #"a-chlat1.ads" 243 0 0#"model" "model_trace:8457" "name:UC_N_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_grave" defined at a-chlat1.ads:244, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_grave
 use import "_gnatprove_standard".Main

 function uc_o_grave #"a-chlat1.ads" 244 0 0#"model" "model_trace:8470" "name:UC_O_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_acute" defined at a-chlat1.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_acute
 use import "_gnatprove_standard".Main

 function uc_o_acute #"a-chlat1.ads" 245 0 0#"model" "model_trace:8483" "name:UC_O_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_circumflex" defined at a-chlat1.ads:246, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_circumflex
 use import "_gnatprove_standard".Main

 function uc_o_circumflex #"a-chlat1.ads" 246 0 0#"model" "model_trace:8496" "name:UC_O_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_tilde" defined at a-chlat1.ads:247, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_tilde
 use import "_gnatprove_standard".Main

 function uc_o_tilde #"a-chlat1.ads" 247 0 0#"model" "model_trace:8509" "name:UC_O_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_diaeresis" defined at a-chlat1.ads:248, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_diaeresis
 use import "_gnatprove_standard".Main

 function uc_o_diaeresis #"a-chlat1.ads" 248 0 0#"model" "model_trace:8522" "name:UC_O_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "multiplication_sign" defined at a-chlat1.ads:249, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__multiplication_sign
 use import "_gnatprove_standard".Main

 function multiplication_sign #"a-chlat1.ads" 249 0 0#"model" "model_trace:8535" "name:Multiplication_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_o_oblique_stroke" defined at a-chlat1.ads:250, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_o_oblique_stroke
 use import "_gnatprove_standard".Main

 function uc_o_oblique_stroke #"a-chlat1.ads" 250 0 0#"model" "model_trace:8548" "name:UC_O_Oblique_Stroke" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_grave" defined at a-chlat1.ads:251, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_grave
 use import "_gnatprove_standard".Main

 function uc_u_grave #"a-chlat1.ads" 251 0 0#"model" "model_trace:8561" "name:UC_U_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_acute" defined at a-chlat1.ads:252, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_acute
 use import "_gnatprove_standard".Main

 function uc_u_acute #"a-chlat1.ads" 252 0 0#"model" "model_trace:8574" "name:UC_U_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_circumflex" defined at a-chlat1.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_circumflex
 use import "_gnatprove_standard".Main

 function uc_u_circumflex #"a-chlat1.ads" 253 0 0#"model" "model_trace:8587" "name:UC_U_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_u_diaeresis" defined at a-chlat1.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_u_diaeresis
 use import "_gnatprove_standard".Main

 function uc_u_diaeresis #"a-chlat1.ads" 254 0 0#"model" "model_trace:8600" "name:UC_U_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_y_acute" defined at a-chlat1.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_y_acute
 use import "_gnatprove_standard".Main

 function uc_y_acute #"a-chlat1.ads" 255 0 0#"model" "model_trace:8613" "name:UC_Y_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "uc_icelandic_thorn" defined at a-chlat1.ads:256, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__uc_icelandic_thorn
 use import "_gnatprove_standard".Main

 function uc_icelandic_thorn #"a-chlat1.ads" 256 0 0#"model" "model_trace:8626" "name:UC_Icelandic_Thorn" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_german_sharp_s" defined at a-chlat1.ads:257, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_german_sharp_s
 use import "_gnatprove_standard".Main

 function lc_german_sharp_s #"a-chlat1.ads" 257 0 0#"model" "model_trace:8639" "name:LC_German_Sharp_S" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_grave" defined at a-chlat1.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_grave
 use import "_gnatprove_standard".Main

 function lc_a_grave #"a-chlat1.ads" 261 0 0#"model" "model_trace:8652" "name:LC_A_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_acute" defined at a-chlat1.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_acute
 use import "_gnatprove_standard".Main

 function lc_a_acute #"a-chlat1.ads" 262 0 0#"model" "model_trace:8665" "name:LC_A_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_circumflex" defined at a-chlat1.ads:263, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_circumflex
 use import "_gnatprove_standard".Main

 function lc_a_circumflex #"a-chlat1.ads" 263 0 0#"model" "model_trace:8678" "name:LC_A_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_tilde" defined at a-chlat1.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_tilde
 use import "_gnatprove_standard".Main

 function lc_a_tilde #"a-chlat1.ads" 264 0 0#"model" "model_trace:8691" "name:LC_A_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_diaeresis" defined at a-chlat1.ads:265, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_diaeresis
 use import "_gnatprove_standard".Main

 function lc_a_diaeresis #"a-chlat1.ads" 265 0 0#"model" "model_trace:8704" "name:LC_A_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_a_ring" defined at a-chlat1.ads:266, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_a_ring
 use import "_gnatprove_standard".Main

 function lc_a_ring #"a-chlat1.ads" 266 0 0#"model" "model_trace:8717" "name:LC_A_Ring" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_ae_diphthong" defined at a-chlat1.ads:267, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_ae_diphthong
 use import "_gnatprove_standard".Main

 function lc_ae_diphthong #"a-chlat1.ads" 267 0 0#"model" "model_trace:8730" "name:LC_AE_Diphthong" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_c_cedilla" defined at a-chlat1.ads:268, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_c_cedilla
 use import "_gnatprove_standard".Main

 function lc_c_cedilla #"a-chlat1.ads" 268 0 0#"model" "model_trace:8743" "name:LC_C_Cedilla" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_grave" defined at a-chlat1.ads:269, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_grave
 use import "_gnatprove_standard".Main

 function lc_e_grave #"a-chlat1.ads" 269 0 0#"model" "model_trace:8756" "name:LC_E_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_acute" defined at a-chlat1.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_acute
 use import "_gnatprove_standard".Main

 function lc_e_acute #"a-chlat1.ads" 270 0 0#"model" "model_trace:8769" "name:LC_E_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_circumflex" defined at a-chlat1.ads:271, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_circumflex
 use import "_gnatprove_standard".Main

 function lc_e_circumflex #"a-chlat1.ads" 271 0 0#"model" "model_trace:8782" "name:LC_E_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_e_diaeresis" defined at a-chlat1.ads:272, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_e_diaeresis
 use import "_gnatprove_standard".Main

 function lc_e_diaeresis #"a-chlat1.ads" 272 0 0#"model" "model_trace:8795" "name:LC_E_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_grave" defined at a-chlat1.ads:273, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_grave
 use import "_gnatprove_standard".Main

 function lc_i_grave #"a-chlat1.ads" 273 0 0#"model" "model_trace:8808" "name:LC_I_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_acute" defined at a-chlat1.ads:274, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_acute
 use import "_gnatprove_standard".Main

 function lc_i_acute #"a-chlat1.ads" 274 0 0#"model" "model_trace:8821" "name:LC_I_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_circumflex" defined at a-chlat1.ads:275, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_circumflex
 use import "_gnatprove_standard".Main

 function lc_i_circumflex #"a-chlat1.ads" 275 0 0#"model" "model_trace:8834" "name:LC_I_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_i_diaeresis" defined at a-chlat1.ads:276, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_i_diaeresis
 use import "_gnatprove_standard".Main

 function lc_i_diaeresis #"a-chlat1.ads" 276 0 0#"model" "model_trace:8847" "name:LC_I_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_icelandic_eth" defined at a-chlat1.ads:279, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_icelandic_eth
 use import "_gnatprove_standard".Main

 function lc_icelandic_eth #"a-chlat1.ads" 279 0 0#"model" "model_trace:8860" "name:LC_Icelandic_Eth" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_n_tilde" defined at a-chlat1.ads:280, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_n_tilde
 use import "_gnatprove_standard".Main

 function lc_n_tilde #"a-chlat1.ads" 280 0 0#"model" "model_trace:8873" "name:LC_N_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_grave" defined at a-chlat1.ads:281, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_grave
 use import "_gnatprove_standard".Main

 function lc_o_grave #"a-chlat1.ads" 281 0 0#"model" "model_trace:8886" "name:LC_O_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_acute" defined at a-chlat1.ads:282, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_acute
 use import "_gnatprove_standard".Main

 function lc_o_acute #"a-chlat1.ads" 282 0 0#"model" "model_trace:8899" "name:LC_O_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_circumflex" defined at a-chlat1.ads:283, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_circumflex
 use import "_gnatprove_standard".Main

 function lc_o_circumflex #"a-chlat1.ads" 283 0 0#"model" "model_trace:8912" "name:LC_O_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_tilde" defined at a-chlat1.ads:284, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_tilde
 use import "_gnatprove_standard".Main

 function lc_o_tilde #"a-chlat1.ads" 284 0 0#"model" "model_trace:8925" "name:LC_O_Tilde" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_diaeresis" defined at a-chlat1.ads:285, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_diaeresis
 use import "_gnatprove_standard".Main

 function lc_o_diaeresis #"a-chlat1.ads" 285 0 0#"model" "model_trace:8938" "name:LC_O_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "division_sign" defined at a-chlat1.ads:286, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__division_sign
 use import "_gnatprove_standard".Main

 function division_sign #"a-chlat1.ads" 286 0 0#"model" "model_trace:8951" "name:Division_Sign" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_o_oblique_stroke" defined at a-chlat1.ads:287, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_o_oblique_stroke
 use import "_gnatprove_standard".Main

 function lc_o_oblique_stroke #"a-chlat1.ads" 287 0 0#"model" "model_trace:8964" "name:LC_O_Oblique_Stroke" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_grave" defined at a-chlat1.ads:288, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_grave
 use import "_gnatprove_standard".Main

 function lc_u_grave #"a-chlat1.ads" 288 0 0#"model" "model_trace:8977" "name:LC_U_Grave" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_acute" defined at a-chlat1.ads:289, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_acute
 use import "_gnatprove_standard".Main

 function lc_u_acute #"a-chlat1.ads" 289 0 0#"model" "model_trace:8990" "name:LC_U_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_circumflex" defined at a-chlat1.ads:290, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_circumflex
 use import "_gnatprove_standard".Main

 function lc_u_circumflex #"a-chlat1.ads" 290 0 0#"model" "model_trace:9003" "name:LC_U_Circumflex" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_u_diaeresis" defined at a-chlat1.ads:291, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_u_diaeresis
 use import "_gnatprove_standard".Main

 function lc_u_diaeresis #"a-chlat1.ads" 291 0 0#"model" "model_trace:9016" "name:LC_U_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y_acute" defined at a-chlat1.ads:292, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y_acute
 use import "_gnatprove_standard".Main

 function lc_y_acute #"a-chlat1.ads" 292 0 0#"model" "model_trace:9029" "name:LC_Y_Acute" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_icelandic_thorn" defined at a-chlat1.ads:293, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_icelandic_thorn
 use import "_gnatprove_standard".Main

 function lc_icelandic_thorn #"a-chlat1.ads" 293 0 0#"model" "model_trace:9042" "name:LC_Icelandic_Thorn" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "lc_y_diaeresis" defined at a-chlat1.ads:294, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__characters__latin_1__lc_y_diaeresis
 use import "_gnatprove_standard".Main

 function lc_y_diaeresis #"a-chlat1.ads" 294 0 0#"model" "model_trace:9055" "name:LC_Y_Diaeresis" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__returncode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type returncode 
 
 function first 
   : int =
  0
 
 function last 
   : int =
  2
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = returncode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type returncode__ref =
  { mutable returncode__content "model_trace:" "name:" : returncode }
 
 function returncode__ref___projection 
   (a : returncode__ref) : returncode =
  a.returncode__content
 
 meta "model_projection" function returncode__ref___projection
 
 meta "inline : no" function returncode__ref___projection
 
 val returncode__havoc 
   (x : returncode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__returncode__rep
 use        Machine__returncode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__returncode.returncode, 
 predicate in_range = Machine__returncode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "max_program_length" defined at machine.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__max_program_length
 use import "_gnatprove_standard".Main

 function max_program_length #"machine.ads" 15 0 0#"model" "model_trace:5469" "name:MAX_PROGRAM_LENGTH" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramcounterB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tprogramcounterB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tprogramcounterB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tprogramcounterB__ref =
  { mutable tprogramcounterB__content "model_trace:" "name:" : tprogramcounterB }
 
 function tprogramcounterB__ref___projection 
   (a : tprogramcounterB__ref) : tprogramcounterB =
  a.tprogramcounterB__content
 
 meta "model_projection" function tprogramcounterB__ref___projection
 
 meta "inline : no" function tprogramcounterB__ref___projection
 
 val tprogramcounterB__havoc 
   (x : tprogramcounterB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramcounterB__rep
 use        Machine__TprogramcounterB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__TprogramcounterB.tprogramcounterB) : int =
  (Machine__TprogramcounterB.tprogramcounterB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__TprogramcounterB.tprogramcounterB, 
 predicate in_range = Machine__TprogramcounterB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__programcounter
 use import "_gnatprove_standard".Main
 use import "int".Int

 type programcounter =
  < range 1 65536 >
 
 function first 
   : int =
  1
 
 function last 
   : int =
  65536
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = programcounter, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type programcounter__ref =
  { mutable programcounter__content "model_trace:" "name:" : programcounter }
 
 function programcounter__ref___projection 
   (a : programcounter__ref) : programcounter =
  a.programcounter__content
 
 meta "model_projection" function programcounter__ref___projection
 
 meta "inline : no" function programcounter__ref___projection
 
 val programcounter__havoc 
   (x : programcounter__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__programcounter__rep
 use        Machine__programcounter
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__programcounter.programcounter) : int =
  (Machine__programcounter.programcounter'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__programcounter.programcounter, 
 predicate in_range = Machine__programcounter.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "TprogramB" defined at machine.ads:22, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Instruction__instr
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Instruction__instr.instr
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_154   : int.
   (if (( (a__first <= temp___idx_154) /\ (temp___idx_154 <= a__last) )) then (
    ((Instruction__instr.bool_eq (get a temp___idx_154) (get b ((b__first - a__first) + temp___idx_154))) = True)) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_154   : int.
    (if (( (a__first <= temp___idx_154) /\ (temp___idx_154 <= a__last) )) then (
     ((Instruction__instr.bool_eq (get a temp___idx_154) (get b ((b__first - a__first) + temp___idx_154))) = True)) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "TprogramB" defined at machine.ads:22, created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Instruction__instr__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Instruction__instr

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Instruction__instr.component_type, 
 type map = Array__Int__Instruction__instr.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Instruction__instr.get

end

(* Module for axiomatizing type "TprogramB" defined at machine.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Machine__TprogramB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr
 use        Machine__TprogramcounterB
 use        Machine__TprogramcounterB__rep
 use        Machine__programcounter
 use        Array__Int__Instruction__instr

 type component_type =
  Instruction__instr.instr
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Instruction__instr.map, 
 function array_bool_eq = Array__Int__Instruction__instr.bool_eq, 
 type index_base_type = Machine__TprogramcounterB.tprogramcounterB, 
 type index_rep_type = int, 
 function to_rep = Machine__TprogramcounterB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Machine__TprogramcounterB.in_range, 
 predicate index_dynamic_property = Machine__programcounter.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tprogramB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tprogramB__ref =
  { mutable tprogramB__content "model_trace:" "name:" : tprogramB }
 
 function tprogramB__ref___projection 
   (a : tprogramB__ref) : tprogramB =
  a.tprogramB__content
 
 meta "model_projection" function tprogramB__ref___projection
 
 meta "inline : no" function tprogramB__ref___projection
 
 val tprogramB__havoc 
   (x : tprogramB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "program" defined at machine.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Machine__program
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__instr
 use        Array__Int__Instruction__instr

 type component_type =
  Instruction__instr.instr
 
 function first 
   : int =
  1
 
 function last 
   : int =
  65536
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Instruction__instr.map, 
 function array_bool_eq = Array__Int__Instruction__instr.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "prog" defined at machine.ads:35, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.ads" 35 0 0#"model_projected" "model_trace:5511" "name:Prog" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.ads:36, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.ads" 36 0 0#"model" "model_trace:5520" "name:Cycles" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prog" defined at machine.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.ads" 47 0 0#"model_projected" "name:Prog" "model_trace:5556" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.ads" 48 0 0#"model" "name:Cycles" "model_trace:5565" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.ads:48, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Machine__detectinvalidbehaviour
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function detectinvalidbehaviour 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) : bool
 
 predicate detectinvalidbehaviour__function_guard 
   (result : bool) (prog : Array__Int__Instruction__instr.map) (cycles : int) 

end

(* Module for axiomatizing type "TdatavalB" defined at machine.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Machine__TdatavalB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tdatavalB =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tdatavalB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tdatavalB__ref =
  { mutable tdatavalB__content "model_trace:" "name:" : tdatavalB }
 
 function tdatavalB__ref___projection 
   (a : tdatavalB__ref) : tdatavalB =
  a.tdatavalB__content
 
 meta "model_projection" function tdatavalB__ref___projection
 
 meta "inline : no" function tdatavalB__ref___projection
 
 val tdatavalB__havoc 
   (x : tdatavalB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TdatavalB" defined at machine.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Machine__TdatavalB__rep
 use        Machine__TdatavalB
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__TdatavalB.tdatavalB) : int =
  (Machine__TdatavalB.tdatavalB'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__TdatavalB.tdatavalB, 
 predicate in_range = Machine__TdatavalB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "dataval" defined at machine.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Machine__dataval
 use import "_gnatprove_standard".Main
 use import "int".Int

 type dataval =
  < range -2147483648 2147483647 >
 
 function first 
   : int =
  ( -2147483648 )
 
 function last 
   : int =
  2147483647
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = dataval, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type dataval__ref =
  { mutable dataval__content "model_trace:" "name:" : dataval }
 
 function dataval__ref___projection 
   (a : dataval__ref) : dataval =
  a.dataval__content
 
 meta "model_projection" function dataval__ref___projection
 
 meta "inline : no" function dataval__ref___projection
 
 val dataval__havoc 
   (x : dataval__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "dataval" defined at machine.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Machine__dataval__rep
 use        Machine__dataval
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__dataval.dataval) : int =
  (Machine__dataval.dataval'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__dataval.dataval, 
 predicate in_range = Machine__dataval.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "TregisterB" defined at machine.adb:12, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Machine__dataval
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Machine__dataval__rep

 function index_I1_one 
   : int =
  1
 
 type component_type =
  Machine__dataval.dataval
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_155   : int.
   (if (( (a__first <= temp___idx_155) /\ (temp___idx_155 <= a__last) )) then (
    ((Machine__dataval__rep.to_rep (get a temp___idx_155)) = (Machine__dataval__rep.to_rep (get b ((b__first - a__first) + temp___idx_155))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_155   : int.
    (if (( (a__first <= temp___idx_155) /\ (temp___idx_155 <= a__last) )) then (
     ((Machine__dataval__rep.to_rep (get a temp___idx_155)) = (Machine__dataval__rep.to_rep (get b ((b__first - a__first) + temp___idx_155))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "TregisterB" defined at machine.adb:12, created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Machine__dataval__Concat
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Machine__dataval

 function index_Index_one 
   : int =
  1
 
 clone export "_gnatprove_standard".Array__1__Concat with
 type component_type = Array__Int__Machine__dataval.component_type, 
 type map = Array__Int__Machine__dataval.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Machine__dataval.get

end

(* Module for axiomatizing comparison for the array theory associated to type "TregisterB" defined at machine.adb:12, created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Machine__dataval_Comp
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval__rep
 use        Array__Int__Machine__dataval

 function index_Index_one 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = Array__Int__Machine__dataval.component_type, 
 function to_rep = Machine__dataval__rep.to_rep, 
 type map = Array__Int__Machine__dataval.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Machine__dataval.get, 
 function bool_eq = Array__Int__Machine__dataval.bool_eq

end

(* Module for axiomatizing type "TregisterB" defined at machine.adb:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__TregisterB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TregB
 use        Instruction__TregB__rep
 use        Instruction__reg
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TregB.tregB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TregB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TregB.in_range, 
 predicate index_dynamic_property = Instruction__reg.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tregisterB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tregisterB__ref =
  { mutable tregisterB__content "model_trace:" "name:" : tregisterB }
 
 function tregisterB__ref___projection 
   (a : tregisterB__ref) : tregisterB =
  a.tregisterB__content
 
 meta "model_projection" function tregisterB__ref___projection
 
 meta "inline : no" function tregisterB__ref___projection
 
 val tregisterB__havoc 
   (x : tregisterB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "register" defined at machine.adb:12, created in Gnat2Why.Types.Translate_Type *)
module Machine__register
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TmemB" defined at machine.adb:13, created in Gnat2Why.Types.Translate_Type *)
module Machine__TmemB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TaddrB
 use        Instruction__TaddrB__rep
 use        Instruction__addr
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TaddrB.taddrB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TaddrB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TaddrB.in_range, 
 predicate index_dynamic_property = Instruction__addr.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tmemB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tmemB__ref =
  { mutable tmemB__content "model_trace:" "name:" : tmemB }
 
 function tmemB__ref___projection 
   (a : tmemB__ref) : tmemB =
  a.tmemB__content
 
 meta "model_projection" function tmemB__ref___projection
 
 meta "inline : no" function tmemB__ref___projection
 
 val tmemB__havoc 
   (x : tmemB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "mem" defined at machine.adb:13, created in Gnat2Why.Types.Translate_Type *)
module Machine__mem
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TregsB" defined at machine.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Machine__TregsB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TregB
 use        Instruction__TregB__rep
 use        Instruction__reg
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TregB.tregB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TregB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TregB.in_range, 
 predicate index_dynamic_property = Instruction__reg.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tregsB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tregsB__ref =
  { mutable tregsB__content "model_trace:" "name:" : tregsB }
 
 function tregsB__ref___projection 
   (a : tregsB__ref) : tregsB =
  a.tregsB__content
 
 meta "model_projection" function tregsB__ref___projection
 
 meta "inline : no" function tregsB__ref___projection
 
 val tregsB__havoc 
   (x : tregsB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TregsT" defined at machine.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Machine__TregsT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7b" defined at machine.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Machine__T7b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t7b__ref =
  { mutable t7b__content "model_trace:" "name:" : t7b }
 
 function t7b__ref___projection 
   (a : t7b__ref) : t7b =
  a.t7b__content
 
 meta "model_projection" function t7b__ref___projection
 
 meta "inline : no" function t7b__ref___projection
 
 val t7b__havoc 
   (x : t7b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T7b" defined at machine.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Machine__T7b__rep
 use        Machine__T7b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__T7b.t7b) : int =
  (Machine__T7b.t7b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__T7b.t7b, 
 predicate in_range = Machine__T7b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T8b" defined at machine.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Machine__T8b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TmemoryB" defined at machine.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TmemoryB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__TaddrB
 use        Instruction__TaddrB__rep
 use        Instruction__addr
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 type index_base_type = Instruction__TaddrB.taddrB, 
 type index_rep_type = int, 
 function to_rep = Instruction__TaddrB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Instruction__TaddrB.in_range, 
 predicate index_dynamic_property = Instruction__addr.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tmemoryB =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tmemoryB__ref =
  { mutable tmemoryB__content "model_trace:" "name:" : tmemoryB }
 
 function tmemoryB__ref___projection 
   (a : tmemoryB__ref) : tmemoryB =
  a.tmemoryB__content
 
 meta "model_projection" function tmemoryB__ref___projection
 
 meta "inline : no" function tmemoryB__ref___projection
 
 val tmemoryB__havoc 
   (x : tmemoryB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TmemoryT" defined at machine.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__TmemoryT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11b" defined at machine.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__T11b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t11b__ref =
  { mutable t11b__content "model_trace:" "name:" : t11b }
 
 function t11b__ref___projection 
   (a : t11b__ref) : t11b =
  a.t11b__content
 
 meta "model_projection" function t11b__ref___projection
 
 meta "inline : no" function t11b__ref___projection
 
 val t11b__havoc 
   (x : t11b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T11b" defined at machine.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__T11b__rep
 use        Machine__T11b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__T11b.t11b) : int =
  (Machine__T11b.t11b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__T11b.t11b, 
 predicate in_range = Machine__T11b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T12b" defined at machine.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Machine__T12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "offs" defined at machine.adb:24, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__incpc__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 24 0 0#"model" "model_trace:9787" "name:Offs" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:24, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__incpc__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:37, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 37 0 0#"model" "model_trace:10034" "name:Rd" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:38, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 38 0 0#"model" "model_trace:10041" "name:Rs1" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:39, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doadd__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 39 0 0#"model" "model_trace:10048" "name:Rs2" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:39, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:52, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 52 0 0#"model" "name:Rd" "model_trace:10377" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:53, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 53 0 0#"model" "name:Rs1" "model_trace:10384" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:54, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dosub__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 54 0 0#"model" "name:Rs2" "model_trace:10391" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:66, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 66 0 0#"model" "name:Rd" "model_trace:10714" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:67, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 67 0 0#"model" "name:Rs1" "model_trace:10721" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:68, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domul__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 68 0 0#"model" "name:Rs2" "model_trace:10728" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:83, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 83 0 0#"model" "name:Rd" "model_trace:11143" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs1" defined at machine.adb:84, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rs1
 use import "_gnatprove_standard".Main

 function rs1 #"machine.adb" 84 0 0#"model" "name:Rs1" "model_trace:11150" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs1" defined at machine.adb:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rs1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs2" defined at machine.adb:85, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dodiv__rs2
 use import "_gnatprove_standard".Main

 function rs2 #"machine.adb" 85 0 0#"model" "name:Rs2" "model_trace:11157" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs2" defined at machine.adb:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__rs2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:96, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 96 0 0#"model" "name:Rd" "model_trace:11449" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rs" defined at machine.adb:97, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__rs
 use import "_gnatprove_standard".Main

 function rs #"machine.adb" 97 0 0#"model" "model_trace:11456" "name:Rs" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rs" defined at machine.adb:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__rs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:98, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__doldr__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 98 0 0#"model" "name:Offs" "model_trace:11463" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ra" defined at machine.adb:113, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__ra
 use import "_gnatprove_standard".Main

 function ra #"machine.adb" 113 0 0#"model" "model_trace:11822" "name:Ra" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ra" defined at machine.adb:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__ra___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:114, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 114 0 0#"model" "name:Offs" "model_trace:11829" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rb" defined at machine.adb:115, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dostr__rb
 use import "_gnatprove_standard".Main

 function rb #"machine.adb" 115 0 0#"model" "model_trace:11836" "name:Rb" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rb" defined at machine.adb:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__rb___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "rd" defined at machine.adb:130, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domov__rd
 use import "_gnatprove_standard".Main

 function rd #"machine.adb" 130 0 0#"model" "name:Rd" "model_trace:3154" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "rd" defined at machine.adb:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__rd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:131, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__domov__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 131 0 0#"model" "name:Offs" "model_trace:3163" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "C15b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C15b
 use import "_gnatprove_standard".Main

 function c15b #"machine.adb" 161 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C16b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C16b
 use import "_gnatprove_standard".Main

 function c16b #"machine.adb" 161 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C17b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C17b
 use import "_gnatprove_standard".Main

 function c17b #"machine.adb" 161 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C22b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C22b
 use import "_gnatprove_standard".Main

 function c22b #"machine.adb" 164 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C23b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C23b
 use import "_gnatprove_standard".Main

 function c23b #"machine.adb" 164 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C24b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C24b
 use import "_gnatprove_standard".Main

 function c24b #"machine.adb" 164 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C29b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C29b
 use import "_gnatprove_standard".Main

 function c29b #"machine.adb" 167 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C30b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C30b
 use import "_gnatprove_standard".Main

 function c30b #"machine.adb" 167 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C31b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C31b
 use import "_gnatprove_standard".Main

 function c31b #"machine.adb" 167 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C36b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C36b
 use import "_gnatprove_standard".Main

 function c36b #"machine.adb" 170 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C37b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C37b
 use import "_gnatprove_standard".Main

 function c37b #"machine.adb" 170 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C38b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C38b
 use import "_gnatprove_standard".Main

 function c38b #"machine.adb" 170 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C43b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C43b
 use import "_gnatprove_standard".Main

 function c43b #"machine.adb" 173 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C44b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C44b
 use import "_gnatprove_standard".Main

 function c44b #"machine.adb" 173 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C45b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C45b
 use import "_gnatprove_standard".Main

 function c45b #"machine.adb" 173 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C50b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C50b
 use import "_gnatprove_standard".Main

 function c50b #"machine.adb" 176 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C51b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C51b
 use import "_gnatprove_standard".Main

 function c51b #"machine.adb" 176 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C52b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C52b
 use import "_gnatprove_standard".Main

 function c52b #"machine.adb" 176 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C61b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C61b
 use import "_gnatprove_standard".Main

 function c61b #"machine.adb" 186 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C64b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__executeprogram__L_1__C64b
 use import "_gnatprove_standard".Main

 function c64b #"machine.adb" 189 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:204, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 204 0 0#"model_projected" "name:Inst" "model_trace:14465" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:204, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidadd__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:204, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidadd__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 204 0 0#"model_projected" "name:Regs" "model_trace:14472" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:204, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidadd__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S71b" defined at machine.adb:204, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidadd__S71b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s71b =
  __rep
 
 predicate in_range #"machine.adb" 204 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 204 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 204 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 204 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 204 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s71b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s71b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s71b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s71b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s71b) (b : s71b) : bool
 
 function dummy 
   : s71b
 
 type s71b__ref =
  { mutable s71b__content "model_trace:" "name:" : s71b }
 
 function s71b__ref___projection 
   (a : s71b__ref) : s71b =
  a.s71b__content
 
 meta "model_projection" function s71b__ref___projection
 
 meta "inline : no" function s71b__ref___projection
 
 val s71b__havoc 
   (x : s71b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:210, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 210 0 0#"model_projected" "name:Inst" "model_trace:14924" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:210, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidsub__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:210, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidsub__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 210 0 0#"model_projected" "name:Regs" "model_trace:14931" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:210, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidsub__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S74b" defined at machine.adb:210, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidsub__S74b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s74b =
  __rep
 
 predicate in_range #"machine.adb" 210 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 210 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 210 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 210 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 210 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s74b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s74b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s74b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s74b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s74b) (b : s74b) : bool
 
 function dummy 
   : s74b
 
 type s74b__ref =
  { mutable s74b__content "model_trace:" "name:" : s74b }
 
 function s74b__ref___projection 
   (a : s74b__ref) : s74b =
  a.s74b__content
 
 meta "model_projection" function s74b__ref___projection
 
 meta "inline : no" function s74b__ref___projection
 
 val s74b__havoc 
   (x : s74b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:216, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 216 0 0#"model_projected" "name:Inst" "model_trace:15383" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmul__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:216, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmul__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 216 0 0#"model_projected" "name:Regs" "model_trace:15390" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmul__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S77b" defined at machine.adb:216, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidmul__S77b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s77b =
  __rep
 
 predicate in_range #"machine.adb" 216 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 216 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 216 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 216 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 216 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s77b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s77b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s77b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s77b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s77b) (b : s77b) : bool
 
 function dummy 
   : s77b
 
 type s77b__ref =
  { mutable s77b__content "model_trace:" "name:" : s77b }
 
 function s77b__ref___projection 
   (a : s77b__ref) : s77b =
  a.s77b__content
 
 meta "model_projection" function s77b__ref___projection
 
 meta "inline : no" function s77b__ref___projection
 
 val s77b__havoc 
   (x : s77b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:223, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 223 0 0#"model_projected" "name:Inst" "model_trace:15940" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvaliddiv__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:223, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvaliddiv__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 223 0 0#"model_projected" "name:Regs" "model_trace:15947" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvaliddiv__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S80b" defined at machine.adb:223, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvaliddiv__S80b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s80b =
  __rep
 
 predicate in_range #"machine.adb" 223 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 223 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 223 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 223 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 223 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s80b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s80b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s80b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s80b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s80b) (b : s80b) : bool
 
 function dummy 
   : s80b
 
 type s80b__ref =
  { mutable s80b__content "model_trace:" "name:" : s80b }
 
 function s80b__ref___projection 
   (a : s80b__ref) : s80b =
  a.s80b__content
 
 meta "model_projection" function s80b__ref___projection
 
 meta "inline : no" function s80b__ref___projection
 
 val s80b__havoc 
   (x : s80b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:229, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidldr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 229 0 0#"model_projected" "name:Inst" "model_trace:16359" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidldr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:229, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidldr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 229 0 0#"model_projected" "name:Regs" "model_trace:16366" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidldr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S83b" defined at machine.adb:229, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidldr__S83b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s83b =
  __rep
 
 predicate in_range #"machine.adb" 229 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 229 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 229 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 229 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 229 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s83b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s83b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s83b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s83b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s83b) (b : s83b) : bool
 
 function dummy 
   : s83b
 
 type s83b__ref =
  { mutable s83b__content "model_trace:" "name:" : s83b }
 
 function s83b__ref___projection 
   (a : s83b__ref) : s83b =
  a.s83b__content
 
 meta "model_projection" function s83b__ref___projection
 
 meta "inline : no" function s83b__ref___projection
 
 val s83b__havoc 
   (x : s83b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:235, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 235 0 0#"model_projected" "name:Inst" "model_trace:16774" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:235, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidstr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 235 0 0#"model_projected" "name:Regs" "model_trace:16781" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidstr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S86b" defined at machine.adb:235, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidstr__S86b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s86b =
  __rep
 
 predicate in_range #"machine.adb" 235 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 235 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 235 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 235 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 235 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s86b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s86b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s86b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s86b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s86b) (b : s86b) : bool
 
 function dummy 
   : s86b
 
 type s86b__ref =
  { mutable s86b__content "model_trace:" "name:" : s86b }
 
 function s86b__ref___projection 
   (a : s86b__ref) : s86b =
  a.s86b__content
 
 meta "model_projection" function s86b__ref___projection
 
 meta "inline : no" function s86b__ref___projection
 
 val s86b__havoc 
   (x : s86b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:241, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidmov__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 241 0 0#"model_projected" "name:Inst" "model_trace:17187" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidmov__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S89b" defined at machine.adb:241, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidmov__S89b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s89b =
  __rep
 
 predicate in_range #"machine.adb" 241 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 241 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 241 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 241 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 241 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s89b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s89b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s89b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s89b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s89b) (b : s89b) : bool
 
 function dummy 
   : s89b
 
 type s89b__ref =
  { mutable s89b__content "model_trace:" "name:" : s89b }
 
 function s89b__ref___projection 
   (a : s89b__ref) : s89b =
  a.s89b__content
 
 meta "model_projection" function s89b__ref___projection
 
 meta "inline : no" function s89b__ref___projection
 
 val s89b__havoc 
   (x : s89b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:247, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjmp__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 247 0 0#"model_projected" "name:Inst" "model_trace:17561" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjmp__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:247, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjmp__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 247 0 0#"model" "name:PC" "model_trace:17568" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjmp__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S92b" defined at machine.adb:247, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidjmp__S92b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s92b =
  __rep
 
 predicate in_range #"machine.adb" 247 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 247 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 247 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 247 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 247 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s92b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s92b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s92b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s92b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s92b) (b : s92b) : bool
 
 function dummy 
   : s92b
 
 type s92b__ref =
  { mutable s92b__content "model_trace:" "name:" : s92b }
 
 function s92b__ref___projection 
   (a : s92b__ref) : s92b =
  a.s92b__content
 
 meta "model_projection" function s92b__ref___projection
 
 meta "inline : no" function s92b__ref___projection
 
 val s92b__havoc 
   (x : s92b__ref) : unit
  writes {x}

end

(* Module for defining the constant "inst" defined at machine.adb:253, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 253 0 0#"model_projected" "name:Inst" "model_trace:17970" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:253, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 253 0 0#"model" "name:PC" "model_trace:17977" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:253, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidjz__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 253 0 0#"model_projected" "name:Regs" "model_trace:17984" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidjz__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S95b" defined at machine.adb:253, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidjz__S95b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s95b =
  __rep
 
 predicate in_range #"machine.adb" 253 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 253 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 253 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 253 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 253 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s95b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s95b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s95b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s95b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s95b) (b : s95b) : bool
 
 function dummy 
   : s95b
 
 type s95b__ref =
  { mutable s95b__content "model_trace:" "name:" : s95b }
 
 function s95b__ref___projection 
   (a : s95b__ref) : s95b =
  a.s95b__content
 
 meta "model_projection" function s95b__ref___projection
 
 meta "inline : no" function s95b__ref___projection
 
 val s95b__havoc 
   (x : s95b__ref) : unit
  writes {x}

end

(* Module for defining the constant "cyclecount" defined at machine.adb:265, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidcycle__cyclecount
 use import "_gnatprove_standard".Main

 function cyclecount #"machine.adb" 265 0 0#"model" "name:CycleCount" "model_trace:18480" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:265, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidcycle__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.adb:265, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidcycle__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.adb" 265 0 0#"model" "name:Cycles" "model_trace:18487" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.adb:265, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidcycle__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pc" defined at machine.adb:270, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidpc__pc
 use import "_gnatprove_standard".Main

 function pc #"machine.adb" 270 0 0#"model" "name:PC" "model_trace:18659" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:270, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidpc__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offs" defined at machine.adb:270, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidpc__offs
 use import "_gnatprove_standard".Main

 function offs #"machine.adb" 270 0 0#"model" "name:Offs" "model_trace:18666" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "offs" defined at machine.adb:270, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidpc__offs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "inst" defined at machine.adb:276, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 276 0 0#"model_projected" "name:Inst" "model_trace:18899" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S101b" defined at machine.adb:276, created in Gnat2Why.Types.Translate_Type *)
module Machine__performadd__S101b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s101b =
  __rep
 
 predicate in_range #"machine.adb" 276 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 276 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 276 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 276 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 276 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s101b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s101b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s101b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s101b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s101b) (b : s101b) : bool
 
 function dummy 
   : s101b
 
 type s101b__ref =
  { mutable s101b__content "model_trace:" "name:" : s101b }
 
 function s101b__ref___projection 
   (a : s101b__ref) : s101b =
  a.s101b__content
 
 meta "model_projection" function s101b__ref___projection
 
 meta "inline : no" function s101b__ref___projection
 
 val s101b__havoc 
   (x : s101b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C102b" defined at machine.adb:278, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__C102b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c102b #"machine.adb" 278 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C107b" defined at machine.adb:280, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performadd__C107b
 use import "_gnatprove_standard".Main

 function c107b #"machine.adb" 280 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:287, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 287 0 0#"model_projected" "name:Inst" "model_trace:19663" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:287, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S111b" defined at machine.adb:287, created in Gnat2Why.Types.Translate_Type *)
module Machine__performsub__S111b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s111b =
  __rep
 
 predicate in_range #"machine.adb" 287 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 287 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 287 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 287 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 287 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s111b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s111b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s111b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s111b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s111b) (b : s111b) : bool
 
 function dummy 
   : s111b
 
 type s111b__ref =
  { mutable s111b__content "model_trace:" "name:" : s111b }
 
 function s111b__ref___projection 
   (a : s111b__ref) : s111b =
  a.s111b__content
 
 meta "model_projection" function s111b__ref___projection
 
 meta "inline : no" function s111b__ref___projection
 
 val s111b__havoc 
   (x : s111b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C112b" defined at machine.adb:289, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__C112b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c112b #"machine.adb" 289 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C117b" defined at machine.adb:291, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performsub__C117b
 use import "_gnatprove_standard".Main

 function c117b #"machine.adb" 291 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:298, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 298 0 0#"model_projected" "name:Inst" "model_trace:20427" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:298, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S121b" defined at machine.adb:298, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmul__S121b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s121b =
  __rep
 
 predicate in_range #"machine.adb" 298 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 298 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 298 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 298 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 298 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s121b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s121b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s121b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s121b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s121b) (b : s121b) : bool
 
 function dummy 
   : s121b
 
 type s121b__ref =
  { mutable s121b__content "model_trace:" "name:" : s121b }
 
 function s121b__ref___projection 
   (a : s121b__ref) : s121b =
  a.s121b__content
 
 meta "model_projection" function s121b__ref___projection
 
 meta "inline : no" function s121b__ref___projection
 
 val s121b__havoc 
   (x : s121b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C122b" defined at machine.adb:300, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__C122b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c122b #"machine.adb" 300 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C127b" defined at machine.adb:302, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmul__C127b
 use import "_gnatprove_standard".Main

 function c127b #"machine.adb" 302 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:309, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 309 0 0#"model_projected" "name:Inst" "model_trace:21270" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:309, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S131b" defined at machine.adb:309, created in Gnat2Why.Types.Translate_Type *)
module Machine__performdiv__S131b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s131b =
  __rep
 
 predicate in_range #"machine.adb" 309 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 309 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 309 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 309 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 309 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s131b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s131b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s131b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s131b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s131b) (b : s131b) : bool
 
 function dummy 
   : s131b
 
 type s131b__ref =
  { mutable s131b__content "model_trace:" "name:" : s131b }
 
 function s131b__ref___projection 
   (a : s131b__ref) : s131b =
  a.s131b__content
 
 meta "model_projection" function s131b__ref___projection
 
 meta "inline : no" function s131b__ref___projection
 
 val s131b__havoc 
   (x : s131b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C132b" defined at machine.adb:311, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__C132b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c132b #"machine.adb" 311 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C137b" defined at machine.adb:313, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performdiv__C137b
 use import "_gnatprove_standard".Main

 function c137b #"machine.adb" 313 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 320 0 0#"model_projected" "name:Inst" "model_trace:22001" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "memory" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__memory
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function memory #"machine.adb" 320 0 0#"model_projected" "name:Memory" "model_trace:22022" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "memory" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__memory___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S141b" defined at machine.adb:320, created in Gnat2Why.Types.Translate_Type *)
module Machine__performldr__S141b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s141b =
  __rep
 
 predicate in_range #"machine.adb" 320 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 320 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 320 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 320 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 320 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s141b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s141b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s141b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s141b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s141b) (b : s141b) : bool
 
 function dummy 
   : s141b
 
 type s141b__ref =
  { mutable s141b__content "model_trace:" "name:" : s141b }
 
 function s141b__ref___projection 
   (a : s141b__ref) : s141b =
  a.s141b__content
 
 meta "model_projection" function s141b__ref___projection
 
 meta "inline : no" function s141b__ref___projection
 
 val s141b__havoc 
   (x : s141b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C142b" defined at machine.adb:322, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__C142b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c142b #"machine.adb" 322 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C147b" defined at machine.adb:324, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performldr__C147b
 use import "_gnatprove_standard".Main

 function c147b #"machine.adb" 324 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:331, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 331 0 0#"model_projected" "name:Inst" "model_trace:22776" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:331, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 331 0 0#"model_projected" "name:Regs" "model_trace:22790" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S151b" defined at machine.adb:331, created in Gnat2Why.Types.Translate_Type *)
module Machine__performstr__S151b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s151b =
  __rep
 
 predicate in_range #"machine.adb" 331 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 331 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 331 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 331 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 331 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s151b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s151b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s151b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s151b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s151b) (b : s151b) : bool
 
 function dummy 
   : s151b
 
 type s151b__ref =
  { mutable s151b__content "model_trace:" "name:" : s151b }
 
 function s151b__ref___projection 
   (a : s151b__ref) : s151b =
  a.s151b__content
 
 meta "model_projection" function s151b__ref___projection
 
 meta "inline : no" function s151b__ref___projection
 
 val s151b__havoc 
   (x : s151b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C152b" defined at machine.adb:333, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__C152b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c152b #"machine.adb" 333 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C157b" defined at machine.adb:335, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performstr__C157b
 use import "_gnatprove_standard".Main

 function c157b #"machine.adb" 335 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:342, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 342 0 0#"model_projected" "name:Inst" "model_trace:23549" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:342, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S161b" defined at machine.adb:342, created in Gnat2Why.Types.Translate_Type *)
module Machine__performmov__S161b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s161b =
  __rep
 
 predicate in_range #"machine.adb" 342 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 342 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 342 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 342 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 342 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s161b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s161b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s161b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s161b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s161b) (b : s161b) : bool
 
 function dummy 
   : s161b
 
 type s161b__ref =
  { mutable s161b__content "model_trace:" "name:" : s161b }
 
 function s161b__ref___projection 
   (a : s161b__ref) : s161b =
  a.s161b__content
 
 meta "model_projection" function s161b__ref___projection
 
 meta "inline : no" function s161b__ref___projection
 
 val s161b__havoc 
   (x : s161b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C162b" defined at machine.adb:344, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__C162b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c162b #"machine.adb" 344 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C166b" defined at machine.adb:346, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performmov__C166b
 use import "_gnatprove_standard".Main

 function c166b #"machine.adb" 346 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:353, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 353 0 0#"model_projected" "name:Inst" "model_trace:24238" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:353, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S170b" defined at machine.adb:353, created in Gnat2Why.Types.Translate_Type *)
module Machine__performjmp__S170b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s170b =
  __rep
 
 predicate in_range #"machine.adb" 353 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 353 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 353 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 353 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 353 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s170b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s170b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s170b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s170b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s170b) (b : s170b) : bool
 
 function dummy 
   : s170b
 
 type s170b__ref =
  { mutable s170b__content "model_trace:" "name:" : s170b }
 
 function s170b__ref___projection 
   (a : s170b__ref) : s170b =
  a.s170b__content
 
 meta "model_projection" function s170b__ref___projection
 
 meta "inline : no" function s170b__ref___projection
 
 val s170b__havoc 
   (x : s170b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C171b" defined at machine.adb:355, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C171b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c171b #"machine.adb" 355 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C172b" defined at machine.adb:355, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C172b
 use import "_gnatprove_standard".Main

 function c172b #"machine.adb" 355 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C176b" defined at machine.adb:356, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C176b
 use import "_gnatprove_standard".Main

 function c176b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C177b" defined at machine.adb:356, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjmp__C177b
 use import "_gnatprove_standard".Main

 function c177b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "inst" defined at machine.adb:363, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function inst #"machine.adb" 363 0 0#"model_projected" "name:Inst" "model_trace:24887" 
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:363, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "regs" defined at machine.adb:363, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function regs #"machine.adb" 363 0 0#"model_projected" "name:Regs" "model_trace:24901" 
   : Array__Int__Machine__dataval.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:363, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "S181b" defined at machine.adb:363, created in Gnat2Why.Types.Translate_Type *)
module Machine__performjz__S181b
 use export Instruction__instr__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 type s181b =
  __rep
 
 predicate in_range #"machine.adb" 363 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr)  =
  #"machine.adb" 363 0 0#(rec__instruction__instr__op = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op a.Instruction__instr.__split_discrs)))
 
 val range_check_ #"machine.adb" 363 0 0#
   (rec__instruction__instr__op : int) (a : Instruction__instr.instr) : Instruction__instr.instr
  requires { #"machine.adb" 363 0 0# (in_range rec__instruction__instr__op a) }
  ensures { #"machine.adb" 363 0 0# (result = a) }
 
 function value__size 
   : int
 
 function object__size 
   (a : s181b) : int
 
 function value__alignment 
   : int
 
 function object__alignment 
   (a : s181b) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a   : s181b.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a   : s181b.
   ((object__alignment a) >= 0))
 
 function instruction__instr__op__first__bit 
   : int
 
 function instruction__instr__op__last__bit 
   : int
 
 function instruction__instr__op__position 
   : int
 
 axiom instruction__instr__op__first__bit_axiom :
  ((instruction__instr__op__first__bit ) >= 0)
 
 axiom instruction__instr__op__last__bit_axiom :
  ((instruction__instr__op__last__bit ) > (instruction__instr__op__first__bit ))
 
 axiom instruction__instr__op__position_axiom :
  ((instruction__instr__op__position ) >= 0)
 
 function instruction__instr__addrd__first__bit 
   : int
 
 function instruction__instr__addrd__last__bit 
   : int
 
 function instruction__instr__addrd__position 
   : int
 
 axiom instruction__instr__addrd__first__bit_axiom :
  ((instruction__instr__addrd__first__bit ) >= 0)
 
 axiom instruction__instr__addrd__last__bit_axiom :
  ((instruction__instr__addrd__last__bit ) > (instruction__instr__addrd__first__bit ))
 
 axiom instruction__instr__addrd__position_axiom :
  ((instruction__instr__addrd__position ) >= 0)
 
 function instruction__instr__addrs1__first__bit 
   : int
 
 function instruction__instr__addrs1__last__bit 
   : int
 
 function instruction__instr__addrs1__position 
   : int
 
 axiom instruction__instr__addrs1__first__bit_axiom :
  ((instruction__instr__addrs1__first__bit ) >= 0)
 
 axiom instruction__instr__addrs1__last__bit_axiom :
  ((instruction__instr__addrs1__last__bit ) > (instruction__instr__addrs1__first__bit ))
 
 axiom instruction__instr__addrs1__position_axiom :
  ((instruction__instr__addrs1__position ) >= 0)
 
 function instruction__instr__addrs2__first__bit 
   : int
 
 function instruction__instr__addrs2__last__bit 
   : int
 
 function instruction__instr__addrs2__position 
   : int
 
 axiom instruction__instr__addrs2__first__bit_axiom :
  ((instruction__instr__addrs2__first__bit ) >= 0)
 
 axiom instruction__instr__addrs2__last__bit_axiom :
  ((instruction__instr__addrs2__last__bit ) > (instruction__instr__addrs2__first__bit ))
 
 axiom instruction__instr__addrs2__position_axiom :
  ((instruction__instr__addrs2__position ) >= 0)
 
 function instruction__instr__subrd__first__bit 
   : int
 
 function instruction__instr__subrd__last__bit 
   : int
 
 function instruction__instr__subrd__position 
   : int
 
 axiom instruction__instr__subrd__first__bit_axiom :
  ((instruction__instr__subrd__first__bit ) >= 0)
 
 axiom instruction__instr__subrd__last__bit_axiom :
  ((instruction__instr__subrd__last__bit ) > (instruction__instr__subrd__first__bit ))
 
 axiom instruction__instr__subrd__position_axiom :
  ((instruction__instr__subrd__position ) >= 0)
 
 function instruction__instr__subrs1__first__bit 
   : int
 
 function instruction__instr__subrs1__last__bit 
   : int
 
 function instruction__instr__subrs1__position 
   : int
 
 axiom instruction__instr__subrs1__first__bit_axiom :
  ((instruction__instr__subrs1__first__bit ) >= 0)
 
 axiom instruction__instr__subrs1__last__bit_axiom :
  ((instruction__instr__subrs1__last__bit ) > (instruction__instr__subrs1__first__bit ))
 
 axiom instruction__instr__subrs1__position_axiom :
  ((instruction__instr__subrs1__position ) >= 0)
 
 function instruction__instr__subrs2__first__bit 
   : int
 
 function instruction__instr__subrs2__last__bit 
   : int
 
 function instruction__instr__subrs2__position 
   : int
 
 axiom instruction__instr__subrs2__first__bit_axiom :
  ((instruction__instr__subrs2__first__bit ) >= 0)
 
 axiom instruction__instr__subrs2__last__bit_axiom :
  ((instruction__instr__subrs2__last__bit ) > (instruction__instr__subrs2__first__bit ))
 
 axiom instruction__instr__subrs2__position_axiom :
  ((instruction__instr__subrs2__position ) >= 0)
 
 function instruction__instr__mulrd__first__bit 
   : int
 
 function instruction__instr__mulrd__last__bit 
   : int
 
 function instruction__instr__mulrd__position 
   : int
 
 axiom instruction__instr__mulrd__first__bit_axiom :
  ((instruction__instr__mulrd__first__bit ) >= 0)
 
 axiom instruction__instr__mulrd__last__bit_axiom :
  ((instruction__instr__mulrd__last__bit ) > (instruction__instr__mulrd__first__bit ))
 
 axiom instruction__instr__mulrd__position_axiom :
  ((instruction__instr__mulrd__position ) >= 0)
 
 function instruction__instr__mulrs1__first__bit 
   : int
 
 function instruction__instr__mulrs1__last__bit 
   : int
 
 function instruction__instr__mulrs1__position 
   : int
 
 axiom instruction__instr__mulrs1__first__bit_axiom :
  ((instruction__instr__mulrs1__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs1__last__bit_axiom :
  ((instruction__instr__mulrs1__last__bit ) > (instruction__instr__mulrs1__first__bit ))
 
 axiom instruction__instr__mulrs1__position_axiom :
  ((instruction__instr__mulrs1__position ) >= 0)
 
 function instruction__instr__mulrs2__first__bit 
   : int
 
 function instruction__instr__mulrs2__last__bit 
   : int
 
 function instruction__instr__mulrs2__position 
   : int
 
 axiom instruction__instr__mulrs2__first__bit_axiom :
  ((instruction__instr__mulrs2__first__bit ) >= 0)
 
 axiom instruction__instr__mulrs2__last__bit_axiom :
  ((instruction__instr__mulrs2__last__bit ) > (instruction__instr__mulrs2__first__bit ))
 
 axiom instruction__instr__mulrs2__position_axiom :
  ((instruction__instr__mulrs2__position ) >= 0)
 
 function instruction__instr__divrd__first__bit 
   : int
 
 function instruction__instr__divrd__last__bit 
   : int
 
 function instruction__instr__divrd__position 
   : int
 
 axiom instruction__instr__divrd__first__bit_axiom :
  ((instruction__instr__divrd__first__bit ) >= 0)
 
 axiom instruction__instr__divrd__last__bit_axiom :
  ((instruction__instr__divrd__last__bit ) > (instruction__instr__divrd__first__bit ))
 
 axiom instruction__instr__divrd__position_axiom :
  ((instruction__instr__divrd__position ) >= 0)
 
 function instruction__instr__divrs1__first__bit 
   : int
 
 function instruction__instr__divrs1__last__bit 
   : int
 
 function instruction__instr__divrs1__position 
   : int
 
 axiom instruction__instr__divrs1__first__bit_axiom :
  ((instruction__instr__divrs1__first__bit ) >= 0)
 
 axiom instruction__instr__divrs1__last__bit_axiom :
  ((instruction__instr__divrs1__last__bit ) > (instruction__instr__divrs1__first__bit ))
 
 axiom instruction__instr__divrs1__position_axiom :
  ((instruction__instr__divrs1__position ) >= 0)
 
 function instruction__instr__divrs2__first__bit 
   : int
 
 function instruction__instr__divrs2__last__bit 
   : int
 
 function instruction__instr__divrs2__position 
   : int
 
 axiom instruction__instr__divrs2__first__bit_axiom :
  ((instruction__instr__divrs2__first__bit ) >= 0)
 
 axiom instruction__instr__divrs2__last__bit_axiom :
  ((instruction__instr__divrs2__last__bit ) > (instruction__instr__divrs2__first__bit ))
 
 axiom instruction__instr__divrs2__position_axiom :
  ((instruction__instr__divrs2__position ) >= 0)
 
 function instruction__instr__retrs__first__bit 
   : int
 
 function instruction__instr__retrs__last__bit 
   : int
 
 function instruction__instr__retrs__position 
   : int
 
 axiom instruction__instr__retrs__first__bit_axiom :
  ((instruction__instr__retrs__first__bit ) >= 0)
 
 axiom instruction__instr__retrs__last__bit_axiom :
  ((instruction__instr__retrs__last__bit ) > (instruction__instr__retrs__first__bit ))
 
 axiom instruction__instr__retrs__position_axiom :
  ((instruction__instr__retrs__position ) >= 0)
 
 function instruction__instr__ldrrd__first__bit 
   : int
 
 function instruction__instr__ldrrd__last__bit 
   : int
 
 function instruction__instr__ldrrd__position 
   : int
 
 axiom instruction__instr__ldrrd__first__bit_axiom :
  ((instruction__instr__ldrrd__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrd__last__bit_axiom :
  ((instruction__instr__ldrrd__last__bit ) > (instruction__instr__ldrrd__first__bit ))
 
 axiom instruction__instr__ldrrd__position_axiom :
  ((instruction__instr__ldrrd__position ) >= 0)
 
 function instruction__instr__ldrrs__first__bit 
   : int
 
 function instruction__instr__ldrrs__last__bit 
   : int
 
 function instruction__instr__ldrrs__position 
   : int
 
 axiom instruction__instr__ldrrs__first__bit_axiom :
  ((instruction__instr__ldrrs__first__bit ) >= 0)
 
 axiom instruction__instr__ldrrs__last__bit_axiom :
  ((instruction__instr__ldrrs__last__bit ) > (instruction__instr__ldrrs__first__bit ))
 
 axiom instruction__instr__ldrrs__position_axiom :
  ((instruction__instr__ldrrs__position ) >= 0)
 
 function instruction__instr__ldroffs__first__bit 
   : int
 
 function instruction__instr__ldroffs__last__bit 
   : int
 
 function instruction__instr__ldroffs__position 
   : int
 
 axiom instruction__instr__ldroffs__first__bit_axiom :
  ((instruction__instr__ldroffs__first__bit ) >= 0)
 
 axiom instruction__instr__ldroffs__last__bit_axiom :
  ((instruction__instr__ldroffs__last__bit ) > (instruction__instr__ldroffs__first__bit ))
 
 axiom instruction__instr__ldroffs__position_axiom :
  ((instruction__instr__ldroffs__position ) >= 0)
 
 function instruction__instr__strra__first__bit 
   : int
 
 function instruction__instr__strra__last__bit 
   : int
 
 function instruction__instr__strra__position 
   : int
 
 axiom instruction__instr__strra__first__bit_axiom :
  ((instruction__instr__strra__first__bit ) >= 0)
 
 axiom instruction__instr__strra__last__bit_axiom :
  ((instruction__instr__strra__last__bit ) > (instruction__instr__strra__first__bit ))
 
 axiom instruction__instr__strra__position_axiom :
  ((instruction__instr__strra__position ) >= 0)
 
 function instruction__instr__stroffs__first__bit 
   : int
 
 function instruction__instr__stroffs__last__bit 
   : int
 
 function instruction__instr__stroffs__position 
   : int
 
 axiom instruction__instr__stroffs__first__bit_axiom :
  ((instruction__instr__stroffs__first__bit ) >= 0)
 
 axiom instruction__instr__stroffs__last__bit_axiom :
  ((instruction__instr__stroffs__last__bit ) > (instruction__instr__stroffs__first__bit ))
 
 axiom instruction__instr__stroffs__position_axiom :
  ((instruction__instr__stroffs__position ) >= 0)
 
 function instruction__instr__strrb__first__bit 
   : int
 
 function instruction__instr__strrb__last__bit 
   : int
 
 function instruction__instr__strrb__position 
   : int
 
 axiom instruction__instr__strrb__first__bit_axiom :
  ((instruction__instr__strrb__first__bit ) >= 0)
 
 axiom instruction__instr__strrb__last__bit_axiom :
  ((instruction__instr__strrb__last__bit ) > (instruction__instr__strrb__first__bit ))
 
 axiom instruction__instr__strrb__position_axiom :
  ((instruction__instr__strrb__position ) >= 0)
 
 function instruction__instr__movrd__first__bit 
   : int
 
 function instruction__instr__movrd__last__bit 
   : int
 
 function instruction__instr__movrd__position 
   : int
 
 axiom instruction__instr__movrd__first__bit_axiom :
  ((instruction__instr__movrd__first__bit ) >= 0)
 
 axiom instruction__instr__movrd__last__bit_axiom :
  ((instruction__instr__movrd__last__bit ) > (instruction__instr__movrd__first__bit ))
 
 axiom instruction__instr__movrd__position_axiom :
  ((instruction__instr__movrd__position ) >= 0)
 
 function instruction__instr__movoffs__first__bit 
   : int
 
 function instruction__instr__movoffs__last__bit 
   : int
 
 function instruction__instr__movoffs__position 
   : int
 
 axiom instruction__instr__movoffs__first__bit_axiom :
  ((instruction__instr__movoffs__first__bit ) >= 0)
 
 axiom instruction__instr__movoffs__last__bit_axiom :
  ((instruction__instr__movoffs__last__bit ) > (instruction__instr__movoffs__first__bit ))
 
 axiom instruction__instr__movoffs__position_axiom :
  ((instruction__instr__movoffs__position ) >= 0)
 
 function instruction__instr__jmpoffs__first__bit 
   : int
 
 function instruction__instr__jmpoffs__last__bit 
   : int
 
 function instruction__instr__jmpoffs__position 
   : int
 
 axiom instruction__instr__jmpoffs__first__bit_axiom :
  ((instruction__instr__jmpoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jmpoffs__last__bit_axiom :
  ((instruction__instr__jmpoffs__last__bit ) > (instruction__instr__jmpoffs__first__bit ))
 
 axiom instruction__instr__jmpoffs__position_axiom :
  ((instruction__instr__jmpoffs__position ) >= 0)
 
 function instruction__instr__jzra__first__bit 
   : int
 
 function instruction__instr__jzra__last__bit 
   : int
 
 function instruction__instr__jzra__position 
   : int
 
 axiom instruction__instr__jzra__first__bit_axiom :
  ((instruction__instr__jzra__first__bit ) >= 0)
 
 axiom instruction__instr__jzra__last__bit_axiom :
  ((instruction__instr__jzra__last__bit ) > (instruction__instr__jzra__first__bit ))
 
 axiom instruction__instr__jzra__position_axiom :
  ((instruction__instr__jzra__position ) >= 0)
 
 function instruction__instr__jzoffs__first__bit 
   : int
 
 function instruction__instr__jzoffs__last__bit 
   : int
 
 function instruction__instr__jzoffs__position 
   : int
 
 axiom instruction__instr__jzoffs__first__bit_axiom :
  ((instruction__instr__jzoffs__first__bit ) >= 0)
 
 axiom instruction__instr__jzoffs__last__bit_axiom :
  ((instruction__instr__jzoffs__last__bit ) > (instruction__instr__jzoffs__first__bit ))
 
 axiom instruction__instr__jzoffs__position_axiom :
  ((instruction__instr__jzoffs__position ) >= 0)
 
 function user_eq 
   (a : s181b) (b : s181b) : bool
 
 function dummy 
   : s181b
 
 type s181b__ref =
  { mutable s181b__content "model_trace:" "name:" : s181b }
 
 function s181b__ref___projection 
   (a : s181b__ref) : s181b =
  a.s181b__content
 
 meta "model_projection" function s181b__ref___projection
 
 meta "inline : no" function s181b__ref___projection
 
 val s181b__havoc 
   (x : s181b__ref) : unit
  writes {x}

end

(* Module for defining the constant "C182b" defined at machine.adb:365, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C182b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c182b #"machine.adb" 365 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C183b" defined at machine.adb:365, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C183b
 use import "_gnatprove_standard".Main

 function c183b #"machine.adb" 365 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C188b" defined at machine.adb:367, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C188b
 use import "_gnatprove_standard".Main

 function c188b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C189b" defined at machine.adb:367, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C189b
 use import "_gnatprove_standard".Main

 function c189b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C193b" defined at machine.adb:372, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performjz__C193b
 use import "_gnatprove_standard".Main

 function c193b #"machine.adb" 372 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C197b" defined at machine.adb:382, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__performnop__C197b
 use import "_gnatprove_standard".Main

 function c197b #"machine.adb" 382 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "prog" defined at machine.adb:387, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__prog
 use import "_gnatprove_standard".Main
 use        Array__Int__Instruction__instr

 function prog #"machine.adb" 387 0 0#"model_projected" "name:Prog" "model_trace:26049" 
   : Array__Int__Instruction__instr.map
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "prog" defined at machine.adb:387, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__prog___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "cycles" defined at machine.adb:387, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__cycles
 use import "_gnatprove_standard".Main

 function cycles #"machine.adb" 387 0 0#"model" "name:Cycles" "model_trace:26056" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cycles" defined at machine.adb:387, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__cycles___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T206b" defined at machine.adb:391, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T206b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t206b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t206b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t206b__ref =
  { mutable t206b__content "model_trace:" "name:" : t206b }
 
 function t206b__ref___projection 
   (a : t206b__ref) : t206b =
  a.t206b__content
 
 meta "model_projection" function t206b__ref___projection
 
 meta "inline : no" function t206b__ref___projection
 
 val t206b__havoc 
   (x : t206b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T206b" defined at machine.adb:391, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T206b__rep
 use        Machine__dynamicanalysis__T206b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__dynamicanalysis__T206b.t206b) : int =
  (Machine__dynamicanalysis__T206b.t206b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__dynamicanalysis__T206b.t206b, 
 predicate in_range = Machine__dynamicanalysis__T206b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T207b" defined at machine.adb:391, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T207b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T208b" defined at machine.adb:392, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T208b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t208b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t208b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t208b__ref =
  { mutable t208b__content "model_trace:" "name:" : t208b }
 
 function t208b__ref___projection 
   (a : t208b__ref) : t208b =
  a.t208b__content
 
 meta "model_projection" function t208b__ref___projection
 
 meta "inline : no" function t208b__ref___projection
 
 val t208b__havoc 
   (x : t208b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T208b" defined at machine.adb:392, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T208b__rep
 use        Machine__dynamicanalysis__T208b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__dynamicanalysis__T208b.t208b) : int =
  (Machine__dynamicanalysis__T208b.t208b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__dynamicanalysis__T208b.t208b, 
 predicate in_range = Machine__dynamicanalysis__T208b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T209b" defined at machine.adb:392, created in Gnat2Why.Types.Translate_Type *)
module Machine__dynamicanalysis__T209b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "C210b" defined at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C210b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c210b #"machine.adb" 403 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C215b" defined at machine.adb:278 instantiated at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B214b__C215b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c215b #"machine.adb" 278 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C220b" defined at machine.adb:280 instantiated at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B214b__C220b
 use import "_gnatprove_standard".Main

 function c220b #"machine.adb" 280 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C224b" defined at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C224b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c224b #"machine.adb" 405 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C229b" defined at machine.adb:289 instantiated at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B228b__C229b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c229b #"machine.adb" 289 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C234b" defined at machine.adb:291 instantiated at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B228b__C234b
 use import "_gnatprove_standard".Main

 function c234b #"machine.adb" 291 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C238b" defined at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C238b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c238b #"machine.adb" 407 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C243b" defined at machine.adb:300 instantiated at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B242b__C243b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c243b #"machine.adb" 300 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C248b" defined at machine.adb:302 instantiated at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B242b__C248b
 use import "_gnatprove_standard".Main

 function c248b #"machine.adb" 302 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C252b" defined at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C252b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c252b #"machine.adb" 409 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C257b" defined at machine.adb:311 instantiated at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B256b__C257b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c257b #"machine.adb" 311 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C262b" defined at machine.adb:313 instantiated at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B256b__C262b
 use import "_gnatprove_standard".Main

 function c262b #"machine.adb" 313 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C266b" defined at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C266b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c266b #"machine.adb" 411 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C272b" defined at machine.adb:322 instantiated at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B271b__C272b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c272b #"machine.adb" 322 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C277b" defined at machine.adb:324 instantiated at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B271b__C277b
 use import "_gnatprove_standard".Main

 function c277b #"machine.adb" 324 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C281b" defined at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C281b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c281b #"machine.adb" 413 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C287b" defined at machine.adb:333 instantiated at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B286b__C287b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c287b #"machine.adb" 333 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C292b" defined at machine.adb:335 instantiated at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B286b__C292b
 use import "_gnatprove_standard".Main

 function c292b #"machine.adb" 335 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C296b" defined at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C296b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c296b #"machine.adb" 415 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C301b" defined at machine.adb:344 instantiated at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B300b__C301b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c301b #"machine.adb" 344 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C305b" defined at machine.adb:346 instantiated at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B300b__C305b
 use import "_gnatprove_standard".Main

 function c305b #"machine.adb" 346 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C309b" defined at machine.adb:417, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C309b
 use import "_gnatprove_standard".Main

 function c309b #"machine.adb" 417 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C310b" defined at machine.adb:417, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C310b
 use import "_gnatprove_standard".Main

 function c310b #"machine.adb" 417 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C313b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C313b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c313b #"machine.adb" 420 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C317b" defined at machine.adb:355 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B316b__C317b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c317b #"machine.adb" 355 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C318b" defined at machine.adb:355 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B316b__C318b
 use import "_gnatprove_standard".Main

 function c318b #"machine.adb" 355 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C322b" defined at machine.adb:356 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B316b__C322b
 use import "_gnatprove_standard".Main

 function c322b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C323b" defined at machine.adb:356 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B316b__C323b
 use import "_gnatprove_standard".Main

 function c323b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C327b" defined at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__C327b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c327b #"machine.adb" 422 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C332b" defined at machine.adb:365 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B331b__C332b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c332b #"machine.adb" 365 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C333b" defined at machine.adb:365 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B331b__C333b
 use import "_gnatprove_standard".Main

 function c333b #"machine.adb" 365 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C338b" defined at machine.adb:367 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B331b__C338b
 use import "_gnatprove_standard".Main

 function c338b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C339b" defined at machine.adb:367 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B331b__C339b
 use import "_gnatprove_standard".Main

 function c339b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C343b" defined at machine.adb:372 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B331b__C343b
 use import "_gnatprove_standard".Main

 function c343b #"machine.adb" 372 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C349b" defined at machine.adb:382 instantiated at machine.adb:424, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__dynamicanalysis__L_2__B348b__C349b
 use import "_gnatprove_standard".Main

 function c349b #"machine.adb" 382 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C356b" defined at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__C356b
 use import "_gnatprove_standard".Main

 function c356b #"machine.adb" 439 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for axiomatizing type "T360b" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T360b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t360b =
  < range 0 31 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t360b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t360b__ref =
  { mutable t360b__content "model_trace:" "name:" : t360b }
 
 function t360b__ref___projection 
   (a : t360b__ref) : t360b =
  a.t360b__content
 
 meta "model_projection" function t360b__ref___projection
 
 meta "inline : no" function t360b__ref___projection
 
 val t360b__havoc 
   (x : t360b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T360b" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T360b__rep
 use        Machine__detectinvalidbehaviour__B359b__T360b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__detectinvalidbehaviour__B359b__T360b.t360b) : int =
  (Machine__detectinvalidbehaviour__B359b__T360b.t360b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__detectinvalidbehaviour__B359b__T360b.t360b, 
 predicate in_range = Machine__detectinvalidbehaviour__B359b__T360b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T361b" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T361b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T362b" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T362b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t362b =
  < range 0 65535 >
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 predicate in_range 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t362b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t362b__ref =
  { mutable t362b__content "model_trace:" "name:" : t362b }
 
 function t362b__ref___projection 
   (a : t362b__ref) : t362b =
  a.t362b__content
 
 meta "model_projection" function t362b__ref___projection
 
 meta "inline : no" function t362b__ref___projection
 
 val t362b__havoc 
   (x : t362b__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T362b" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T362b__rep
 use        Machine__detectinvalidbehaviour__B359b__T362b
 use import "_gnatprove_standard".Main

 function to_rep 
   (x : Machine__detectinvalidbehaviour__B359b__T362b.t362b) : int =
  (Machine__detectinvalidbehaviour__B359b__T362b.t362b'int x)
 
 clone export "ada__model".Rep_Proj_Int with
 type t = Machine__detectinvalidbehaviour__B359b__T362b.t362b, 
 predicate in_range = Machine__detectinvalidbehaviour__B359b__T362b.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T363b" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Types.Translate_Type *)
module Machine__detectinvalidbehaviour__B359b__T363b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval
 use        Array__Int__Machine__dataval

 type component_type =
  Machine__dataval.dataval
 
 function first 
   : int =
  0
 
 function last 
   : int =
  65535
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Machine__dataval.map, 
 function array_bool_eq = Array__Int__Machine__dataval.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "C364b" defined at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C364b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c364b #"machine.adb" 403 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C369b" defined at machine.adb:278 instantiated at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c369b #"machine.adb" 278 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C374b" defined at machine.adb:280 instantiated at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b
 use import "_gnatprove_standard".Main

 function c374b #"machine.adb" 280 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C378b" defined at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C378b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c378b #"machine.adb" 405 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C383b" defined at machine.adb:289 instantiated at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c383b #"machine.adb" 289 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C388b" defined at machine.adb:291 instantiated at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b
 use import "_gnatprove_standard".Main

 function c388b #"machine.adb" 291 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C392b" defined at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C392b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c392b #"machine.adb" 407 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C397b" defined at machine.adb:300 instantiated at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c397b #"machine.adb" 300 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C402b" defined at machine.adb:302 instantiated at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b
 use import "_gnatprove_standard".Main

 function c402b #"machine.adb" 302 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C406b" defined at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C406b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c406b #"machine.adb" 409 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C411b" defined at machine.adb:311 instantiated at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c411b #"machine.adb" 311 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C416b" defined at machine.adb:313 instantiated at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b
 use import "_gnatprove_standard".Main

 function c416b #"machine.adb" 313 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C420b" defined at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C420b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c420b #"machine.adb" 411 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C426b" defined at machine.adb:322 instantiated at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c426b #"machine.adb" 322 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C431b" defined at machine.adb:324 instantiated at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b
 use import "_gnatprove_standard".Main

 function c431b #"machine.adb" 324 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C435b" defined at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C435b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c435b #"machine.adb" 413 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C441b" defined at machine.adb:333 instantiated at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c441b #"machine.adb" 333 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C446b" defined at machine.adb:335 instantiated at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b
 use import "_gnatprove_standard".Main

 function c446b #"machine.adb" 335 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C450b" defined at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C450b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c450b #"machine.adb" 415 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C455b" defined at machine.adb:344 instantiated at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c455b #"machine.adb" 344 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C459b" defined at machine.adb:346 instantiated at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b
 use import "_gnatprove_standard".Main

 function c459b #"machine.adb" 346 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C463b" defined at machine.adb:417 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C463b
 use import "_gnatprove_standard".Main

 function c463b #"machine.adb" 417 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C464b" defined at machine.adb:417 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C464b
 use import "_gnatprove_standard".Main

 function c464b #"machine.adb" 417 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C467b" defined at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C467b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c467b #"machine.adb" 420 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C471b" defined at machine.adb:355 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c471b #"machine.adb" 355 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C472b" defined at machine.adb:355 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b
 use import "_gnatprove_standard".Main

 function c472b #"machine.adb" 355 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C476b" defined at machine.adb:356 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b
 use import "_gnatprove_standard".Main

 function c476b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C477b" defined at machine.adb:356 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b
 use import "_gnatprove_standard".Main

 function c477b #"machine.adb" 356 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C481b" defined at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__C481b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c481b #"machine.adb" 422 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C486b" defined at machine.adb:365 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 function c486b #"machine.adb" 365 0 0#
   : Instruction__instr.instr
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C487b" defined at machine.adb:365 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b
 use import "_gnatprove_standard".Main

 function c487b #"machine.adb" 365 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C492b" defined at machine.adb:367 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b
 use import "_gnatprove_standard".Main

 function c492b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C493b" defined at machine.adb:367 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b
 use import "_gnatprove_standard".Main

 function c493b #"machine.adb" 367 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C497b" defined at machine.adb:372 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b
 use import "_gnatprove_standard".Main

 function c497b #"machine.adb" 372 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module for defining the constant "C503b" defined at machine.adb:382 instantiated at machine.adb:424 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant *)
module Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b
 use import "_gnatprove_standard".Main

 function c503b #"machine.adb" 382 0 0#
   : int
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end
(* Module for defining a ref holding the value of variable "inst" defined at instruction.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Instruction__generaterandominstr__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"instruction.ads" 74 0 0#"model_projected" "model_trace:6076" "name:Inst"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"instruction.ads" 74 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"instruction.ads" 74 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at instruction.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Instruction__generaterandominstr__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.ads:37, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.ads" 37 0 0#"model_projected" "model_trace:5529" "name:Ret"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.ads:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "result" defined at machine.ads:38, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__result
 use import "_gnatprove_standard".Main

 val result__ #"machine.ads" 38 0 0#"model_projected" "model_trace:5538" "name:Result"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "result" defined at machine.ads:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__result___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:16, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 16 0 0#"model_projected" "model_trace:2363" "name:Regs"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:16, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "memory" defined at machine.adb:19, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__memory
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val memory #"machine.adb" 19 0 0#"model_projected" "model_trace:2379" "name:Memory"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "memory" defined at machine.adb:19, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__memory___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:22, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 22 0 0#"model_projected" "model_trace:2395" "name:PC"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:24, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__incpc__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 24 0 0#"model_projected" "name:Ret" "model_trace:9780"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:24, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__incpc__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:40, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doadd__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 40 0 0#"model_projected" "name:Ret" "model_trace:10055"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:40, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doadd__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:55, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dosub__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 55 0 0#"model_projected" "name:Ret" "model_trace:10398"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:55, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dosub__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:69, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domul__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 69 0 0#"model_projected" "name:Ret" "model_trace:10735"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domul__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:86, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dodiv__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 86 0 0#"model_projected" "name:Ret" "model_trace:11164"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dodiv__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:99, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doldr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 99 0 0#"model_projected" "name:Ret" "model_trace:11470"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at machine.adb:100, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__doldr__a
 use import "_gnatprove_standard".Main

 val a #"machine.adb" 100 0 0#"model_projected" "model_trace:2961" "name:A"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at machine.adb:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__doldr__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:116, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dostr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 116 0 0#"model_projected" "name:Ret" "model_trace:11843"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at machine.adb:117, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dostr__a
 use import "_gnatprove_standard".Main

 val a #"machine.adb" 117 0 0#"model_projected" "name:A" "model_trace:3077"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at machine.adb:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dostr__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:132, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__domov__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 132 0 0#"model_projected" "name:Ret" "model_trace:3172"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__domov__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:145, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 145 0 0#"model_projected" "model_trace:3265" "name:CycleCount"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:146, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 146 0 0#"model_projected" "name:Inst" "model_trace:3275"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 146 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 146 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at machine.adb:100 instantiated at machine.adb:173, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__L_1__B47b__a
 use import "_gnatprove_standard".Main

 val a #"machine.adb" 100 0 0#"model_projected" "name:A" "model_trace:13340"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at machine.adb:100 instantiated at machine.adb:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__L_1__B47b__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "a" defined at machine.adb:117 instantiated at machine.adb:176, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__executeprogram__L_1__B54b__a
 use import "_gnatprove_standard".Main

 val a #"machine.adb" 117 0 0#"model_projected" "name:A" "model_trace:13612"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at machine.adb:117 instantiated at machine.adb:176, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__L_1__B54b__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:276, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 276 0 0#"model_projected" "name:PC" "model_trace:18906"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:276, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 276 0 0#"model_projected" "name:Regs" "model_trace:18913"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:276, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performadd__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 276 0 0#"model_projected" "name:Ret" "model_trace:18920"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performadd__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:287, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 287 0 0#"model_projected" "name:PC" "model_trace:19670"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:287, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:287, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 287 0 0#"model_projected" "name:Regs" "model_trace:19677"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:287, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:287, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performsub__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 287 0 0#"model_projected" "name:Ret" "model_trace:19684"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:287, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performsub__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:298, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 298 0 0#"model_projected" "name:PC" "model_trace:20434"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:298, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:298, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 298 0 0#"model_projected" "name:Regs" "model_trace:20441"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:298, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:298, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmul__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 298 0 0#"model_projected" "name:Ret" "model_trace:20448"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:298, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmul__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:309, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 309 0 0#"model_projected" "name:PC" "model_trace:21277"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:309, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:309, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 309 0 0#"model_projected" "name:Regs" "model_trace:21284"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:309, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:309, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performdiv__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 309 0 0#"model_projected" "name:Ret" "model_trace:21291"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:309, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performdiv__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 320 0 0#"model_projected" "name:PC" "model_trace:22008"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 320 0 0#"model_projected" "name:Regs" "model_trace:22015"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:320, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performldr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 320 0 0#"model_projected" "name:Ret" "model_trace:22029"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:320, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performldr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:331, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 331 0 0#"model_projected" "name:PC" "model_trace:22783"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "memory" defined at machine.adb:331, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__memory
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val memory #"machine.adb" 331 0 0#"model_projected" "name:Memory" "model_trace:22797"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "memory" defined at machine.adb:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__memory___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:331, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performstr__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 331 0 0#"model_projected" "name:Ret" "model_trace:22804"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performstr__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:342, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 342 0 0#"model_projected" "name:PC" "model_trace:23556"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:342, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:342, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 342 0 0#"model_projected" "name:Regs" "model_trace:23563"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:342, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:342, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performmov__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 342 0 0#"model_projected" "name:Ret" "model_trace:23570"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:342, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performmov__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:353, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjmp__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 353 0 0#"model_projected" "name:PC" "model_trace:24245"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:353, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:353, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjmp__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 353 0 0#"model_projected" "name:Ret" "model_trace:24252"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:353, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjmp__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:363, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjz__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 363 0 0#"model_projected" "name:PC" "model_trace:24894"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:363, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ret" defined at machine.adb:363, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performjz__ret
 use import "_gnatprove_standard".Main

 val ret #"machine.adb" 363 0 0#"model_projected" "name:Ret" "model_trace:24908"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "ret" defined at machine.adb:363, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performjz__ret___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:380, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__performnop__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 380 0 0#"model_projected" "name:PC" "model_trace:25800"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:380, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__performnop__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:388, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 388 0 0#"model_projected" "name:CycleCount" "model_trace:5151"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:388, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:389, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 389 0 0#"model_projected" "name:Inst" "model_trace:5161"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 389 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 389 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:389, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:390, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 390 0 0#"model_projected" "name:PC" "model_trace:5170"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:390, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:391, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 391 0 0#"model_projected" "name:Regs" "model_trace:5182"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:391, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "memory" defined at machine.adb:392, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__memory
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val memory #"machine.adb" 392 0 0#"model_projected" "name:Memory" "model_trace:5195"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "memory" defined at machine.adb:392, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__memory___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at machine.adb:393, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__dynamicanalysis__r
 use import "_gnatprove_standard".Main

 val r #"machine.adb" 393 0 0#"model_projected" "model_trace:5208" "name:R"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at machine.adb:393, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__r___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "C357b" defined at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__C357b
 use import "_gnatprove_standard".Main

 val c357b #"machine.adb" 439 0 0# : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "C357b" defined at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__C357b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "cyclecount" defined at machine.adb:388 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__cyclecount
 use import "_gnatprove_standard".Main

 val cyclecount #"machine.adb" 388 0 0#"model_projected" "name:CycleCount" "model_trace:30952"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "cyclecount" defined at machine.adb:388 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__cyclecount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "inst" defined at machine.adb:389 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__inst
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val inst__split_fields #"machine.adb" 389 0 0#"model_projected" "name:Inst" "model_trace:30962"  : Instruction__instr.__split_fields__ref 
 
 val inst__split_discrs #"machine.adb" 389 0 0# : Instruction__instr.__split_discrs__ref 
 
 function inst__attr__constrained #"machine.adb" 389 0 0#
   : bool
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "inst" defined at machine.adb:389 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__inst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "pc" defined at machine.adb:390 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__pc
 use import "_gnatprove_standard".Main

 val pc #"machine.adb" 390 0 0#"model_projected" "name:PC" "model_trace:30971"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at machine.adb:390 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "regs" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__regs
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val regs #"machine.adb" 391 0 0#"model_projected" "name:Regs" "model_trace:30982"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "regs" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__regs___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "memory" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__memory
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 val memory #"machine.adb" 392 0 0#"model_projected" "name:Memory" "model_trace:30995"  : Array__Int__Machine__dataval.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "memory" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__memory___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r" defined at machine.adb:393 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Variable *)
module Machine__detectinvalidbehaviour__B359b__r
 use import "_gnatprove_standard".Main

 val r #"machine.adb" 393 0 0#"model_projected" "name:R" "model_trace:31008"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at machine.adb:393 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__r___axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_4)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool)  =
  (if (( temp___is_init_7 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_11)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant "inline" 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool)  =
  (if (( temp___is_init_14 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_18)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool)  =
  (if (( temp___is_init_21 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_25)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool)  =
  (if (( temp___is_init_28 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_32)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant "inline" 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool)  =
  (if (( temp___is_init_35 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_39)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant "inline" 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool)  =
  (if (( temp___is_init_42 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_46)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__short_float

 predicate dynamic_invariant "inline" 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool)  =
  (if (( temp___is_init_49 \/ (Float32.le Standard__short_float.first Standard__short_float.last) )) then (
   (Standard__short_float.dynamic_property Standard__short_float.first Standard__short_float.last temp___expr_53)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__float

 predicate dynamic_invariant "inline" 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool)  =
  (if (( temp___is_init_56 \/ (Float32.le Standard__float.first Standard__float.last) )) then (
   (Standard__float.dynamic_property Standard__float.first Standard__float.last temp___expr_60)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64
 use        Standard__long_float

 predicate dynamic_invariant "inline" 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool)  =
  (if (( temp___is_init_63 \/ (Float64.le Standard__long_float.first Standard__long_float.last) )) then (
   (Standard__long_float.dynamic_property Standard__long_float.first Standard__long_float.last temp___expr_67)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant "inline" 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool)  =
  (if (( temp___is_init_70 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_74)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant "inline" 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool)  =
  (if (( temp___is_init_77 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant "inline" 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool)  =
  (if (( temp___is_init_84 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_88)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant "inline" 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool)  =
  (if (temp___skip_constant_93) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_96) (Standard__string.last temp___expr_96))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant "inline" 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool)  =
  (if (temp___skip_constant_100) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_103) (Standard__wide_string.last temp___expr_103))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant "inline" 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool)  =
  (if (temp___skip_constant_107) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_110) (Standard__wide_wide_string.last temp___expr_110))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant "inline" 
   (temp___expr_116 : Standard__duration.duration) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_117 : Standard__duration.duration) (temp___skip_top_level_118 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant "inline" 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool)  =
  (if (( temp___is_init_119 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_123)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant "inline" 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool)  =
  (if (( temp___is_init_126 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_130)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant "inline" 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool)  =
  (if (( temp___is_init_133 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_137)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant "inline" 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool)  =
  (if (( temp___is_init_140 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_144)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant "inline" 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool)  =
  (if (( temp___is_init_147 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_151)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool)  =
  true

end

(* Module for possibly declaring a logic function for "init" defined at instruction.ads:70, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "generaterandominstr" defined at instruction.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__generaterandominstr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "debugprintinstr" defined at instruction.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Instruction__debugprintinstr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at debug.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at debug.ads:8, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at debug.ads:12, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line" defined at debug.ads:16, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at debug.ads:20, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Debug__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Machine__executeprogram
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "domov" defined at machine.adb:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Machine__domov
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at machine.adb:151, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__executeprogram__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at machine.adb:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__executeprogram__L_1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at machine.adb:395, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__dynamicanalysis__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at machine.adb:395, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__dynamicanalysis__L_2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_2" defined at machine.adb:395 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Machine__detectinvalidbehaviour__B359b__L_2
 use import "_gnatprove_standard".Main

 exception L_2

end

(* Module giving an empty axiom for the entity "L_2" defined at machine.adb:395 instantiated at machine.adb:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Machine__detectinvalidbehaviour__B359b__L_2___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "opcode" defined at instruction.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__opcode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode

 predicate dynamic_invariant "inline" 
   (temp___expr_160 : int) (temp___is_init_156 : bool) (temp___skip_constant_157 : bool) (temp___do_toplevel_158 : bool) (temp___do_typ_inv_159 : bool)  =
  (if (( temp___is_init_156 \/ (Instruction__opcode.first <= Instruction__opcode.last) )) then (
   (Instruction__opcode.dynamic_property Instruction__opcode.first Instruction__opcode.last temp___expr_160)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_161 : int) (temp___skip_top_level_162 : bool)  =
  true

end

(* Module giving axioms for type "TregB" defined at instruction.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__TregB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "reg" defined at instruction.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__reg___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__reg

 predicate dynamic_invariant "inline" 
   (temp___expr_167 : int) (temp___is_init_163 : bool) (temp___skip_constant_164 : bool) (temp___do_toplevel_165 : bool) (temp___do_typ_inv_166 : bool)  =
  (if (( temp___is_init_163 \/ (Instruction__reg.first <= Instruction__reg.last) )) then (
   (Instruction__reg.dynamic_property Instruction__reg.first Instruction__reg.last temp___expr_167)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_168 : int) (temp___skip_top_level_169 : bool)  =
  true

end

(* Module giving axioms for type "TaddrB" defined at instruction.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__TaddrB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "addr" defined at instruction.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__addr

 predicate dynamic_invariant "inline" 
   (temp___expr_174 : int) (temp___is_init_170 : bool) (temp___skip_constant_171 : bool) (temp___do_toplevel_172 : bool) (temp___do_typ_inv_173 : bool)  =
  (if (( temp___is_init_170 \/ (Instruction__addr.first <= Instruction__addr.last) )) then (
   (Instruction__addr.dynamic_property Instruction__addr.first Instruction__addr.last temp___expr_174)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_175 : int) (temp___skip_top_level_176 : bool)  =
  true

end

(* Module giving axioms for type "ToffsetB" defined at instruction.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__ToffsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "offset" defined at instruction.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__offset

 predicate dynamic_invariant "inline" 
   (temp___expr_181 : int) (temp___is_init_177 : bool) (temp___skip_constant_178 : bool) (temp___do_toplevel_179 : bool) (temp___do_typ_inv_180 : bool)  =
  (if (( temp___is_init_177 \/ (Instruction__offset.first <= Instruction__offset.last) )) then (
   (Instruction__offset.dynamic_property Instruction__offset.first Instruction__offset.last temp___expr_181)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_182 : int) (temp___skip_top_level_183 : bool)  =
  true

end

(* Module giving axioms for type "instr" defined at instruction.ads:25, created in Gnat2Why.Types.Generate_Type_Completion *)
module Instruction__instr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr

 predicate dynamic_invariant "inline" 
   (temp___expr_188 : Instruction__instr.instr) (temp___is_init_184 : bool) (temp___skip_constant_185 : bool) (temp___do_toplevel_186 : bool) (temp___do_typ_inv_187 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_190 : Instruction__instr.instr) (temp___skip_top_level_191 : bool)  =
  ( ((Instruction__instr.attr__constrained temp___expr_190) = False) /\ (let temp___192 = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___expr_190)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___expr_190))) = 0)))
   )

end

(* Module giving axioms for type "returncode" defined at machine.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__returncode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__returncode

 predicate dynamic_invariant "inline" 
   (temp___expr_225 : int) (temp___is_init_221 : bool) (temp___skip_constant_222 : bool) (temp___do_toplevel_223 : bool) (temp___do_typ_inv_224 : bool)  =
  (if (( temp___is_init_221 \/ (Machine__returncode.first <= Machine__returncode.last) )) then (
   (Machine__returncode.dynamic_property Machine__returncode.first Machine__returncode.last temp___expr_225)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_226 : int) (temp___skip_top_level_227 : bool)  =
  true

end

(* Module giving axioms for type "TprogramcounterB" defined at machine.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TprogramcounterB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "programcounter" defined at machine.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__programcounter___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__programcounter

 predicate dynamic_invariant "inline" 
   (temp___expr_232 : int) (temp___is_init_228 : bool) (temp___skip_constant_229 : bool) (temp___do_toplevel_230 : bool) (temp___do_typ_inv_231 : bool)  =
  (if (( temp___is_init_228 \/ (Machine__programcounter.first <= Machine__programcounter.last) )) then (
   (Machine__programcounter.dynamic_property Machine__programcounter.first Machine__programcounter.last temp___expr_232)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_233 : int) (temp___skip_top_level_234 : bool)  =
  true

end

(* Module giving axioms for type "TprogramB" defined at machine.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TprogramB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "program" defined at machine.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__program___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__programcounter
 use        Array__Int__Instruction__instr
 use        Array__Int__Instruction__instr
 use        Array__Int__Instruction__instr

 predicate dynamic_invariant "inline" 
   (temp___expr_239 : Array__Int__Instruction__instr.map) (temp___is_init_235 : bool) (temp___skip_constant_236 : bool) (temp___do_toplevel_237 : bool) (temp___do_typ_inv_238 : bool)  =
  (forall temp___240   : int.
   (if (( (Machine__programcounter.first <= temp___240) /\ (temp___240 <= Machine__programcounter.last) )) then (
    ((Instruction__instr.attr__constrained (Array__Int__Instruction__instr.get temp___expr_239 temp___240)) = False)) else true))
 
 predicate default_initial_assumption "inline" 
   (temp___expr_242 : Array__Int__Instruction__instr.map) (temp___skip_top_level_243 : bool)  =
  (forall temp___244   : int.
   (if (( (Machine__programcounter.first <= temp___244) /\ (temp___244 <= Machine__programcounter.last) )) then (
    (let temp___245 = (Array__Int__Instruction__instr.get temp___expr_242 temp___244) in (
     ( ((Instruction__instr.attr__constrained temp___245) = False) /\ (let temp___246 = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs (Array__Int__Instruction__instr.get temp___expr_242 temp___244))) in (
      ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs (Array__Int__Instruction__instr.get temp___expr_242 temp___244)))) = 0)))
      )))
   ) else true))

end

(* Module giving axioms for type "TdatavalB" defined at machine.adb:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TdatavalB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "dataval" defined at machine.adb:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dataval___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_285 : int) (temp___is_init_281 : bool) (temp___skip_constant_282 : bool) (temp___do_toplevel_283 : bool) (temp___do_typ_inv_284 : bool)  =
  (if (( temp___is_init_281 \/ (Machine__dataval.first <= Machine__dataval.last) )) then (
   (Machine__dataval.dynamic_property Machine__dataval.first Machine__dataval.last temp___expr_285)) else true)
 
 predicate default_initial_assumption "inline" 
   (temp___expr_286 : int) (temp___skip_top_level_287 : bool)  =
  true

end

(* Module giving axioms for type "TregisterB" defined at machine.adb:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TregisterB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "register" defined at machine.adb:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__register___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_292 : Array__Int__Machine__dataval.map) (temp___is_init_288 : bool) (temp___skip_constant_289 : bool) (temp___do_toplevel_290 : bool) (temp___do_typ_inv_291 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_294 : Array__Int__Machine__dataval.map) (temp___skip_top_level_295 : bool)  =
  true

end

(* Module giving axioms for type "TmemB" defined at machine.adb:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TmemB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "mem" defined at machine.adb:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__mem___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval

 predicate dynamic_invariant "inline" 
   (temp___expr_302 : Array__Int__Machine__dataval.map) (temp___is_init_298 : bool) (temp___skip_constant_299 : bool) (temp___do_toplevel_300 : bool) (temp___do_typ_inv_301 : bool)  =
  true
 
 predicate default_initial_assumption "inline" 
   (temp___expr_304 : Array__Int__Machine__dataval.map) (temp___skip_top_level_305 : bool)  =
  true

end

(* Module giving axioms for type "TregsB" defined at machine.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TregsB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TregsT" defined at machine.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TregsT___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7b" defined at machine.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__T7b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8b" defined at machine.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__T8b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TmemoryB" defined at machine.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TmemoryB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TmemoryT" defined at machine.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__TmemoryT___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11b" defined at machine.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__T11b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12b" defined at machine.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__T12b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S71b" defined at machine.adb:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidadd__S71b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidadd__inst
 use        Machine__detectinvalidadd__S71b

 predicate dynamic_invariant "inline" 
   (temp___expr_315 : Machine__detectinvalidadd__S71b.s71b) (temp___is_init_311 : bool) (temp___skip_constant_312 : bool) (temp___do_toplevel_313 : bool) (temp___do_typ_inv_314 : bool)  =
  ( (if (temp___skip_constant_312) then (
   true) else (
   (Machine__detectinvalidadd__S71b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidadd__inst.inst))) (Machine__detectinvalidadd__S71b.to_base temp___expr_315)))) /\ ((Machine__detectinvalidadd__S71b.attr__constrained temp___expr_315) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_317 : Machine__detectinvalidadd__S71b.s71b) (temp___skip_top_level_318 : bool)  =
  ( ((Machine__detectinvalidadd__S71b.attr__constrained temp___expr_317) = True) /\ (let temp___319 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidadd__S71b.__split_discrs temp___expr_317)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidadd__S71b.__split_discrs temp___expr_317))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidadd__inst.inst))))))
   )

end

(* Module giving axioms for type "S74b" defined at machine.adb:210, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidsub__S74b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidsub__inst
 use        Machine__detectinvalidsub__S74b

 predicate dynamic_invariant "inline" 
   (temp___expr_348 : Machine__detectinvalidsub__S74b.s74b) (temp___is_init_344 : bool) (temp___skip_constant_345 : bool) (temp___do_toplevel_346 : bool) (temp___do_typ_inv_347 : bool)  =
  ( (if (temp___skip_constant_345) then (
   true) else (
   (Machine__detectinvalidsub__S74b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidsub__inst.inst))) (Machine__detectinvalidsub__S74b.to_base temp___expr_348)))) /\ ((Machine__detectinvalidsub__S74b.attr__constrained temp___expr_348) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_350 : Machine__detectinvalidsub__S74b.s74b) (temp___skip_top_level_351 : bool)  =
  ( ((Machine__detectinvalidsub__S74b.attr__constrained temp___expr_350) = True) /\ (let temp___352 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidsub__S74b.__split_discrs temp___expr_350)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidsub__S74b.__split_discrs temp___expr_350))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidsub__inst.inst))))))
   )

end

(* Module giving axioms for type "S77b" defined at machine.adb:216, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidmul__S77b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidmul__inst
 use        Machine__detectinvalidmul__S77b

 predicate dynamic_invariant "inline" 
   (temp___expr_381 : Machine__detectinvalidmul__S77b.s77b) (temp___is_init_377 : bool) (temp___skip_constant_378 : bool) (temp___do_toplevel_379 : bool) (temp___do_typ_inv_380 : bool)  =
  ( (if (temp___skip_constant_378) then (
   true) else (
   (Machine__detectinvalidmul__S77b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmul__inst.inst))) (Machine__detectinvalidmul__S77b.to_base temp___expr_381)))) /\ ((Machine__detectinvalidmul__S77b.attr__constrained temp___expr_381) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_383 : Machine__detectinvalidmul__S77b.s77b) (temp___skip_top_level_384 : bool)  =
  ( ((Machine__detectinvalidmul__S77b.attr__constrained temp___expr_383) = True) /\ (let temp___385 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmul__S77b.__split_discrs temp___expr_383)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmul__S77b.__split_discrs temp___expr_383))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmul__inst.inst))))))
   )

end

(* Module giving axioms for type "S80b" defined at machine.adb:223, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvaliddiv__S80b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvaliddiv__inst
 use        Machine__detectinvaliddiv__S80b

 predicate dynamic_invariant "inline" 
   (temp___expr_414 : Machine__detectinvaliddiv__S80b.s80b) (temp___is_init_410 : bool) (temp___skip_constant_411 : bool) (temp___do_toplevel_412 : bool) (temp___do_typ_inv_413 : bool)  =
  ( (if (temp___skip_constant_411) then (
   true) else (
   (Machine__detectinvaliddiv__S80b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvaliddiv__inst.inst))) (Machine__detectinvaliddiv__S80b.to_base temp___expr_414)))) /\ ((Machine__detectinvaliddiv__S80b.attr__constrained temp___expr_414) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_416 : Machine__detectinvaliddiv__S80b.s80b) (temp___skip_top_level_417 : bool)  =
  ( ((Machine__detectinvaliddiv__S80b.attr__constrained temp___expr_416) = True) /\ (let temp___418 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvaliddiv__S80b.__split_discrs temp___expr_416)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvaliddiv__S80b.__split_discrs temp___expr_416))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvaliddiv__inst.inst))))))
   )

end

(* Module giving axioms for type "S83b" defined at machine.adb:229, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidldr__S83b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidldr__inst
 use        Machine__detectinvalidldr__S83b

 predicate dynamic_invariant "inline" 
   (temp___expr_447 : Machine__detectinvalidldr__S83b.s83b) (temp___is_init_443 : bool) (temp___skip_constant_444 : bool) (temp___do_toplevel_445 : bool) (temp___do_typ_inv_446 : bool)  =
  ( (if (temp___skip_constant_444) then (
   true) else (
   (Machine__detectinvalidldr__S83b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidldr__inst.inst))) (Machine__detectinvalidldr__S83b.to_base temp___expr_447)))) /\ ((Machine__detectinvalidldr__S83b.attr__constrained temp___expr_447) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_449 : Machine__detectinvalidldr__S83b.s83b) (temp___skip_top_level_450 : bool)  =
  ( ((Machine__detectinvalidldr__S83b.attr__constrained temp___expr_449) = True) /\ (let temp___451 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidldr__S83b.__split_discrs temp___expr_449)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidldr__S83b.__split_discrs temp___expr_449))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidldr__inst.inst))))))
   )

end

(* Module giving axioms for type "S86b" defined at machine.adb:235, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidstr__S86b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidstr__inst
 use        Machine__detectinvalidstr__S86b

 predicate dynamic_invariant "inline" 
   (temp___expr_480 : Machine__detectinvalidstr__S86b.s86b) (temp___is_init_476 : bool) (temp___skip_constant_477 : bool) (temp___do_toplevel_478 : bool) (temp___do_typ_inv_479 : bool)  =
  ( (if (temp___skip_constant_477) then (
   true) else (
   (Machine__detectinvalidstr__S86b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidstr__inst.inst))) (Machine__detectinvalidstr__S86b.to_base temp___expr_480)))) /\ ((Machine__detectinvalidstr__S86b.attr__constrained temp___expr_480) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_482 : Machine__detectinvalidstr__S86b.s86b) (temp___skip_top_level_483 : bool)  =
  ( ((Machine__detectinvalidstr__S86b.attr__constrained temp___expr_482) = True) /\ (let temp___484 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidstr__S86b.__split_discrs temp___expr_482)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidstr__S86b.__split_discrs temp___expr_482))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidstr__inst.inst))))))
   )

end

(* Module giving axioms for type "S89b" defined at machine.adb:241, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidmov__S89b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidmov__inst
 use        Machine__detectinvalidmov__S89b

 predicate dynamic_invariant "inline" 
   (temp___expr_513 : Machine__detectinvalidmov__S89b.s89b) (temp___is_init_509 : bool) (temp___skip_constant_510 : bool) (temp___do_toplevel_511 : bool) (temp___do_typ_inv_512 : bool)  =
  ( (if (temp___skip_constant_510) then (
   true) else (
   (Machine__detectinvalidmov__S89b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmov__inst.inst))) (Machine__detectinvalidmov__S89b.to_base temp___expr_513)))) /\ ((Machine__detectinvalidmov__S89b.attr__constrained temp___expr_513) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_515 : Machine__detectinvalidmov__S89b.s89b) (temp___skip_top_level_516 : bool)  =
  ( ((Machine__detectinvalidmov__S89b.attr__constrained temp___expr_515) = True) /\ (let temp___517 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmov__S89b.__split_discrs temp___expr_515)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidmov__S89b.__split_discrs temp___expr_515))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidmov__inst.inst))))))
   )

end

(* Module giving axioms for type "S92b" defined at machine.adb:247, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidjmp__S92b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidjmp__inst
 use        Machine__detectinvalidjmp__S92b

 predicate dynamic_invariant "inline" 
   (temp___expr_546 : Machine__detectinvalidjmp__S92b.s92b) (temp___is_init_542 : bool) (temp___skip_constant_543 : bool) (temp___do_toplevel_544 : bool) (temp___do_typ_inv_545 : bool)  =
  ( (if (temp___skip_constant_543) then (
   true) else (
   (Machine__detectinvalidjmp__S92b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjmp__inst.inst))) (Machine__detectinvalidjmp__S92b.to_base temp___expr_546)))) /\ ((Machine__detectinvalidjmp__S92b.attr__constrained temp___expr_546) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_548 : Machine__detectinvalidjmp__S92b.s92b) (temp___skip_top_level_549 : bool)  =
  ( ((Machine__detectinvalidjmp__S92b.attr__constrained temp___expr_548) = True) /\ (let temp___550 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjmp__S92b.__split_discrs temp___expr_548)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjmp__S92b.__split_discrs temp___expr_548))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjmp__inst.inst))))))
   )

end

(* Module giving axioms for type "S95b" defined at machine.adb:253, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidjz__S95b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__detectinvalidjz__inst
 use        Machine__detectinvalidjz__S95b

 predicate dynamic_invariant "inline" 
   (temp___expr_579 : Machine__detectinvalidjz__S95b.s95b) (temp___is_init_575 : bool) (temp___skip_constant_576 : bool) (temp___do_toplevel_577 : bool) (temp___do_typ_inv_578 : bool)  =
  ( (if (temp___skip_constant_576) then (
   true) else (
   (Machine__detectinvalidjz__S95b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjz__inst.inst))) (Machine__detectinvalidjz__S95b.to_base temp___expr_579)))) /\ ((Machine__detectinvalidjz__S95b.attr__constrained temp___expr_579) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_581 : Machine__detectinvalidjz__S95b.s95b) (temp___skip_top_level_582 : bool)  =
  ( ((Machine__detectinvalidjz__S95b.attr__constrained temp___expr_581) = True) /\ (let temp___583 = (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjz__S95b.__split_discrs temp___expr_581)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__detectinvalidjz__S95b.__split_discrs temp___expr_581))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__detectinvalidjz__inst.inst))))))
   )

end

(* Module giving axioms for type "S101b" defined at machine.adb:276, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performadd__S101b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performadd__inst
 use        Machine__performadd__S101b

 predicate dynamic_invariant "inline" 
   (temp___expr_612 : Machine__performadd__S101b.s101b) (temp___is_init_608 : bool) (temp___skip_constant_609 : bool) (temp___do_toplevel_610 : bool) (temp___do_typ_inv_611 : bool)  =
  ( (if (temp___skip_constant_609) then (
   true) else (
   (Machine__performadd__S101b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performadd__inst.inst))) (Machine__performadd__S101b.to_base temp___expr_612)))) /\ ((Machine__performadd__S101b.attr__constrained temp___expr_612) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_614 : Machine__performadd__S101b.s101b) (temp___skip_top_level_615 : bool)  =
  ( ((Machine__performadd__S101b.attr__constrained temp___expr_614) = True) /\ (let temp___616 = (Instruction__instr.rec__instruction__instr__op (Machine__performadd__S101b.__split_discrs temp___expr_614)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performadd__S101b.__split_discrs temp___expr_614))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performadd__inst.inst))))))
   )

end

(* Module giving axioms for type "S111b" defined at machine.adb:287, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performsub__S111b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performsub__inst
 use        Machine__performsub__S111b

 predicate dynamic_invariant "inline" 
   (temp___expr_645 : Machine__performsub__S111b.s111b) (temp___is_init_641 : bool) (temp___skip_constant_642 : bool) (temp___do_toplevel_643 : bool) (temp___do_typ_inv_644 : bool)  =
  ( (if (temp___skip_constant_642) then (
   true) else (
   (Machine__performsub__S111b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performsub__inst.inst))) (Machine__performsub__S111b.to_base temp___expr_645)))) /\ ((Machine__performsub__S111b.attr__constrained temp___expr_645) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_647 : Machine__performsub__S111b.s111b) (temp___skip_top_level_648 : bool)  =
  ( ((Machine__performsub__S111b.attr__constrained temp___expr_647) = True) /\ (let temp___649 = (Instruction__instr.rec__instruction__instr__op (Machine__performsub__S111b.__split_discrs temp___expr_647)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performsub__S111b.__split_discrs temp___expr_647))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performsub__inst.inst))))))
   )

end

(* Module giving axioms for type "S121b" defined at machine.adb:298, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmul__S121b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performmul__inst
 use        Machine__performmul__S121b

 predicate dynamic_invariant "inline" 
   (temp___expr_678 : Machine__performmul__S121b.s121b) (temp___is_init_674 : bool) (temp___skip_constant_675 : bool) (temp___do_toplevel_676 : bool) (temp___do_typ_inv_677 : bool)  =
  ( (if (temp___skip_constant_675) then (
   true) else (
   (Machine__performmul__S121b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmul__inst.inst))) (Machine__performmul__S121b.to_base temp___expr_678)))) /\ ((Machine__performmul__S121b.attr__constrained temp___expr_678) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_680 : Machine__performmul__S121b.s121b) (temp___skip_top_level_681 : bool)  =
  ( ((Machine__performmul__S121b.attr__constrained temp___expr_680) = True) /\ (let temp___682 = (Instruction__instr.rec__instruction__instr__op (Machine__performmul__S121b.__split_discrs temp___expr_680)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performmul__S121b.__split_discrs temp___expr_680))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmul__inst.inst))))))
   )

end

(* Module giving axioms for type "S131b" defined at machine.adb:309, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performdiv__S131b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performdiv__inst
 use        Machine__performdiv__S131b

 predicate dynamic_invariant "inline" 
   (temp___expr_711 : Machine__performdiv__S131b.s131b) (temp___is_init_707 : bool) (temp___skip_constant_708 : bool) (temp___do_toplevel_709 : bool) (temp___do_typ_inv_710 : bool)  =
  ( (if (temp___skip_constant_708) then (
   true) else (
   (Machine__performdiv__S131b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performdiv__inst.inst))) (Machine__performdiv__S131b.to_base temp___expr_711)))) /\ ((Machine__performdiv__S131b.attr__constrained temp___expr_711) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_713 : Machine__performdiv__S131b.s131b) (temp___skip_top_level_714 : bool)  =
  ( ((Machine__performdiv__S131b.attr__constrained temp___expr_713) = True) /\ (let temp___715 = (Instruction__instr.rec__instruction__instr__op (Machine__performdiv__S131b.__split_discrs temp___expr_713)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performdiv__S131b.__split_discrs temp___expr_713))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performdiv__inst.inst))))))
   )

end

(* Module giving axioms for type "S141b" defined at machine.adb:320, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performldr__S141b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performldr__inst
 use        Machine__performldr__S141b

 predicate dynamic_invariant "inline" 
   (temp___expr_744 : Machine__performldr__S141b.s141b) (temp___is_init_740 : bool) (temp___skip_constant_741 : bool) (temp___do_toplevel_742 : bool) (temp___do_typ_inv_743 : bool)  =
  ( (if (temp___skip_constant_741) then (
   true) else (
   (Machine__performldr__S141b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performldr__inst.inst))) (Machine__performldr__S141b.to_base temp___expr_744)))) /\ ((Machine__performldr__S141b.attr__constrained temp___expr_744) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_746 : Machine__performldr__S141b.s141b) (temp___skip_top_level_747 : bool)  =
  ( ((Machine__performldr__S141b.attr__constrained temp___expr_746) = True) /\ (let temp___748 = (Instruction__instr.rec__instruction__instr__op (Machine__performldr__S141b.__split_discrs temp___expr_746)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performldr__S141b.__split_discrs temp___expr_746))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performldr__inst.inst))))))
   )

end

(* Module giving axioms for type "S151b" defined at machine.adb:331, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performstr__S151b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performstr__inst
 use        Machine__performstr__S151b

 predicate dynamic_invariant "inline" 
   (temp___expr_777 : Machine__performstr__S151b.s151b) (temp___is_init_773 : bool) (temp___skip_constant_774 : bool) (temp___do_toplevel_775 : bool) (temp___do_typ_inv_776 : bool)  =
  ( (if (temp___skip_constant_774) then (
   true) else (
   (Machine__performstr__S151b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performstr__inst.inst))) (Machine__performstr__S151b.to_base temp___expr_777)))) /\ ((Machine__performstr__S151b.attr__constrained temp___expr_777) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_779 : Machine__performstr__S151b.s151b) (temp___skip_top_level_780 : bool)  =
  ( ((Machine__performstr__S151b.attr__constrained temp___expr_779) = True) /\ (let temp___781 = (Instruction__instr.rec__instruction__instr__op (Machine__performstr__S151b.__split_discrs temp___expr_779)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performstr__S151b.__split_discrs temp___expr_779))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performstr__inst.inst))))))
   )

end

(* Module giving axioms for type "S161b" defined at machine.adb:342, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performmov__S161b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performmov__inst
 use        Machine__performmov__S161b

 predicate dynamic_invariant "inline" 
   (temp___expr_810 : Machine__performmov__S161b.s161b) (temp___is_init_806 : bool) (temp___skip_constant_807 : bool) (temp___do_toplevel_808 : bool) (temp___do_typ_inv_809 : bool)  =
  ( (if (temp___skip_constant_807) then (
   true) else (
   (Machine__performmov__S161b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmov__inst.inst))) (Machine__performmov__S161b.to_base temp___expr_810)))) /\ ((Machine__performmov__S161b.attr__constrained temp___expr_810) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_812 : Machine__performmov__S161b.s161b) (temp___skip_top_level_813 : bool)  =
  ( ((Machine__performmov__S161b.attr__constrained temp___expr_812) = True) /\ (let temp___814 = (Instruction__instr.rec__instruction__instr__op (Machine__performmov__S161b.__split_discrs temp___expr_812)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performmov__S161b.__split_discrs temp___expr_812))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performmov__inst.inst))))))
   )

end

(* Module giving axioms for type "S170b" defined at machine.adb:353, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performjmp__S170b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performjmp__inst
 use        Machine__performjmp__S170b

 predicate dynamic_invariant "inline" 
   (temp___expr_843 : Machine__performjmp__S170b.s170b) (temp___is_init_839 : bool) (temp___skip_constant_840 : bool) (temp___do_toplevel_841 : bool) (temp___do_typ_inv_842 : bool)  =
  ( (if (temp___skip_constant_840) then (
   true) else (
   (Machine__performjmp__S170b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjmp__inst.inst))) (Machine__performjmp__S170b.to_base temp___expr_843)))) /\ ((Machine__performjmp__S170b.attr__constrained temp___expr_843) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_845 : Machine__performjmp__S170b.s170b) (temp___skip_top_level_846 : bool)  =
  ( ((Machine__performjmp__S170b.attr__constrained temp___expr_845) = True) /\ (let temp___847 = (Instruction__instr.rec__instruction__instr__op (Machine__performjmp__S170b.__split_discrs temp___expr_845)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performjmp__S170b.__split_discrs temp___expr_845))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjmp__inst.inst))))))
   )

end

(* Module giving axioms for type "S181b" defined at machine.adb:363, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__performjz__S181b___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__instr
 use        Machine__performjz__inst
 use        Machine__performjz__S181b

 predicate dynamic_invariant "inline" 
   (temp___expr_876 : Machine__performjz__S181b.s181b) (temp___is_init_872 : bool) (temp___skip_constant_873 : bool) (temp___do_toplevel_874 : bool) (temp___do_typ_inv_875 : bool)  =
  ( (if (temp___skip_constant_873) then (
   true) else (
   (Machine__performjz__S181b.in_range (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjz__inst.inst))) (Machine__performjz__S181b.to_base temp___expr_876)))) /\ ((Machine__performjz__S181b.attr__constrained temp___expr_876) = True) )
 
 predicate default_initial_assumption "inline" 
   (temp___expr_878 : Machine__performjz__S181b.s181b) (temp___skip_top_level_879 : bool)  =
  ( ((Machine__performjz__S181b.attr__constrained temp___expr_878) = True) /\ (let temp___880 = (Instruction__instr.rec__instruction__instr__op (Machine__performjz__S181b.__split_discrs temp___expr_878)) in (
   ((Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Machine__performjz__S181b.__split_discrs temp___expr_878))) = (Instruction__opcode__rep.to_rep (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs Machine__performjz__inst.inst))))))
   )

end

(* Module giving axioms for type "T206b" defined at machine.adb:391, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T206b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T207b" defined at machine.adb:391, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T207b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T208b" defined at machine.adb:392, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T208b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T209b" defined at machine.adb:392, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__dynamicanalysis__T209b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T360b" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__B359b__T360b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T361b" defined at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__B359b__T361b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T362b" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__B359b__T362b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T363b" defined at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Types.Generate_Type_Completion *)
module Machine__detectinvalidbehaviour__B359b__T363b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring an abstract function for the aggregate at machine.adb:19, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__memory__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function machine__memory__aggregate_def 
   (temp___906 : int) : Array__Int__Machine__dataval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:16, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__regs__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function machine__regs__aggregate_def 
   (temp___910 : int) : Array__Int__Machine__dataval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__detectinvalidbehaviour__B359b__memory__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function machine__detectinvalidbehaviour__B359b__memory__aggregate_def 
   (temp___951 : int) : Array__Int__Machine__dataval.map

end

(* Module for declaring an abstract function for the aggregate at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__detectinvalidbehaviour__B359b__regs__aggregate_def
 use import "_gnatprove_standard".Main
 use        Array__Int__Machine__dataval

 function machine__detectinvalidbehaviour__B359b__regs__aggregate_def 
   (temp___954 : int) : Array__Int__Machine__dataval.map

end
(* Module for defining the value of constant "num_regs" defined at instruction.ads:8, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Instruction__num_regs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__num_regs

 axiom num_regs__def_axiom :
  ((Instruction__num_regs.num_regs ) = 32)

end

(* Module for defining the value of constant "memory_size" defined at instruction.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Instruction__memory_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__memory_size

 axiom memory_size__def_axiom :
  ((Instruction__memory_size.memory_size ) = 65536)

end

(* Module for defining the value of constant "nul" defined at a-chlat1.ads:25, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nul

 axiom nul__def_axiom :
  ((Ada__characters__latin_1__nul.nul ) = 0)

end

(* Module for defining the value of constant "soh" defined at a-chlat1.ads:26, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__soh___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__soh

 axiom soh__def_axiom :
  ((Ada__characters__latin_1__soh.soh ) = 1)

end

(* Module for defining the value of constant "stx" defined at a-chlat1.ads:27, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__stx___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__stx

 axiom stx__def_axiom :
  ((Ada__characters__latin_1__stx.stx ) = 2)

end

(* Module for defining the value of constant "etx" defined at a-chlat1.ads:28, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__etx___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__etx

 axiom etx__def_axiom :
  ((Ada__characters__latin_1__etx.etx ) = 3)

end

(* Module for defining the value of constant "eot" defined at a-chlat1.ads:29, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__eot___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__eot

 axiom eot__def_axiom :
  ((Ada__characters__latin_1__eot.eot ) = 4)

end

(* Module for defining the value of constant "enq" defined at a-chlat1.ads:30, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__enq___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__enq

 axiom enq__def_axiom :
  ((Ada__characters__latin_1__enq.enq ) = 5)

end

(* Module for defining the value of constant "ack" defined at a-chlat1.ads:31, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ack___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ack

 axiom ack__def_axiom :
  ((Ada__characters__latin_1__ack.ack ) = 6)

end

(* Module for defining the value of constant "bel" defined at a-chlat1.ads:32, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bel___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bel

 axiom bel__def_axiom :
  ((Ada__characters__latin_1__bel.bel ) = 7)

end

(* Module for defining the value of constant "bs" defined at a-chlat1.ads:33, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bs

 axiom bs__def_axiom :
  ((Ada__characters__latin_1__bs.bs ) = 8)

end

(* Module for defining the value of constant "ht" defined at a-chlat1.ads:34, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ht___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ht

 axiom ht__def_axiom :
  ((Ada__characters__latin_1__ht.ht ) = 9)

end

(* Module for defining the value of constant "lf" defined at a-chlat1.ads:35, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lf___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lf

 axiom lf__def_axiom :
  ((Ada__characters__latin_1__lf.lf ) = 10)

end

(* Module for defining the value of constant "vt" defined at a-chlat1.ads:36, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vt

 axiom vt__def_axiom :
  ((Ada__characters__latin_1__vt.vt ) = 11)

end

(* Module for defining the value of constant "ff" defined at a-chlat1.ads:37, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ff___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ff

 axiom ff__def_axiom :
  ((Ada__characters__latin_1__ff.ff ) = 12)

end

(* Module for defining the value of constant "cr" defined at a-chlat1.ads:38, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cr

 axiom cr__def_axiom :
  ((Ada__characters__latin_1__cr.cr ) = 13)

end

(* Module for defining the value of constant "so" defined at a-chlat1.ads:39, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__so___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__so

 axiom so____def_axiom :
  ((Ada__characters__latin_1__so.so__ ) = 14)

end

(* Module for defining the value of constant "si" defined at a-chlat1.ads:40, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__si___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__si

 axiom si__def_axiom :
  ((Ada__characters__latin_1__si.si ) = 15)

end

(* Module for defining the value of constant "dle" defined at a-chlat1.ads:42, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dle___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dle

 axiom dle__def_axiom :
  ((Ada__characters__latin_1__dle.dle ) = 16)

end

(* Module for defining the value of constant "dc1" defined at a-chlat1.ads:43, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc1___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc1

 axiom dc1__def_axiom :
  ((Ada__characters__latin_1__dc1.dc1 ) = 17)

end

(* Module for defining the value of constant "dc2" defined at a-chlat1.ads:44, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc2

 axiom dc2__def_axiom :
  ((Ada__characters__latin_1__dc2.dc2 ) = 18)

end

(* Module for defining the value of constant "dc3" defined at a-chlat1.ads:45, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc3___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc3

 axiom dc3__def_axiom :
  ((Ada__characters__latin_1__dc3.dc3 ) = 19)

end

(* Module for defining the value of constant "dc4" defined at a-chlat1.ads:46, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dc4___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dc4

 axiom dc4__def_axiom :
  ((Ada__characters__latin_1__dc4.dc4 ) = 20)

end

(* Module for defining the value of constant "nak" defined at a-chlat1.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nak___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nak

 axiom nak__def_axiom :
  ((Ada__characters__latin_1__nak.nak ) = 21)

end

(* Module for defining the value of constant "syn" defined at a-chlat1.ads:48, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__syn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__syn

 axiom syn__def_axiom :
  ((Ada__characters__latin_1__syn.syn ) = 22)

end

(* Module for defining the value of constant "etb" defined at a-chlat1.ads:49, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__etb___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__etb

 axiom etb__def_axiom :
  ((Ada__characters__latin_1__etb.etb ) = 23)

end

(* Module for defining the value of constant "can" defined at a-chlat1.ads:50, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__can___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__can

 axiom can__def_axiom :
  ((Ada__characters__latin_1__can.can ) = 24)

end

(* Module for defining the value of constant "em" defined at a-chlat1.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__em___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__em

 axiom em__def_axiom :
  ((Ada__characters__latin_1__em.em ) = 25)

end

(* Module for defining the value of constant "sub" defined at a-chlat1.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sub___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sub

 axiom sub__def_axiom :
  ((Ada__characters__latin_1__sub.sub ) = 26)

end

(* Module for defining the value of constant "esc" defined at a-chlat1.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__esc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__esc

 axiom esc__def_axiom :
  ((Ada__characters__latin_1__esc.esc ) = 27)

end

(* Module for defining the value of constant "fs" defined at a-chlat1.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fs

 axiom fs__def_axiom :
  ((Ada__characters__latin_1__fs.fs ) = 28)

end

(* Module for defining the value of constant "gs" defined at a-chlat1.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__gs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__gs

 axiom gs__def_axiom :
  ((Ada__characters__latin_1__gs.gs ) = 29)

end

(* Module for defining the value of constant "rs" defined at a-chlat1.ads:56, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__rs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__rs

 axiom rs__def_axiom :
  ((Ada__characters__latin_1__rs.rs ) = 30)

end

(* Module for defining the value of constant "us" defined at a-chlat1.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__us___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__us

 axiom us__def_axiom :
  ((Ada__characters__latin_1__us.us ) = 31)

end

(* Module for defining the value of constant "space" defined at a-chlat1.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__space___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__space

 axiom space__def_axiom :
  ((Ada__characters__latin_1__space.space ) = 32)

end

(* Module for defining the value of constant "exclamation" defined at a-chlat1.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__exclamation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__exclamation

 axiom exclamation__def_axiom :
  ((Ada__characters__latin_1__exclamation.exclamation ) = 33)

end

(* Module for defining the value of constant "quotation" defined at a-chlat1.ads:65, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__quotation

 axiom quotation__def_axiom :
  ((Ada__characters__latin_1__quotation.quotation ) = 34)

end

(* Module for defining the value of constant "number_sign" defined at a-chlat1.ads:66, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__number_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__number_sign

 axiom number_sign__def_axiom :
  ((Ada__characters__latin_1__number_sign.number_sign ) = 35)

end

(* Module for defining the value of constant "dollar_sign" defined at a-chlat1.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dollar_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dollar_sign

 axiom dollar_sign__def_axiom :
  ((Ada__characters__latin_1__dollar_sign.dollar_sign ) = 36)

end

(* Module for defining the value of constant "percent_sign" defined at a-chlat1.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__percent_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__percent_sign

 axiom percent_sign__def_axiom :
  ((Ada__characters__latin_1__percent_sign.percent_sign ) = 37)

end

(* Module for defining the value of constant "ampersand" defined at a-chlat1.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ampersand___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ampersand

 axiom ampersand__def_axiom :
  ((Ada__characters__latin_1__ampersand.ampersand ) = 38)

end

(* Module for defining the value of constant "apostrophe" defined at a-chlat1.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__apostrophe___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__apostrophe

 axiom apostrophe__def_axiom :
  ((Ada__characters__latin_1__apostrophe.apostrophe ) = 39)

end

(* Module for defining the value of constant "left_parenthesis" defined at a-chlat1.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_parenthesis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_parenthesis

 axiom left_parenthesis__def_axiom :
  ((Ada__characters__latin_1__left_parenthesis.left_parenthesis ) = 40)

end

(* Module for defining the value of constant "right_parenthesis" defined at a-chlat1.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_parenthesis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_parenthesis

 axiom right_parenthesis__def_axiom :
  ((Ada__characters__latin_1__right_parenthesis.right_parenthesis ) = 41)

end

(* Module for defining the value of constant "asterisk" defined at a-chlat1.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__asterisk___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__asterisk

 axiom asterisk__def_axiom :
  ((Ada__characters__latin_1__asterisk.asterisk ) = 42)

end

(* Module for defining the value of constant "plus_sign" defined at a-chlat1.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plus_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plus_sign

 axiom plus_sign__def_axiom :
  ((Ada__characters__latin_1__plus_sign.plus_sign ) = 43)

end

(* Module for defining the value of constant "comma" defined at a-chlat1.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__comma___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__comma

 axiom comma__def_axiom :
  ((Ada__characters__latin_1__comma.comma ) = 44)

end

(* Module for defining the value of constant "hyphen" defined at a-chlat1.ads:76, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__hyphen___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__hyphen

 axiom hyphen__def_axiom :
  ((Ada__characters__latin_1__hyphen.hyphen ) = 45)

end

(* Module for defining the value of constant "full_stop" defined at a-chlat1.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__full_stop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__full_stop

 axiom full_stop__def_axiom :
  ((Ada__characters__latin_1__full_stop.full_stop ) = 46)

end

(* Module for defining the value of constant "solidus" defined at a-chlat1.ads:79, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__solidus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__solidus

 axiom solidus__def_axiom :
  ((Ada__characters__latin_1__solidus.solidus ) = 47)

end

(* Module for defining the value of constant "colon" defined at a-chlat1.ads:83, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__colon___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__colon

 axiom colon__def_axiom :
  ((Ada__characters__latin_1__colon.colon ) = 58)

end

(* Module for defining the value of constant "semicolon" defined at a-chlat1.ads:84, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__semicolon___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__semicolon

 axiom semicolon__def_axiom :
  ((Ada__characters__latin_1__semicolon.semicolon ) = 59)

end

(* Module for defining the value of constant "less_than_sign" defined at a-chlat1.ads:85, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__less_than_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__less_than_sign

 axiom less_than_sign__def_axiom :
  ((Ada__characters__latin_1__less_than_sign.less_than_sign ) = 60)

end

(* Module for defining the value of constant "equals_sign" defined at a-chlat1.ads:86, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__equals_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__equals_sign

 axiom equals_sign__def_axiom :
  ((Ada__characters__latin_1__equals_sign.equals_sign ) = 61)

end

(* Module for defining the value of constant "greater_than_sign" defined at a-chlat1.ads:87, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__greater_than_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__greater_than_sign

 axiom greater_than_sign__def_axiom :
  ((Ada__characters__latin_1__greater_than_sign.greater_than_sign ) = 62)

end

(* Module for defining the value of constant "question" defined at a-chlat1.ads:88, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__question___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__question

 axiom question__def_axiom :
  ((Ada__characters__latin_1__question.question ) = 63)

end

(* Module for defining the value of constant "commercial_at" defined at a-chlat1.ads:89, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__commercial_at___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__commercial_at

 axiom commercial_at__def_axiom :
  ((Ada__characters__latin_1__commercial_at.commercial_at ) = 64)

end

(* Module for defining the value of constant "left_square_bracket" defined at a-chlat1.ads:93, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_square_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_square_bracket

 axiom left_square_bracket__def_axiom :
  ((Ada__characters__latin_1__left_square_bracket.left_square_bracket ) = 91)

end

(* Module for defining the value of constant "reverse_solidus" defined at a-chlat1.ads:94, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reverse_solidus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reverse_solidus

 axiom reverse_solidus__def_axiom :
  ((Ada__characters__latin_1__reverse_solidus.reverse_solidus ) = 92)

end

(* Module for defining the value of constant "right_square_bracket" defined at a-chlat1.ads:95, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_square_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_square_bracket

 axiom right_square_bracket__def_axiom :
  ((Ada__characters__latin_1__right_square_bracket.right_square_bracket ) = 93)

end

(* Module for defining the value of constant "circumflex" defined at a-chlat1.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__circumflex

 axiom circumflex__def_axiom :
  ((Ada__characters__latin_1__circumflex.circumflex ) = 94)

end

(* Module for defining the value of constant "low_line" defined at a-chlat1.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__low_line___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__low_line

 axiom low_line__def_axiom :
  ((Ada__characters__latin_1__low_line.low_line ) = 95)

end

(* Module for defining the value of constant "grave" defined at a-chlat1.ads:99, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__grave

 axiom grave__def_axiom :
  ((Ada__characters__latin_1__grave.grave ) = 96)

end

(* Module for defining the value of constant "lc_a" defined at a-chlat1.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a

 axiom lc_a__def_axiom :
  ((Ada__characters__latin_1__lc_a.lc_a ) = 97)

end

(* Module for defining the value of constant "lc_b" defined at a-chlat1.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_b___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_b

 axiom lc_b__def_axiom :
  ((Ada__characters__latin_1__lc_b.lc_b ) = 98)

end

(* Module for defining the value of constant "lc_c" defined at a-chlat1.ads:102, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_c___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_c

 axiom lc_c__def_axiom :
  ((Ada__characters__latin_1__lc_c.lc_c ) = 99)

end

(* Module for defining the value of constant "lc_d" defined at a-chlat1.ads:103, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_d___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_d

 axiom lc_d__def_axiom :
  ((Ada__characters__latin_1__lc_d.lc_d ) = 100)

end

(* Module for defining the value of constant "lc_e" defined at a-chlat1.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e

 axiom lc_e__def_axiom :
  ((Ada__characters__latin_1__lc_e.lc_e ) = 101)

end

(* Module for defining the value of constant "lc_f" defined at a-chlat1.ads:105, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_f___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_f

 axiom lc_f__def_axiom :
  ((Ada__characters__latin_1__lc_f.lc_f ) = 102)

end

(* Module for defining the value of constant "lc_g" defined at a-chlat1.ads:106, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_g___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_g

 axiom lc_g__def_axiom :
  ((Ada__characters__latin_1__lc_g.lc_g ) = 103)

end

(* Module for defining the value of constant "lc_h" defined at a-chlat1.ads:107, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_h___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_h

 axiom lc_h__def_axiom :
  ((Ada__characters__latin_1__lc_h.lc_h ) = 104)

end

(* Module for defining the value of constant "lc_i" defined at a-chlat1.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i

 axiom lc_i__def_axiom :
  ((Ada__characters__latin_1__lc_i.lc_i ) = 105)

end

(* Module for defining the value of constant "lc_j" defined at a-chlat1.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_j___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_j

 axiom lc_j__def_axiom :
  ((Ada__characters__latin_1__lc_j.lc_j ) = 106)

end

(* Module for defining the value of constant "lc_k" defined at a-chlat1.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_k___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_k

 axiom lc_k__def_axiom :
  ((Ada__characters__latin_1__lc_k.lc_k ) = 107)

end

(* Module for defining the value of constant "lc_l" defined at a-chlat1.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_l___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_l

 axiom lc_l__def_axiom :
  ((Ada__characters__latin_1__lc_l.lc_l ) = 108)

end

(* Module for defining the value of constant "lc_m" defined at a-chlat1.ads:112, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_m___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_m

 axiom lc_m__def_axiom :
  ((Ada__characters__latin_1__lc_m.lc_m ) = 109)

end

(* Module for defining the value of constant "lc_n" defined at a-chlat1.ads:113, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_n___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_n

 axiom lc_n__def_axiom :
  ((Ada__characters__latin_1__lc_n.lc_n ) = 110)

end

(* Module for defining the value of constant "lc_o" defined at a-chlat1.ads:114, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o

 axiom lc_o__def_axiom :
  ((Ada__characters__latin_1__lc_o.lc_o ) = 111)

end

(* Module for defining the value of constant "lc_p" defined at a-chlat1.ads:115, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_p___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_p

 axiom lc_p__def_axiom :
  ((Ada__characters__latin_1__lc_p.lc_p ) = 112)

end

(* Module for defining the value of constant "lc_q" defined at a-chlat1.ads:116, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_q___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_q

 axiom lc_q__def_axiom :
  ((Ada__characters__latin_1__lc_q.lc_q ) = 113)

end

(* Module for defining the value of constant "lc_r" defined at a-chlat1.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_r___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_r

 axiom lc_r__def_axiom :
  ((Ada__characters__latin_1__lc_r.lc_r ) = 114)

end

(* Module for defining the value of constant "lc_s" defined at a-chlat1.ads:118, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_s___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_s

 axiom lc_s__def_axiom :
  ((Ada__characters__latin_1__lc_s.lc_s ) = 115)

end

(* Module for defining the value of constant "lc_t" defined at a-chlat1.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_t

 axiom lc_t__def_axiom :
  ((Ada__characters__latin_1__lc_t.lc_t ) = 116)

end

(* Module for defining the value of constant "lc_u" defined at a-chlat1.ads:120, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u

 axiom lc_u__def_axiom :
  ((Ada__characters__latin_1__lc_u.lc_u ) = 117)

end

(* Module for defining the value of constant "lc_v" defined at a-chlat1.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_v___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_v

 axiom lc_v__def_axiom :
  ((Ada__characters__latin_1__lc_v.lc_v ) = 118)

end

(* Module for defining the value of constant "lc_w" defined at a-chlat1.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_w___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_w

 axiom lc_w__def_axiom :
  ((Ada__characters__latin_1__lc_w.lc_w ) = 119)

end

(* Module for defining the value of constant "lc_x" defined at a-chlat1.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_x___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_x

 axiom lc_x__def_axiom :
  ((Ada__characters__latin_1__lc_x.lc_x ) = 120)

end

(* Module for defining the value of constant "lc_y" defined at a-chlat1.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y

 axiom lc_y__def_axiom :
  ((Ada__characters__latin_1__lc_y.lc_y ) = 121)

end

(* Module for defining the value of constant "lc_z" defined at a-chlat1.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_z___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_z

 axiom lc_z__def_axiom :
  ((Ada__characters__latin_1__lc_z.lc_z ) = 122)

end

(* Module for defining the value of constant "left_curly_bracket" defined at a-chlat1.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_curly_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_curly_bracket

 axiom left_curly_bracket__def_axiom :
  ((Ada__characters__latin_1__left_curly_bracket.left_curly_bracket ) = 123)

end

(* Module for defining the value of constant "vertical_line" defined at a-chlat1.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vertical_line___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vertical_line

 axiom vertical_line__def_axiom :
  ((Ada__characters__latin_1__vertical_line.vertical_line ) = 124)

end

(* Module for defining the value of constant "right_curly_bracket" defined at a-chlat1.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_curly_bracket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_curly_bracket

 axiom right_curly_bracket__def_axiom :
  ((Ada__characters__latin_1__right_curly_bracket.right_curly_bracket ) = 125)

end

(* Module for defining the value of constant "tilde" defined at a-chlat1.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__tilde

 axiom tilde__def_axiom :
  ((Ada__characters__latin_1__tilde.tilde ) = 126)

end

(* Module for defining the value of constant "del" defined at a-chlat1.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__del___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__del

 axiom del__def_axiom :
  ((Ada__characters__latin_1__del.del ) = 127)

end

(* Module for defining the value of constant "reserved_128" defined at a-chlat1.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_128___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_128

 axiom reserved_128__def_axiom :
  ((Ada__characters__latin_1__reserved_128.reserved_128 ) = 128)

end

(* Module for defining the value of constant "reserved_129" defined at a-chlat1.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_129___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_129

 axiom reserved_129__def_axiom :
  ((Ada__characters__latin_1__reserved_129.reserved_129 ) = 129)

end

(* Module for defining the value of constant "bph" defined at a-chlat1.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__bph___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__bph

 axiom bph__def_axiom :
  ((Ada__characters__latin_1__bph.bph ) = 130)

end

(* Module for defining the value of constant "nbh" defined at a-chlat1.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nbh___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nbh

 axiom nbh__def_axiom :
  ((Ada__characters__latin_1__nbh.nbh ) = 131)

end

(* Module for defining the value of constant "reserved_132" defined at a-chlat1.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_132___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_132

 axiom reserved_132__def_axiom :
  ((Ada__characters__latin_1__reserved_132.reserved_132 ) = 132)

end

(* Module for defining the value of constant "nel" defined at a-chlat1.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__nel___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__nel

 axiom nel__def_axiom :
  ((Ada__characters__latin_1__nel.nel ) = 133)

end

(* Module for defining the value of constant "ssa" defined at a-chlat1.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ssa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ssa

 axiom ssa__def_axiom :
  ((Ada__characters__latin_1__ssa.ssa ) = 134)

end

(* Module for defining the value of constant "esa" defined at a-chlat1.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__esa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__esa

 axiom esa__def_axiom :
  ((Ada__characters__latin_1__esa.esa ) = 135)

end

(* Module for defining the value of constant "hts" defined at a-chlat1.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__hts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__hts

 axiom hts__def_axiom :
  ((Ada__characters__latin_1__hts.hts ) = 136)

end

(* Module for defining the value of constant "htj" defined at a-chlat1.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__htj___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__htj

 axiom htj__def_axiom :
  ((Ada__characters__latin_1__htj.htj ) = 137)

end

(* Module for defining the value of constant "vts" defined at a-chlat1.ads:151, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__vts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__vts

 axiom vts__def_axiom :
  ((Ada__characters__latin_1__vts.vts ) = 138)

end

(* Module for defining the value of constant "pld" defined at a-chlat1.ads:152, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pld___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pld

 axiom pld__def_axiom :
  ((Ada__characters__latin_1__pld.pld ) = 139)

end

(* Module for defining the value of constant "plu" defined at a-chlat1.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plu

 axiom plu__def_axiom :
  ((Ada__characters__latin_1__plu.plu ) = 140)

end

(* Module for defining the value of constant "ri" defined at a-chlat1.ads:154, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ri___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ri

 axiom ri__def_axiom :
  ((Ada__characters__latin_1__ri.ri ) = 141)

end

(* Module for defining the value of constant "ss2" defined at a-chlat1.ads:155, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ss2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ss2

 axiom ss2__def_axiom :
  ((Ada__characters__latin_1__ss2.ss2 ) = 142)

end

(* Module for defining the value of constant "ss3" defined at a-chlat1.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__ss3___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__ss3

 axiom ss3__def_axiom :
  ((Ada__characters__latin_1__ss3.ss3 ) = 143)

end

(* Module for defining the value of constant "dcs" defined at a-chlat1.ads:158, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__dcs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__dcs

 axiom dcs__def_axiom :
  ((Ada__characters__latin_1__dcs.dcs ) = 144)

end

(* Module for defining the value of constant "pu1" defined at a-chlat1.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pu1___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pu1

 axiom pu1__def_axiom :
  ((Ada__characters__latin_1__pu1.pu1 ) = 145)

end

(* Module for defining the value of constant "pu2" defined at a-chlat1.ads:160, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pu2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pu2

 axiom pu2__def_axiom :
  ((Ada__characters__latin_1__pu2.pu2 ) = 146)

end

(* Module for defining the value of constant "sts" defined at a-chlat1.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sts

 axiom sts__def_axiom :
  ((Ada__characters__latin_1__sts.sts ) = 147)

end

(* Module for defining the value of constant "cch" defined at a-chlat1.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cch___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cch

 axiom cch__def_axiom :
  ((Ada__characters__latin_1__cch.cch ) = 148)

end

(* Module for defining the value of constant "mw" defined at a-chlat1.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__mw___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__mw

 axiom mw__def_axiom :
  ((Ada__characters__latin_1__mw.mw ) = 149)

end

(* Module for defining the value of constant "spa" defined at a-chlat1.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__spa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__spa

 axiom spa__def_axiom :
  ((Ada__characters__latin_1__spa.spa ) = 150)

end

(* Module for defining the value of constant "epa" defined at a-chlat1.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__epa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__epa

 axiom epa__def_axiom :
  ((Ada__characters__latin_1__epa.epa ) = 151)

end

(* Module for defining the value of constant "sos" defined at a-chlat1.ads:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sos___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sos

 axiom sos__def_axiom :
  ((Ada__characters__latin_1__sos.sos ) = 152)

end

(* Module for defining the value of constant "reserved_153" defined at a-chlat1.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__reserved_153___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__reserved_153

 axiom reserved_153__def_axiom :
  ((Ada__characters__latin_1__reserved_153.reserved_153 ) = 153)

end

(* Module for defining the value of constant "sci" defined at a-chlat1.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__sci___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__sci

 axiom sci__def_axiom :
  ((Ada__characters__latin_1__sci.sci ) = 154)

end

(* Module for defining the value of constant "csi" defined at a-chlat1.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__csi___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__csi

 axiom csi__def_axiom :
  ((Ada__characters__latin_1__csi.csi ) = 155)

end

(* Module for defining the value of constant "st" defined at a-chlat1.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__st___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__st

 axiom st__def_axiom :
  ((Ada__characters__latin_1__st.st ) = 156)

end

(* Module for defining the value of constant "osc" defined at a-chlat1.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__osc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__osc

 axiom osc__def_axiom :
  ((Ada__characters__latin_1__osc.osc ) = 157)

end

(* Module for defining the value of constant "pm" defined at a-chlat1.ads:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pm

 axiom pm__def_axiom :
  ((Ada__characters__latin_1__pm.pm ) = 158)

end

(* Module for defining the value of constant "apc" defined at a-chlat1.ads:174, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__apc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__apc

 axiom apc__def_axiom :
  ((Ada__characters__latin_1__apc.apc ) = 159)

end

(* Module for defining the value of constant "no_break_space" defined at a-chlat1.ads:182, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__no_break_space___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__no_break_space

 axiom no_break_space__def_axiom :
  ((Ada__characters__latin_1__no_break_space.no_break_space ) = 160)

end

(* Module for defining the value of constant "inverted_exclamation" defined at a-chlat1.ads:184, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__inverted_exclamation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__inverted_exclamation

 axiom inverted_exclamation__def_axiom :
  ((Ada__characters__latin_1__inverted_exclamation.inverted_exclamation ) = 161)

end

(* Module for defining the value of constant "cent_sign" defined at a-chlat1.ads:185, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cent_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cent_sign

 axiom cent_sign__def_axiom :
  ((Ada__characters__latin_1__cent_sign.cent_sign ) = 162)

end

(* Module for defining the value of constant "pound_sign" defined at a-chlat1.ads:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pound_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pound_sign

 axiom pound_sign__def_axiom :
  ((Ada__characters__latin_1__pound_sign.pound_sign ) = 163)

end

(* Module for defining the value of constant "currency_sign" defined at a-chlat1.ads:187, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__currency_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__currency_sign

 axiom currency_sign__def_axiom :
  ((Ada__characters__latin_1__currency_sign.currency_sign ) = 164)

end

(* Module for defining the value of constant "yen_sign" defined at a-chlat1.ads:188, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__yen_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__yen_sign

 axiom yen_sign__def_axiom :
  ((Ada__characters__latin_1__yen_sign.yen_sign ) = 165)

end

(* Module for defining the value of constant "broken_bar" defined at a-chlat1.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__broken_bar___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__broken_bar

 axiom broken_bar__def_axiom :
  ((Ada__characters__latin_1__broken_bar.broken_bar ) = 166)

end

(* Module for defining the value of constant "section_sign" defined at a-chlat1.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__section_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__section_sign

 axiom section_sign__def_axiom :
  ((Ada__characters__latin_1__section_sign.section_sign ) = 167)

end

(* Module for defining the value of constant "diaeresis" defined at a-chlat1.ads:191, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__diaeresis

 axiom diaeresis__def_axiom :
  ((Ada__characters__latin_1__diaeresis.diaeresis ) = 168)

end

(* Module for defining the value of constant "copyright_sign" defined at a-chlat1.ads:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__copyright_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__copyright_sign

 axiom copyright_sign__def_axiom :
  ((Ada__characters__latin_1__copyright_sign.copyright_sign ) = 169)

end

(* Module for defining the value of constant "feminine_ordinal_indicator" defined at a-chlat1.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__feminine_ordinal_indicator___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__feminine_ordinal_indicator

 axiom feminine_ordinal_indicator__def_axiom :
  ((Ada__characters__latin_1__feminine_ordinal_indicator.feminine_ordinal_indicator ) = 170)

end

(* Module for defining the value of constant "left_angle_quotation" defined at a-chlat1.ads:194, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__left_angle_quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__left_angle_quotation

 axiom left_angle_quotation__def_axiom :
  ((Ada__characters__latin_1__left_angle_quotation.left_angle_quotation ) = 171)

end

(* Module for defining the value of constant "not_sign" defined at a-chlat1.ads:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__not_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__not_sign

 axiom not_sign__def_axiom :
  ((Ada__characters__latin_1__not_sign.not_sign ) = 172)

end

(* Module for defining the value of constant "soft_hyphen" defined at a-chlat1.ads:196, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__soft_hyphen___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__soft_hyphen

 axiom soft_hyphen__def_axiom :
  ((Ada__characters__latin_1__soft_hyphen.soft_hyphen ) = 173)

end

(* Module for defining the value of constant "registered_trade_mark_sign" defined at a-chlat1.ads:197, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__registered_trade_mark_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__registered_trade_mark_sign

 axiom registered_trade_mark_sign__def_axiom :
  ((Ada__characters__latin_1__registered_trade_mark_sign.registered_trade_mark_sign ) = 174)

end

(* Module for defining the value of constant "macron" defined at a-chlat1.ads:198, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__macron___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__macron

 axiom macron__def_axiom :
  ((Ada__characters__latin_1__macron.macron ) = 175)

end

(* Module for defining the value of constant "degree_sign" defined at a-chlat1.ads:202, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__degree_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__degree_sign

 axiom degree_sign__def_axiom :
  ((Ada__characters__latin_1__degree_sign.degree_sign ) = 176)

end

(* Module for defining the value of constant "plus_minus_sign" defined at a-chlat1.ads:204, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__plus_minus_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__plus_minus_sign

 axiom plus_minus_sign__def_axiom :
  ((Ada__characters__latin_1__plus_minus_sign.plus_minus_sign ) = 177)

end

(* Module for defining the value of constant "superscript_two" defined at a-chlat1.ads:205, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_two___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_two

 axiom superscript_two__def_axiom :
  ((Ada__characters__latin_1__superscript_two.superscript_two ) = 178)

end

(* Module for defining the value of constant "superscript_three" defined at a-chlat1.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_three___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_three

 axiom superscript_three__def_axiom :
  ((Ada__characters__latin_1__superscript_three.superscript_three ) = 179)

end

(* Module for defining the value of constant "acute" defined at a-chlat1.ads:207, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__acute

 axiom acute__def_axiom :
  ((Ada__characters__latin_1__acute.acute ) = 180)

end

(* Module for defining the value of constant "micro_sign" defined at a-chlat1.ads:208, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__micro_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__micro_sign

 axiom micro_sign__def_axiom :
  ((Ada__characters__latin_1__micro_sign.micro_sign ) = 181)

end

(* Module for defining the value of constant "pilcrow_sign" defined at a-chlat1.ads:209, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__pilcrow_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__pilcrow_sign

 axiom pilcrow_sign__def_axiom :
  ((Ada__characters__latin_1__pilcrow_sign.pilcrow_sign ) = 182)

end

(* Module for defining the value of constant "middle_dot" defined at a-chlat1.ads:211, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__middle_dot___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__middle_dot

 axiom middle_dot__def_axiom :
  ((Ada__characters__latin_1__middle_dot.middle_dot ) = 183)

end

(* Module for defining the value of constant "cedilla" defined at a-chlat1.ads:212, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__cedilla

 axiom cedilla__def_axiom :
  ((Ada__characters__latin_1__cedilla.cedilla ) = 184)

end

(* Module for defining the value of constant "superscript_one" defined at a-chlat1.ads:213, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__superscript_one___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__superscript_one

 axiom superscript_one__def_axiom :
  ((Ada__characters__latin_1__superscript_one.superscript_one ) = 185)

end

(* Module for defining the value of constant "masculine_ordinal_indicator" defined at a-chlat1.ads:214, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__masculine_ordinal_indicator___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__masculine_ordinal_indicator

 axiom masculine_ordinal_indicator__def_axiom :
  ((Ada__characters__latin_1__masculine_ordinal_indicator.masculine_ordinal_indicator ) = 186)

end

(* Module for defining the value of constant "right_angle_quotation" defined at a-chlat1.ads:215, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__right_angle_quotation___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__right_angle_quotation

 axiom right_angle_quotation__def_axiom :
  ((Ada__characters__latin_1__right_angle_quotation.right_angle_quotation ) = 187)

end

(* Module for defining the value of constant "fraction_one_quarter" defined at a-chlat1.ads:216, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_one_quarter___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_one_quarter

 axiom fraction_one_quarter__def_axiom :
  ((Ada__characters__latin_1__fraction_one_quarter.fraction_one_quarter ) = 188)

end

(* Module for defining the value of constant "fraction_one_half" defined at a-chlat1.ads:217, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_one_half___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_one_half

 axiom fraction_one_half__def_axiom :
  ((Ada__characters__latin_1__fraction_one_half.fraction_one_half ) = 189)

end

(* Module for defining the value of constant "fraction_three_quarters" defined at a-chlat1.ads:218, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__fraction_three_quarters___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__fraction_three_quarters

 axiom fraction_three_quarters__def_axiom :
  ((Ada__characters__latin_1__fraction_three_quarters.fraction_three_quarters ) = 190)

end

(* Module for defining the value of constant "inverted_question" defined at a-chlat1.ads:219, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__inverted_question___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__inverted_question

 axiom inverted_question__def_axiom :
  ((Ada__characters__latin_1__inverted_question.inverted_question ) = 191)

end

(* Module for defining the value of constant "uc_a_grave" defined at a-chlat1.ads:223, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_grave

 axiom uc_a_grave__def_axiom :
  ((Ada__characters__latin_1__uc_a_grave.uc_a_grave ) = 192)

end

(* Module for defining the value of constant "uc_a_acute" defined at a-chlat1.ads:224, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_acute

 axiom uc_a_acute__def_axiom :
  ((Ada__characters__latin_1__uc_a_acute.uc_a_acute ) = 193)

end

(* Module for defining the value of constant "uc_a_circumflex" defined at a-chlat1.ads:225, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_circumflex

 axiom uc_a_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_a_circumflex.uc_a_circumflex ) = 194)

end

(* Module for defining the value of constant "uc_a_tilde" defined at a-chlat1.ads:226, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_tilde

 axiom uc_a_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_a_tilde.uc_a_tilde ) = 195)

end

(* Module for defining the value of constant "uc_a_diaeresis" defined at a-chlat1.ads:227, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_diaeresis

 axiom uc_a_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_a_diaeresis.uc_a_diaeresis ) = 196)

end

(* Module for defining the value of constant "uc_a_ring" defined at a-chlat1.ads:228, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_a_ring___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_a_ring

 axiom uc_a_ring__def_axiom :
  ((Ada__characters__latin_1__uc_a_ring.uc_a_ring ) = 197)

end

(* Module for defining the value of constant "uc_ae_diphthong" defined at a-chlat1.ads:229, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_ae_diphthong___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_ae_diphthong

 axiom uc_ae_diphthong__def_axiom :
  ((Ada__characters__latin_1__uc_ae_diphthong.uc_ae_diphthong ) = 198)

end

(* Module for defining the value of constant "uc_c_cedilla" defined at a-chlat1.ads:230, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_c_cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_c_cedilla

 axiom uc_c_cedilla__def_axiom :
  ((Ada__characters__latin_1__uc_c_cedilla.uc_c_cedilla ) = 199)

end

(* Module for defining the value of constant "uc_e_grave" defined at a-chlat1.ads:231, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_grave

 axiom uc_e_grave__def_axiom :
  ((Ada__characters__latin_1__uc_e_grave.uc_e_grave ) = 200)

end

(* Module for defining the value of constant "uc_e_acute" defined at a-chlat1.ads:232, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_acute

 axiom uc_e_acute__def_axiom :
  ((Ada__characters__latin_1__uc_e_acute.uc_e_acute ) = 201)

end

(* Module for defining the value of constant "uc_e_circumflex" defined at a-chlat1.ads:233, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_circumflex

 axiom uc_e_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_e_circumflex.uc_e_circumflex ) = 202)

end

(* Module for defining the value of constant "uc_e_diaeresis" defined at a-chlat1.ads:234, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_e_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_e_diaeresis

 axiom uc_e_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_e_diaeresis.uc_e_diaeresis ) = 203)

end

(* Module for defining the value of constant "uc_i_grave" defined at a-chlat1.ads:235, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_grave

 axiom uc_i_grave__def_axiom :
  ((Ada__characters__latin_1__uc_i_grave.uc_i_grave ) = 204)

end

(* Module for defining the value of constant "uc_i_acute" defined at a-chlat1.ads:236, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_acute

 axiom uc_i_acute__def_axiom :
  ((Ada__characters__latin_1__uc_i_acute.uc_i_acute ) = 205)

end

(* Module for defining the value of constant "uc_i_circumflex" defined at a-chlat1.ads:237, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_circumflex

 axiom uc_i_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_i_circumflex.uc_i_circumflex ) = 206)

end

(* Module for defining the value of constant "uc_i_diaeresis" defined at a-chlat1.ads:238, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_i_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_i_diaeresis

 axiom uc_i_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_i_diaeresis.uc_i_diaeresis ) = 207)

end

(* Module for defining the value of constant "uc_icelandic_eth" defined at a-chlat1.ads:242, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_icelandic_eth___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_icelandic_eth

 axiom uc_icelandic_eth__def_axiom :
  ((Ada__characters__latin_1__uc_icelandic_eth.uc_icelandic_eth ) = 208)

end

(* Module for defining the value of constant "uc_n_tilde" defined at a-chlat1.ads:243, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_n_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_n_tilde

 axiom uc_n_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_n_tilde.uc_n_tilde ) = 209)

end

(* Module for defining the value of constant "uc_o_grave" defined at a-chlat1.ads:244, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_grave

 axiom uc_o_grave__def_axiom :
  ((Ada__characters__latin_1__uc_o_grave.uc_o_grave ) = 210)

end

(* Module for defining the value of constant "uc_o_acute" defined at a-chlat1.ads:245, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_acute

 axiom uc_o_acute__def_axiom :
  ((Ada__characters__latin_1__uc_o_acute.uc_o_acute ) = 211)

end

(* Module for defining the value of constant "uc_o_circumflex" defined at a-chlat1.ads:246, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_circumflex

 axiom uc_o_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_o_circumflex.uc_o_circumflex ) = 212)

end

(* Module for defining the value of constant "uc_o_tilde" defined at a-chlat1.ads:247, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_tilde

 axiom uc_o_tilde__def_axiom :
  ((Ada__characters__latin_1__uc_o_tilde.uc_o_tilde ) = 213)

end

(* Module for defining the value of constant "uc_o_diaeresis" defined at a-chlat1.ads:248, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_diaeresis

 axiom uc_o_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_o_diaeresis.uc_o_diaeresis ) = 214)

end

(* Module for defining the value of constant "multiplication_sign" defined at a-chlat1.ads:249, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__multiplication_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__multiplication_sign

 axiom multiplication_sign__def_axiom :
  ((Ada__characters__latin_1__multiplication_sign.multiplication_sign ) = 215)

end

(* Module for defining the value of constant "uc_o_oblique_stroke" defined at a-chlat1.ads:250, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_o_oblique_stroke___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_o_oblique_stroke

 axiom uc_o_oblique_stroke__def_axiom :
  ((Ada__characters__latin_1__uc_o_oblique_stroke.uc_o_oblique_stroke ) = 216)

end

(* Module for defining the value of constant "uc_u_grave" defined at a-chlat1.ads:251, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_grave

 axiom uc_u_grave__def_axiom :
  ((Ada__characters__latin_1__uc_u_grave.uc_u_grave ) = 217)

end

(* Module for defining the value of constant "uc_u_acute" defined at a-chlat1.ads:252, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_acute

 axiom uc_u_acute__def_axiom :
  ((Ada__characters__latin_1__uc_u_acute.uc_u_acute ) = 218)

end

(* Module for defining the value of constant "uc_u_circumflex" defined at a-chlat1.ads:253, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_circumflex

 axiom uc_u_circumflex__def_axiom :
  ((Ada__characters__latin_1__uc_u_circumflex.uc_u_circumflex ) = 219)

end

(* Module for defining the value of constant "uc_u_diaeresis" defined at a-chlat1.ads:254, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_u_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_u_diaeresis

 axiom uc_u_diaeresis__def_axiom :
  ((Ada__characters__latin_1__uc_u_diaeresis.uc_u_diaeresis ) = 220)

end

(* Module for defining the value of constant "uc_y_acute" defined at a-chlat1.ads:255, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_y_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_y_acute

 axiom uc_y_acute__def_axiom :
  ((Ada__characters__latin_1__uc_y_acute.uc_y_acute ) = 221)

end

(* Module for defining the value of constant "uc_icelandic_thorn" defined at a-chlat1.ads:256, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__uc_icelandic_thorn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__uc_icelandic_thorn

 axiom uc_icelandic_thorn__def_axiom :
  ((Ada__characters__latin_1__uc_icelandic_thorn.uc_icelandic_thorn ) = 222)

end

(* Module for defining the value of constant "lc_german_sharp_s" defined at a-chlat1.ads:257, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_german_sharp_s___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_german_sharp_s

 axiom lc_german_sharp_s__def_axiom :
  ((Ada__characters__latin_1__lc_german_sharp_s.lc_german_sharp_s ) = 223)

end

(* Module for defining the value of constant "lc_a_grave" defined at a-chlat1.ads:261, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_grave

 axiom lc_a_grave__def_axiom :
  ((Ada__characters__latin_1__lc_a_grave.lc_a_grave ) = 224)

end

(* Module for defining the value of constant "lc_a_acute" defined at a-chlat1.ads:262, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_acute

 axiom lc_a_acute__def_axiom :
  ((Ada__characters__latin_1__lc_a_acute.lc_a_acute ) = 225)

end

(* Module for defining the value of constant "lc_a_circumflex" defined at a-chlat1.ads:263, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_circumflex

 axiom lc_a_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_a_circumflex.lc_a_circumflex ) = 226)

end

(* Module for defining the value of constant "lc_a_tilde" defined at a-chlat1.ads:264, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_tilde

 axiom lc_a_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_a_tilde.lc_a_tilde ) = 227)

end

(* Module for defining the value of constant "lc_a_diaeresis" defined at a-chlat1.ads:265, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_diaeresis

 axiom lc_a_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_a_diaeresis.lc_a_diaeresis ) = 228)

end

(* Module for defining the value of constant "lc_a_ring" defined at a-chlat1.ads:266, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_a_ring___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_a_ring

 axiom lc_a_ring__def_axiom :
  ((Ada__characters__latin_1__lc_a_ring.lc_a_ring ) = 229)

end

(* Module for defining the value of constant "lc_ae_diphthong" defined at a-chlat1.ads:267, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_ae_diphthong___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_ae_diphthong

 axiom lc_ae_diphthong__def_axiom :
  ((Ada__characters__latin_1__lc_ae_diphthong.lc_ae_diphthong ) = 230)

end

(* Module for defining the value of constant "lc_c_cedilla" defined at a-chlat1.ads:268, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_c_cedilla___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_c_cedilla

 axiom lc_c_cedilla__def_axiom :
  ((Ada__characters__latin_1__lc_c_cedilla.lc_c_cedilla ) = 231)

end

(* Module for defining the value of constant "lc_e_grave" defined at a-chlat1.ads:269, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_grave

 axiom lc_e_grave__def_axiom :
  ((Ada__characters__latin_1__lc_e_grave.lc_e_grave ) = 232)

end

(* Module for defining the value of constant "lc_e_acute" defined at a-chlat1.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_acute

 axiom lc_e_acute__def_axiom :
  ((Ada__characters__latin_1__lc_e_acute.lc_e_acute ) = 233)

end

(* Module for defining the value of constant "lc_e_circumflex" defined at a-chlat1.ads:271, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_circumflex

 axiom lc_e_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_e_circumflex.lc_e_circumflex ) = 234)

end

(* Module for defining the value of constant "lc_e_diaeresis" defined at a-chlat1.ads:272, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_e_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_e_diaeresis

 axiom lc_e_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_e_diaeresis.lc_e_diaeresis ) = 235)

end

(* Module for defining the value of constant "lc_i_grave" defined at a-chlat1.ads:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_grave

 axiom lc_i_grave__def_axiom :
  ((Ada__characters__latin_1__lc_i_grave.lc_i_grave ) = 236)

end

(* Module for defining the value of constant "lc_i_acute" defined at a-chlat1.ads:274, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_acute

 axiom lc_i_acute__def_axiom :
  ((Ada__characters__latin_1__lc_i_acute.lc_i_acute ) = 237)

end

(* Module for defining the value of constant "lc_i_circumflex" defined at a-chlat1.ads:275, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_circumflex

 axiom lc_i_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_i_circumflex.lc_i_circumflex ) = 238)

end

(* Module for defining the value of constant "lc_i_diaeresis" defined at a-chlat1.ads:276, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_i_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_i_diaeresis

 axiom lc_i_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_i_diaeresis.lc_i_diaeresis ) = 239)

end

(* Module for defining the value of constant "lc_icelandic_eth" defined at a-chlat1.ads:279, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_icelandic_eth___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_icelandic_eth

 axiom lc_icelandic_eth__def_axiom :
  ((Ada__characters__latin_1__lc_icelandic_eth.lc_icelandic_eth ) = 240)

end

(* Module for defining the value of constant "lc_n_tilde" defined at a-chlat1.ads:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_n_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_n_tilde

 axiom lc_n_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_n_tilde.lc_n_tilde ) = 241)

end

(* Module for defining the value of constant "lc_o_grave" defined at a-chlat1.ads:281, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_grave

 axiom lc_o_grave__def_axiom :
  ((Ada__characters__latin_1__lc_o_grave.lc_o_grave ) = 242)

end

(* Module for defining the value of constant "lc_o_acute" defined at a-chlat1.ads:282, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_acute

 axiom lc_o_acute__def_axiom :
  ((Ada__characters__latin_1__lc_o_acute.lc_o_acute ) = 243)

end

(* Module for defining the value of constant "lc_o_circumflex" defined at a-chlat1.ads:283, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_circumflex

 axiom lc_o_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_o_circumflex.lc_o_circumflex ) = 244)

end

(* Module for defining the value of constant "lc_o_tilde" defined at a-chlat1.ads:284, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_tilde___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_tilde

 axiom lc_o_tilde__def_axiom :
  ((Ada__characters__latin_1__lc_o_tilde.lc_o_tilde ) = 245)

end

(* Module for defining the value of constant "lc_o_diaeresis" defined at a-chlat1.ads:285, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_diaeresis

 axiom lc_o_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_o_diaeresis.lc_o_diaeresis ) = 246)

end

(* Module for defining the value of constant "division_sign" defined at a-chlat1.ads:286, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__division_sign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__division_sign

 axiom division_sign__def_axiom :
  ((Ada__characters__latin_1__division_sign.division_sign ) = 247)

end

(* Module for defining the value of constant "lc_o_oblique_stroke" defined at a-chlat1.ads:287, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_o_oblique_stroke___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_o_oblique_stroke

 axiom lc_o_oblique_stroke__def_axiom :
  ((Ada__characters__latin_1__lc_o_oblique_stroke.lc_o_oblique_stroke ) = 248)

end

(* Module for defining the value of constant "lc_u_grave" defined at a-chlat1.ads:288, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_grave___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_grave

 axiom lc_u_grave__def_axiom :
  ((Ada__characters__latin_1__lc_u_grave.lc_u_grave ) = 249)

end

(* Module for defining the value of constant "lc_u_acute" defined at a-chlat1.ads:289, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_acute

 axiom lc_u_acute__def_axiom :
  ((Ada__characters__latin_1__lc_u_acute.lc_u_acute ) = 250)

end

(* Module for defining the value of constant "lc_u_circumflex" defined at a-chlat1.ads:290, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_circumflex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_circumflex

 axiom lc_u_circumflex__def_axiom :
  ((Ada__characters__latin_1__lc_u_circumflex.lc_u_circumflex ) = 251)

end

(* Module for defining the value of constant "lc_u_diaeresis" defined at a-chlat1.ads:291, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_u_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_u_diaeresis

 axiom lc_u_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_u_diaeresis.lc_u_diaeresis ) = 252)

end

(* Module for defining the value of constant "lc_y_acute" defined at a-chlat1.ads:292, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y_acute___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y_acute

 axiom lc_y_acute__def_axiom :
  ((Ada__characters__latin_1__lc_y_acute.lc_y_acute ) = 253)

end

(* Module for defining the value of constant "lc_icelandic_thorn" defined at a-chlat1.ads:293, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_icelandic_thorn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_icelandic_thorn

 axiom lc_icelandic_thorn__def_axiom :
  ((Ada__characters__latin_1__lc_icelandic_thorn.lc_icelandic_thorn ) = 254)

end

(* Module for defining the value of constant "lc_y_diaeresis" defined at a-chlat1.ads:294, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__characters__latin_1__lc_y_diaeresis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__characters__latin_1__lc_y_diaeresis

 axiom lc_y_diaeresis__def_axiom :
  ((Ada__characters__latin_1__lc_y_diaeresis.lc_y_diaeresis ) = 255)

end

(* Module for defining the value of constant "max_program_length" defined at machine.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__max_program_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__max_program_length

 axiom max_program_length__def_axiom :
  ((Machine__max_program_length.max_program_length ) = 65536)

end

(* Module for defining the value of constant "C15b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C15b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C16b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C16b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C17b" defined at machine.adb:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C17b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C22b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C22b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C23b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C23b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C24b" defined at machine.adb:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C24b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C29b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C29b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C30b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C30b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C31b" defined at machine.adb:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C31b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C36b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C36b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C37b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C37b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C38b" defined at machine.adb:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C38b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C43b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C43b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C44b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C44b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C45b" defined at machine.adb:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C45b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C50b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C50b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C51b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C51b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C52b" defined at machine.adb:176, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C52b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C61b" defined at machine.adb:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C61b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C64b" defined at machine.adb:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__executeprogram__L_1__C64b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C102b" defined at machine.adb:278, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__C102b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C107b" defined at machine.adb:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performadd__C107b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C112b" defined at machine.adb:289, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__C112b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C117b" defined at machine.adb:291, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performsub__C117b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C122b" defined at machine.adb:300, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__C122b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C127b" defined at machine.adb:302, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmul__C127b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C132b" defined at machine.adb:311, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__C132b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C137b" defined at machine.adb:313, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performdiv__C137b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C142b" defined at machine.adb:322, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performldr__C142b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C147b" defined at machine.adb:324, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performldr__C147b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C152b" defined at machine.adb:333, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performstr__C152b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C157b" defined at machine.adb:335, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performstr__C157b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C162b" defined at machine.adb:344, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmov__C162b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C166b" defined at machine.adb:346, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performmov__C166b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C171b" defined at machine.adb:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C171b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C172b" defined at machine.adb:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C172b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C176b" defined at machine.adb:356, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C176b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C177b" defined at machine.adb:356, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjmp__C177b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C182b" defined at machine.adb:365, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C182b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C183b" defined at machine.adb:365, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C183b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C188b" defined at machine.adb:367, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C188b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C189b" defined at machine.adb:367, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C189b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C193b" defined at machine.adb:372, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performjz__C193b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C197b" defined at machine.adb:382, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__performnop__C197b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C210b" defined at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C210b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C215b" defined at machine.adb:278 instantiated at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B214b__C215b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C220b" defined at machine.adb:280 instantiated at machine.adb:403, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B214b__C220b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C224b" defined at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C224b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C229b" defined at machine.adb:289 instantiated at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B228b__C229b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C234b" defined at machine.adb:291 instantiated at machine.adb:405, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B228b__C234b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C238b" defined at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C238b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C243b" defined at machine.adb:300 instantiated at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B242b__C243b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C248b" defined at machine.adb:302 instantiated at machine.adb:407, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B242b__C248b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C252b" defined at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C252b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C257b" defined at machine.adb:311 instantiated at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B256b__C257b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C262b" defined at machine.adb:313 instantiated at machine.adb:409, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B256b__C262b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C266b" defined at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C266b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C272b" defined at machine.adb:322 instantiated at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B271b__C272b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C277b" defined at machine.adb:324 instantiated at machine.adb:411, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B271b__C277b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C281b" defined at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C281b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C287b" defined at machine.adb:333 instantiated at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B286b__C287b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C292b" defined at machine.adb:335 instantiated at machine.adb:413, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B286b__C292b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C296b" defined at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C296b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C301b" defined at machine.adb:344 instantiated at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B300b__C301b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C305b" defined at machine.adb:346 instantiated at machine.adb:415, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B300b__C305b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C309b" defined at machine.adb:417, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C309b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C310b" defined at machine.adb:417, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C310b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C313b" defined at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C313b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C317b" defined at machine.adb:355 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B316b__C317b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C318b" defined at machine.adb:355 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B316b__C318b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C322b" defined at machine.adb:356 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B316b__C322b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C323b" defined at machine.adb:356 instantiated at machine.adb:420, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B316b__C323b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C327b" defined at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__C327b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C332b" defined at machine.adb:365 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B331b__C332b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C333b" defined at machine.adb:365 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B331b__C333b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C338b" defined at machine.adb:367 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B331b__C338b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C339b" defined at machine.adb:367 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B331b__C339b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C343b" defined at machine.adb:372 instantiated at machine.adb:422, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B331b__C343b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C349b" defined at machine.adb:382 instantiated at machine.adb:424, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__dynamicanalysis__L_2__B348b__C349b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C356b" defined at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__C356b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C364b" defined at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C364b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C369b" defined at machine.adb:278 instantiated at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C374b" defined at machine.adb:280 instantiated at machine.adb:403 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C378b" defined at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C378b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C383b" defined at machine.adb:289 instantiated at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C388b" defined at machine.adb:291 instantiated at machine.adb:405 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C392b" defined at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C392b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C397b" defined at machine.adb:300 instantiated at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C402b" defined at machine.adb:302 instantiated at machine.adb:407 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C406b" defined at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C406b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C411b" defined at machine.adb:311 instantiated at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C416b" defined at machine.adb:313 instantiated at machine.adb:409 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C420b" defined at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C420b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C426b" defined at machine.adb:322 instantiated at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C431b" defined at machine.adb:324 instantiated at machine.adb:411 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C435b" defined at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C435b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C441b" defined at machine.adb:333 instantiated at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C446b" defined at machine.adb:335 instantiated at machine.adb:413 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C450b" defined at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C450b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C455b" defined at machine.adb:344 instantiated at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C459b" defined at machine.adb:346 instantiated at machine.adb:415 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C463b" defined at machine.adb:417 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C463b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C464b" defined at machine.adb:417 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C464b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C467b" defined at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C467b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C471b" defined at machine.adb:355 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C472b" defined at machine.adb:355 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C476b" defined at machine.adb:356 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C477b" defined at machine.adb:356 instantiated at machine.adb:420 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C481b" defined at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__C481b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C486b" defined at machine.adb:365 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C487b" defined at machine.adb:365 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C492b" defined at machine.adb:367 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C493b" defined at machine.adb:367 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C497b" defined at machine.adb:372 instantiated at machine.adb:422 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "C503b" defined at machine.adb:382 instantiated at machine.adb:424 instantiated at machine.adb:439, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at instruction.ads:70, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__init___axiom
 use import "_gnatprove_standard".Main

 val init 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "generaterandominstr" defined at instruction.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__generaterandominstr___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__instr
 use        Instruction__instr___axiom

 val generaterandominstr 
   (inst__split_fields : Instruction__instr.__split_fields__ref) (inst__split_discrs : Instruction__instr.__split_discrs__ref) (inst__attr__constrained : bool) : unit
  requires {  true }
  ensures {  (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = inst__attr__constrained } True True True True) }
  writes {inst__split_fields, inst__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "debugprintinstr" defined at instruction.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Instruction__debugprintinstr___axiom
 use import "_gnatprove_standard".Main
 use        Instruction__instr

 val debugprintinstr 
   (inst : Instruction__instr.instr) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at debug.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at debug.ads:8, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put_line___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put_line 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at debug.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put__2___axiom
 use import "_gnatprove_standard".Main

 val put__2 
   (item : int) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at debug.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__new_line___axiom
 use import "_gnatprove_standard".Main

 val new_line 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at debug.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Debug__put__3___axiom
 use import "_gnatprove_standard".Main

 val put__3 
   (item : int) : unit
  requires {  true }
  ensures {  true }

end

(* Module for declaring a program function (and possibly an axiom) for "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Machine__executeprogram___axiom
 use        Machine__pc
 use        Machine__regs
 use        Machine__memory
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        Machine__returncode___axiom
 use        Machine__programcounter___axiom
 use        Machine__regs
 use        Machine__memory
 use        Machine__pc
 use        Array__Int__Instruction__instr

 val executeprogram 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) (ret : int__ref) (result__ : int__ref) : unit
  requires {  true }
  ensures {  ( ( (Machine__returncode___axiom.dynamic_invariant ret.int__content True True True True) /\ (Standard__integer___axiom.dynamic_invariant result__.int__content True True True True) ) /\ (Machine__programcounter___axiom.dynamic_invariant Machine__pc.pc.int__content True True True True) ) }
  reads {Machine__regs.regs, Machine__memory.memory}
  writes {Machine__regs.regs, Machine__memory.memory, Machine__pc.pc, ret, result__}

end

(* Module for declaring a program function (and possibly an axiom) for "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Machine__detectinvalidbehaviour___axiom
 use import "_gnatprove_standard".Main
 use        Machine__detectinvalidbehaviour
 use        Array__Int__Instruction__instr

 val detectinvalidbehaviour 
   (prog : Array__Int__Instruction__instr.map) (cycles : int) : bool
  requires {  true }
  ensures {  ( ( (result = (Machine__detectinvalidbehaviour.detectinvalidbehaviour prog cycles)) /\ (Machine__detectinvalidbehaviour.detectinvalidbehaviour__function_guard result prog cycles) ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "domov" defined at machine.adb:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Machine__domov___axiom
 use        Machine__regs
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Machine__returncode___axiom
 use        Machine__regs

 val domov 
   (rd : int) (offs : int) (ret : int__ref) : unit
  requires {  ( (offs >= ( -2147483648 )) /\ (offs <= 2147483647) ) }
  ensures {  (Machine__returncode___axiom.dynamic_invariant ret.int__content True True True True) }
  reads {Machine__regs.regs}
  writes {Machine__regs.regs, ret}

end

(* Module for defining the value of the aggregate at machine.adb:19, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__memory__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Machine__memory__aggregate_def
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___906   : int.
   (let temp___905 = (Machine__memory__aggregate_def.machine__memory__aggregate_def temp___906) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___906 True True True True)) then (
     (forall temp___907   : int.
      ((Array__Int__Machine__dataval.get temp___905 temp___907) = ( 0 : Machine__dataval.dataval )))) else true)))
  )

end

(* Module for defining the value of the aggregate at machine.adb:16, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__regs__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Machine__regs__aggregate_def
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___910   : int.
   (let temp___909 = (Machine__regs__aggregate_def.machine__regs__aggregate_def temp___910) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___910 True True True True)) then (
     (forall temp___911   : int.
      ((Array__Int__Machine__dataval.get temp___909 temp___911) = ( 0 : Machine__dataval.dataval )))) else true)))
  )

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "machine" defined at machine.ads:4, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Machine__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer___axiom
 use        Machine__max_program_length
 use        Machine__programcounter___axiom
 use        Machine__regs
 use        Machine__memory
 use        Machine__pc
 use        Array__Int__Machine__dataval
 use        Machine__memory__aggregate_def
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Machine__regs__aggregate_def
 use        Array__Int__Machine__dataval
 use        Standard__integer___axiom
 use        Machine__dataval___axiom
 use        Machine__regs___axiom
 use        Machine__regs__aggregate_def___axiom
 use        Machine__memory___axiom
 use        Machine__memory__aggregate_def___axiom
 use        Machine__pc___axiom
 use        Machine__max_program_length___axiom
 use        Machine__programcounter___axiom

 let def #"machine.ads" 4 0 0#"GP_Subp:machine.ads:4" "W:diverges:N" 
   (__void_param : unit)
  requires { #"machine.ads" 4 0 0# true }
  ensures { #"machine.ads" 4 0 0# true }
   =
  ( (#"machine.ads" 4 0 0# ());
  (#"machine.ads" 12 0 0# ());
  (#"machine.ads" 15 0 0# ( #"machine.ads" 15 0 0# abstract ensures {true}(let _ = 65536 in (
   ()))
   end ;
  #"machine.ads" 15 0 0# assume { #"machine.ads" 15 0 0# (Standard__integer___axiom.dynamic_invariant Machine__max_program_length.max_program_length True False True True) } ));
  (#"machine.ads" 19 0 0# ());
  (#"machine.ads" 22 0 0# ());
  (#"machine.ads" 35 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.ads" 47 0 0# ());
  (#"machine.adb" 8 0 0# ());
  (#"machine.adb" 11 0 0# ());
  (#"machine.adb" 12 0 0# ());
  (#"machine.adb" 13 0 0# ());
  (#"machine.adb" 16 0 0# ());
  (#"machine.adb" 16 0 0# ());
  (#"machine.adb" 16 0 0# ());
  (#"machine.adb" 16 0 0# ());
  (#"machine.adb" 16 0 0# #"machine.adb" 16 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Machine__regs__aggregate_def.machine__regs__aggregate_def(0)) ));
  (#"machine.adb" 19 0 0# ());
  (#"machine.adb" 19 0 0# ());
  (#"machine.adb" 19 0 0# #"machine.adb" 19 0 0# Machine__memory.memory.Array__Int__Machine__dataval.map__content <- ( (Machine__memory__aggregate_def.machine__memory__aggregate_def(0)) ));
  (#"machine.adb" 22 0 0# ( #"machine.adb" 22 0 0# Machine__pc.pc.int__content <- ( 1 );
  #"machine.adb" 22 0 0# assume { #"machine.adb" 22 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__pc.pc.int__content True False True True) } ));
  (#"machine.adb" 22 0 0# ());
  (#"machine.adb" 22 0 0# ());
  (#"machine.adb" 22 0 0# ());
  (#"machine.adb" 22 0 0# ());
  (#"machine.adb" 24 0 0# ());
  (#"machine.adb" 24 0 0# ());
  (#"machine.adb" 24 0 0# ());
  (#"machine.adb" 37 0 0# ());
  (#"machine.adb" 37 0 0# ());
  (#"machine.adb" 37 0 0# ());
  (#"machine.adb" 52 0 0# ());
  (#"machine.adb" 52 0 0# ());
  (#"machine.adb" 52 0 0# ());
  (#"machine.adb" 66 0 0# ());
  (#"machine.adb" 66 0 0# ());
  (#"machine.adb" 66 0 0# ());
  (#"machine.adb" 83 0 0# ());
  (#"machine.adb" 83 0 0# ());
  (#"machine.adb" 83 0 0# ());
  (#"machine.adb" 96 0 0# ());
  (#"machine.adb" 96 0 0# ());
  (#"machine.adb" 96 0 0# ());
  (#"machine.adb" 113 0 0# ());
  (#"machine.adb" 113 0 0# ());
  (#"machine.adb" 113 0 0# ());
  (#"machine.adb" 130 0 0# ());
  (#"machine.adb" 140 0 0# ());
  (#"machine.adb" 204 0 0# ());
  (#"machine.adb" 204 0 0# ());
  (#"machine.adb" 204 0 0# ());
  (#"machine.adb" 210 0 0# ());
  (#"machine.adb" 210 0 0# ());
  (#"machine.adb" 210 0 0# ());
  (#"machine.adb" 216 0 0# ());
  (#"machine.adb" 216 0 0# ());
  (#"machine.adb" 216 0 0# ());
  (#"machine.adb" 223 0 0# ());
  (#"machine.adb" 223 0 0# ());
  (#"machine.adb" 223 0 0# ());
  (#"machine.adb" 229 0 0# ());
  (#"machine.adb" 229 0 0# ());
  (#"machine.adb" 229 0 0# ());
  (#"machine.adb" 235 0 0# ());
  (#"machine.adb" 235 0 0# ());
  (#"machine.adb" 235 0 0# ());
  (#"machine.adb" 241 0 0# ());
  (#"machine.adb" 241 0 0# ());
  (#"machine.adb" 241 0 0# ());
  (#"machine.adb" 247 0 0# ());
  (#"machine.adb" 247 0 0# ());
  (#"machine.adb" 247 0 0# ());
  (#"machine.adb" 253 0 0# ());
  (#"machine.adb" 253 0 0# ());
  (#"machine.adb" 253 0 0# ());
  (#"machine.adb" 265 0 0# ());
  (#"machine.adb" 265 0 0# ());
  (#"machine.adb" 265 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 270 0 0# ());
  (#"machine.adb" 276 0 0# ());
  (#"machine.adb" 276 0 0# ());
  (#"machine.adb" 276 0 0# ());
  (#"machine.adb" 287 0 0# ());
  (#"machine.adb" 287 0 0# ());
  (#"machine.adb" 287 0 0# ());
  (#"machine.adb" 298 0 0# ());
  (#"machine.adb" 298 0 0# ());
  (#"machine.adb" 298 0 0# ());
  (#"machine.adb" 309 0 0# ());
  (#"machine.adb" 309 0 0# ());
  (#"machine.adb" 309 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 320 0 0# ());
  (#"machine.adb" 331 0 0# ());
  (#"machine.adb" 331 0 0# ());
  (#"machine.adb" 331 0 0# ());
  (#"machine.adb" 342 0 0# ());
  (#"machine.adb" 342 0 0# ());
  (#"machine.adb" 342 0 0# ());
  (#"machine.adb" 353 0 0# ());
  (#"machine.adb" 353 0 0# ());
  (#"machine.adb" 353 0 0# ());
  (#"machine.adb" 363 0 0# ());
  (#"machine.adb" 363 0 0# ());
  (#"machine.adb" 363 0 0# ());
  (#"machine.adb" 380 0 0# ());
  (#"machine.adb" 380 0 0# ());
  (#"machine.adb" 380 0 0# ());
  (#"machine.adb" 387 0 0# ());
  (#"machine.adb" 387 0 0# ());
  (#"machine.adb" 387 0 0# ());
  (#"machine.adb" 434 0 0# ());
  ( "GP_Sloc:machine.adb:442:1" (#"machine.adb" 442 0 0# ()) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "executeprogram" defined at machine.ads:35, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Machine__executeprogram__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Int_Division
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__integer___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Machine__domov___axiom
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg___axiom
 use        Instruction__reg__rep
 use        Instruction__addr
 use        Instruction__addr___axiom
 use        Instruction__offset
 use        Instruction__offset___axiom
 use        Instruction__offset__rep
 use        Instruction__instr
 use        Instruction__instr___axiom
 use        Machine__returncode___axiom
 use        Machine__programcounter
 use        Machine__programcounter___axiom
 use        Array__Int__Instruction__instr
 use        Machine__program___axiom
 use        Machine__executeprogram__prog
 use        Machine__executeprogram__cycles
 use        Machine__executeprogram__ret
 use        Machine__executeprogram__result
 use        Machine__regs
 use        Machine__memory
 use        Machine__pc
 use        Machine__TdatavalB
 use        Machine__dataval
 use        Machine__dataval__rep
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Machine__executeprogram__cyclecount
 use        Machine__executeprogram__inst
 use        Machine__executeprogram__L_1
 use        Machine__executeprogram__L_1__C15b
 use        Machine__executeprogram__L_1__C16b
 use        Machine__executeprogram__L_1__C17b
 use        Machine__executeprogram__L_1__C22b
 use        Machine__executeprogram__L_1__C23b
 use        Machine__executeprogram__L_1__C24b
 use        Machine__executeprogram__L_1__C29b
 use        Machine__executeprogram__L_1__C30b
 use        Machine__executeprogram__L_1__C31b
 use        Machine__executeprogram__L_1__C36b
 use        Machine__executeprogram__L_1__C37b
 use        Machine__executeprogram__L_1__C38b
 use        Machine__executeprogram__L_1__C43b
 use        Machine__executeprogram__L_1__C44b
 use        Machine__executeprogram__L_1__C45b
 use        Machine__executeprogram__L_1__B47b__a
 use        Machine__executeprogram__L_1__C50b
 use        Machine__executeprogram__L_1__C51b
 use        Machine__executeprogram__L_1__C52b
 use        Machine__executeprogram__L_1__B54b__a
 use        Machine__executeprogram__L_1__C61b
 use        Machine__executeprogram__L_1__C64b
 use        Standard__integer___axiom
 use        Standard__integer___axiom
 use        Machine__dataval___axiom
 use        Machine__regs___axiom
 use        Machine__memory___axiom
 use        Machine__pc___axiom
 use        Machine__domov___axiom
 use        Machine__executeprogram__cyclecount___axiom
 use        Machine__executeprogram__inst___axiom
 use        Machine__executeprogram__L_1___axiom
 use        Machine__returncode___axiom
 use        Machine__programcounter___axiom
 use        Machine__program___axiom
 use        Machine__executeprogram__prog___axiom
 use        Machine__executeprogram__cycles___axiom
 use        Machine__executeprogram__ret___axiom
 use        Machine__executeprogram__result___axiom
 use        Instruction__opcode___axiom
 use        Instruction__reg___axiom
 use        Instruction__addr___axiom
 use        Instruction__offset___axiom
 use        Instruction__instr___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Machine__TdatavalB___axiom
 use        Machine__executeprogram__L_1__C15b___axiom
 use        Machine__executeprogram__L_1__C16b___axiom
 use        Machine__executeprogram__L_1__C17b___axiom
 use        Machine__executeprogram__L_1__C22b___axiom
 use        Machine__executeprogram__L_1__C23b___axiom
 use        Machine__executeprogram__L_1__C24b___axiom
 use        Machine__executeprogram__L_1__C29b___axiom
 use        Machine__executeprogram__L_1__C30b___axiom
 use        Machine__executeprogram__L_1__C31b___axiom
 use        Machine__executeprogram__L_1__C36b___axiom
 use        Machine__executeprogram__L_1__C37b___axiom
 use        Machine__executeprogram__L_1__C38b___axiom
 use        Machine__executeprogram__L_1__B47b__a___axiom
 use        Machine__executeprogram__L_1__C43b___axiom
 use        Machine__executeprogram__L_1__C44b___axiom
 use        Machine__executeprogram__L_1__C45b___axiom
 use        Machine__executeprogram__L_1__B54b__a___axiom
 use        Machine__executeprogram__L_1__C50b___axiom
 use        Machine__executeprogram__L_1__C51b___axiom
 use        Machine__executeprogram__L_1__C52b___axiom
 use        Machine__executeprogram__L_1__C61b___axiom
 use        Machine__executeprogram__L_1__C64b___axiom

 let def #"machine.ads" 35 0 0#"W:diverges:N" "GP_Subp:machine.ads:35" 
   (__void_param : unit)
  requires { #"machine.ads" 35 0 0# true }
  ensures { #"machine.ads" 35 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__pc.pc.int__content False False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Machine__program___axiom.dynamic_invariant Machine__executeprogram__prog.prog True False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cycles.cycles True False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Machine__returncode___axiom.dynamic_invariant Machine__executeprogram__ret.ret.int__content False False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__result.result__.int__content False False True True) };
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# true };
  () (* Declarations introduced by the compiler at the beginning of the subprogram machine.ads:35 *)
  ;
  () (* Check for RTE in the Pre of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram machine.ads:35 *)
  ;
  #"machine.ads" 35 0 0# assume { #"machine.ads" 35 0 0# true };
  #"machine.ads" 35 0 0# try
   ( (#"machine.adb" 145 0 0# ( #"machine.adb" 145 0 0# Machine__executeprogram__cyclecount.cyclecount.int__content <- ( 0 );
   #"machine.adb" 145 0 0# assume { #"machine.adb" 145 0 0# (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cyclecount.cyclecount.int__content True False True True) } ));
   (#"machine.adb" 146 0 0# ( #"machine.adb" 146 0 0# abstract ensures {true}(let _ = #"machine.adb" 146 0 0# abstract ensures {true}(let _ = (let temp___916 = 0 in (
    ()))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 146 0 0# assume { #"machine.adb" 146 0 0# (Instruction__instr___axiom.default_initial_assumption { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False) };
   #"machine.adb" 146 0 0# assume { #"machine.adb" 146 0 0# (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False False True True) } ));
   (#"machine.adb" 151 0 0# ());
   ( "GP_Sloc:machine.adb:148:11" (#"machine.adb" 148 0 0# #"machine.adb" 148 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) );
   ( "GP_Sloc:machine.adb:149:7" (#"machine.adb" 149 0 0# ()) );
   ( "GP_Sloc:machine.adb:149:10" (#"machine.adb" 149 0 0# #"machine.adb" 149 0 0# Machine__pc.pc.int__content <- ( 1 )) );
   ( "GP_Sloc:machine.adb:150:14" (#"machine.adb" 150 0 0# #"machine.adb" 150 0 0# Machine__executeprogram__result.result__.int__content <- ( 0 )) );
   ( "GP_Sloc:machine.adb:151:53" (#"machine.adb" 151 0 0# ( () (* Translation of an Ada loop from machine.adb:151 *)
   ;
   (if ((Boolean.andb((Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles)) ((Machine__executeprogram__ret.ret.int__content = 0)))) then (
    #"machine.adb" 151 0 0# try
     ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__memory.memory.Array__Int__Machine__dataval.map__content in (
      ()))
      end ;
     (let temp___929 = #"machine.adb" 151 0 0# (any Array__Int__Machine__dataval.map
     ensures {#"machine.adb" 151 0 0# (result = Machine__memory.memory.Array__Int__Machine__dataval.map__content)} 
     ) in (
      ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } in (
       ()))
       end ;
      (let temp___927 = #"machine.adb" 151 0 0# (any Instruction__instr.instr
      ensures {#"machine.adb" 151 0 0# (result = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })} 
      ) in (
       ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__executeprogram__cyclecount.cyclecount.int__content in (
        ()))
        end ;
       (let temp___926 = #"machine.adb" 151 0 0# (any int
       ensures {#"machine.adb" 151 0 0# (result = Machine__executeprogram__cyclecount.cyclecount.int__content)} 
       ) in (
        ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__regs.regs.Array__Int__Machine__dataval.map__content in (
         ()))
         end ;
        (let temp___925 = #"machine.adb" 151 0 0# (any Array__Int__Machine__dataval.map
        ensures {#"machine.adb" 151 0 0# (result = Machine__regs.regs.Array__Int__Machine__dataval.map__content)} 
        ) in (
         ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__executeprogram__result.result__.int__content in (
          ()))
          end ;
         (let temp___923 = #"machine.adb" 151 0 0# (any int
         ensures {#"machine.adb" 151 0 0# (result = Machine__executeprogram__result.result__.int__content)} 
         ) in (
          ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__executeprogram__ret.ret.int__content in (
           ()))
           end ;
          (let temp___922 = #"machine.adb" 151 0 0# (any int
          ensures {#"machine.adb" 151 0 0# (result = Machine__executeprogram__ret.ret.int__content)} 
          ) in (
           ( #"machine.adb" 151 0 0# abstract ensures {true}(let _ = Machine__pc.pc.int__content in (
            ()))
            end ;
           (let temp___921 = #"machine.adb" 151 0 0# (any int
           ensures {#"machine.adb" 151 0 0# (result = Machine__pc.pc.int__content)} 
           ) in (
            ( () (* First unroling of the loop statements appearing before the loop invariant of loop machine.adb:151 *)
            ;
            () (* While loop translating the Ada loop from machine.adb:151 *)
            ;
            #"machine.adb" 151 0 0# while True do
             ( () (* Assume implicit invariants from the loop machine.adb:151 *)
             ;
             #"machine.adb" 151 0 0# assume { #"machine.adb" 151 0 0# (Boolean.andb(( ( ( ( ( ( ( ( ( ( ( ( ( ( true /\ (Machine__programcounter___axiom.dynamic_invariant Machine__pc.pc.int__content False True True True) ) /\ true ) /\ (Machine__returncode___axiom.dynamic_invariant Machine__executeprogram__ret.ret.int__content False True True True) ) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__result.result__.int__content False True True True) ) /\ true ) /\ true ) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant Machine__executeprogram__cyclecount.cyclecount.int__content False True True True) ) /\ true ) /\ (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } False True True True) ) /\ true ) /\ true ) /\ true )) (( (Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles) /\ (Machine__executeprogram__ret.ret.int__content = 0) ))) };
             () (* Check for absence of RTE in the invariant of loop machine.adb:151 *)
             ;
             () (* Loop statements appearing after the loop invariant of loop machine.adb:151 *)
             ;
             ( "GP_Sloc:machine.adb:152:10" (#"machine.adb" 152 0 0# ()) );
             ( "GP_Sloc:machine.adb:152:23" (#"machine.adb" 152 0 0# ()) );
             ( "GP_Sloc:machine.adb:152:15" (#"machine.adb" 152 0 0# (let temp___920 = { ( (let temp___918 = (Array__Int__Instruction__instr.get(Machine__executeprogram__prog.prog) (Machine__pc.pc.int__content)) in (
             (let temp___919 = { Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained } in (
              ( #"machine.adb" 152 0 0# assert { #"machine.adb" 152 0 0# (#"machine.adb" 152 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:152:15" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Id:0" "comment:         Inst := Prog(PC);
              ^ machine.adb:152:15:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__inst_assign" (if ((Instruction__instr.attr__constrained temp___919)) then (
               ((Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___918)) = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___919)))) else true) )) };
              temp___918 )))
             ))
              ) with Instruction__instr.attr__constrained = (Instruction__instr.attr__constrained({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) } in (
              (  Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content <- ( (Instruction__instr.__split_fields(temp___920)) );
               Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content <- ( (Instruction__instr.__split_discrs(temp___920)) ) )))
             ) );
             ( "GP_Sloc:machine.adb:155:10" (#"machine.adb" 155 0 0# ()) );
             ( "GP_Sloc:machine.adb:155:10" (#"machine.adb" 155 0 0# ( (Debug__put__2___axiom.put__2(Machine__pc.pc.int__content)) )) );
             ( "GP_Sloc:machine.adb:155:28" (#"machine.adb" 155 0 0# ()) );
             ( "GP_Sloc:machine.adb:155:28" (#"machine.adb" 155 0 0# ( (Debug__put__3___axiom.put__3(58)) )) );
             ( "GP_Sloc:machine.adb:155:38" (#"machine.adb" 155 0 0# ()) );
             ( "GP_Sloc:machine.adb:155:38" (#"machine.adb" 155 0 0# ( (Debug__put__3___axiom.put__3(9)) )) );
             ( "GP_Sloc:machine.adb:156:26" (#"machine.adb" 156 0 0# ()) );
             ( "GP_Sloc:machine.adb:156:10" (#"machine.adb" 156 0 0# ()) );
             ( "GP_Sloc:machine.adb:156:10" (#"machine.adb" 156 0 0# ( (Instruction__debugprintinstr___axiom.debugprintinstr({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )) );
             ( "GP_Sloc:machine.adb:157:10" (#"machine.adb" 157 0 0# ()) );
             ( "GP_Sloc:machine.adb:157:10" (#"machine.adb" 157 0 0# ( (Debug__new_line___axiom.new_line(())) )) );
             ( "GP_Sloc:machine.adb:159:15" (#"machine.adb" 159 0 0# ()) );
             ( "GP_Sloc:machine.adb:159:10" (#"machine.adb" 159 0 0# (if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 1)) then (
              ( ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# ()) );
              ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# (#"machine.adb" 161 0 0# ( (let machine__executeprogram__L_1__C15b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 161 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:161:16" "GP_Id:1" "comment:               DoAdd(Inst.AddRd,Inst.AddRs1,Inst.AddRs2,Ret);
               ^ machine.adb:161:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C15b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C15b__assume = Machine__executeprogram__L_1__C15b.c15b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C15b.c15b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# (#"machine.adb" 161 0 0# ( (let machine__executeprogram__L_1__C16b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 161 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:161:16" "comment:               DoAdd(Inst.AddRd,Inst.AddRs1,Inst.AddRs2,Ret);
               ^ machine.adb:161:16:VC_DISCRIMINANT_CHECK" "GP_Id:2" "GP_Shape:L_1_while__case__C16b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C16b__assume = Machine__executeprogram__L_1__C16b.c16b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C16b.c16b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# (#"machine.adb" 161 0 0# ( (let machine__executeprogram__L_1__C17b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 161 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:161:16" "comment:               DoAdd(Inst.AddRd,Inst.AddRs1,Inst.AddRs2,Ret);
               ^ machine.adb:161:16:VC_DISCRIMINANT_CHECK" "GP_Id:3" "GP_Shape:L_1_while__case__C17b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C17b__assume = Machine__executeprogram__L_1__C17b.c17b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C17b.c17b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# ()) );
              ( "GP_Sloc:machine.adb:161:16" (#"machine.adb" 161 0 0# ()) );
              ( "GP_Sloc:machine.adb:42:7:inlined:machine.adb:161:16" (#"machine.adb" 42 0 0# (if (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C17b.c17b)))) > 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C16b.c16b)))) > (#"machine.adb" 42 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__sub" "GP_Sloc:machine.adb:42:59:inlined:machine.adb:161:16" "GP_Id:6" "comment:      if (Regs(Rs2) > 0 and then Regs(Rs1) > DataVal'Last - Regs(Rs2)) then
                                                          ^ machine.adb:42:59:inlined:machine.adb:161:16:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((2147483647 - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C17b.c17b))))))) ))) )) then (
               ( "GP_Sloc:machine.adb:43:14:inlined:machine.adb:161:16" (#"machine.adb" 43 0 0# #"machine.adb" 43 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( "GP_Sloc:machine.adb:44:7:inlined:machine.adb:161:16" (if (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C17b.c17b)))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C16b.c16b)))) < (#"machine.adb" 44 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:44:63:inlined:machine.adb:161:16" "GP_Id:5" "comment:      elsif (Regs(Rs2) < 0 and then Regs(Rs1) < DataVal'First - Regs(Rs2)) then
                                                              ^ machine.adb:44:63:inlined:machine.adb:161:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__sub" (Machine__TdatavalB.range_check_((( -2147483648 ) - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C17b.c17b))))))) ))) )) then (
                ( "GP_Sloc:machine.adb:45:14:inlined:machine.adb:161:16" (#"machine.adb" 45 0 0# #"machine.adb" 45 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
                ( ( "GP_Sloc:machine.adb:47:19:inlined:machine.adb:161:16" (#"machine.adb" 47 0 0# #"machine.adb" 47 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C15b.c15b) ((Machine__dataval__rep.of_rep((#"machine.adb" 47 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:47:32:inlined:machine.adb:161:16" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:4" "comment:         Regs(Rd) := Regs(Rs1) + Regs(Rs2);
                               ^ machine.adb:47:32:inlined:machine.adb:161:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C16b.c16b)))) + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C17b.c17b))))))) )))))) )) );
                ( "GP_Sloc:machine.adb:48:14:inlined:machine.adb:161:16" (#"machine.adb" 48 0 0# #"machine.adb" 48 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) ))) )))) );
              ( "GP_Sloc:machine.adb:162:16" (#"machine.adb" 162 0 0# ()) );
              ( "GP_Sloc:machine.adb:162:16" (#"machine.adb" 162 0 0# ()) );
              ( "GP_Sloc:machine.adb:162:16" (#"machine.adb" 162 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:162:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:162:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:162:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:162:16" "GP_Reason:VC_RANGE_CHECK" "GP_Id:7" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:162:16:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:162:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:162:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) )) else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 2)) then (
              ( ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# ()) );
              ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# (#"machine.adb" 164 0 0# ( (let machine__executeprogram__L_1__C22b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 164 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:164:16" "GP_Id:8" "comment:               DoSub(Inst.SubRd,Inst.SubRs1,Inst.SubRs2,Ret);
               ^ machine.adb:164:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C22b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C22b__assume = Machine__executeprogram__L_1__C22b.c22b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C22b.c22b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# (#"machine.adb" 164 0 0# ( (let machine__executeprogram__L_1__C23b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 164 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:164:16" "comment:               DoSub(Inst.SubRd,Inst.SubRs1,Inst.SubRs2,Ret);
               ^ machine.adb:164:16:VC_DISCRIMINANT_CHECK" "GP_Id:9" "GP_Shape:L_1_while__case__C23b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C23b__assume = Machine__executeprogram__L_1__C23b.c23b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C23b.c23b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# (#"machine.adb" 164 0 0# ( (let machine__executeprogram__L_1__C24b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 164 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:164:16" "comment:               DoSub(Inst.SubRd,Inst.SubRs1,Inst.SubRs2,Ret);
               ^ machine.adb:164:16:VC_DISCRIMINANT_CHECK" "GP_Id:10" "GP_Shape:L_1_while__case__C24b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C24b__assume = Machine__executeprogram__L_1__C24b.c24b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C24b.c24b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# ()) );
              ( "GP_Sloc:machine.adb:164:16" (#"machine.adb" 164 0 0# ()) );
              ( "GP_Sloc:machine.adb:57:7:inlined:machine.adb:164:16" (#"machine.adb" 57 0 0# (if ((Boolean.orb(( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C24b.c24b)))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) > (#"machine.adb" 57 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:57:59:inlined:machine.adb:164:16" "GP_Id:12" "comment:      if (Regs(Rs2) < 0 and then Regs(Rs1) > DataVal'Last + Regs(Rs2)) or
                                                          ^ machine.adb:57:59:inlined:machine.adb:164:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__add" (Machine__TdatavalB.range_check_((2147483647 + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) ))) )) (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C24b.c24b)))) > 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) < (#"machine.adb" 58 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__or__andthen__cmp__add" "GP_Sloc:machine.adb:58:61:inlined:machine.adb:164:16" "GP_Id:13" "comment:          (Regs(Rs2) > 0 and then Regs(Rs1) < DataVal'First + Regs(Rs2)) then
                                                            ^ machine.adb:58:61:inlined:machine.adb:164:16:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((( -2147483648 ) + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) ))) )))) then (
               ( "GP_Sloc:machine.adb:59:14:inlined:machine.adb:164:16" (#"machine.adb" 59 0 0# #"machine.adb" 59 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:61:19:inlined:machine.adb:164:16" (#"machine.adb" 61 0 0# #"machine.adb" 61 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C22b.c22b) ((Machine__dataval__rep.of_rep((#"machine.adb" 61 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:61:32:inlined:machine.adb:164:16" "GP_Id:11" "comment:         Regs(Rd) := Regs(Rs1) - Regs(Rs2);
                               ^ machine.adb:61:32:inlined:machine.adb:164:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__sub" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C23b.c23b)))) - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C24b.c24b))))))) )))))) )) );
               ( "GP_Sloc:machine.adb:62:14:inlined:machine.adb:164:16" (#"machine.adb" 62 0 0# #"machine.adb" 62 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:165:16" (#"machine.adb" 165 0 0# ()) );
              ( "GP_Sloc:machine.adb:165:16" (#"machine.adb" 165 0 0# ()) );
              ( "GP_Sloc:machine.adb:165:16" (#"machine.adb" 165 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:165:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:165:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:165:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:165:16" "GP_Id:14" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:165:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:165:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:165:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 3)) then (
              ( ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# ()) );
              ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# (#"machine.adb" 167 0 0# ( (let machine__executeprogram__L_1__C29b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 167 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:167:16" "GP_Id:15" "comment:               DoMul(Inst.MulRd,Inst.MulRs1,Inst.MulRs2,Ret);
               ^ machine.adb:167:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C29b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C29b__assume = Machine__executeprogram__L_1__C29b.c29b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C29b.c29b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# (#"machine.adb" 167 0 0# ( (let machine__executeprogram__L_1__C30b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 167 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:167:16" "comment:               DoMul(Inst.MulRd,Inst.MulRs1,Inst.MulRs2,Ret);
               ^ machine.adb:167:16:VC_DISCRIMINANT_CHECK" "GP_Id:16" "GP_Shape:L_1_while__case__C30b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C30b__assume = Machine__executeprogram__L_1__C30b.c30b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C30b.c30b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# (#"machine.adb" 167 0 0# ( (let machine__executeprogram__L_1__C31b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 167 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:167:16" "comment:               DoMul(Inst.MulRd,Inst.MulRs1,Inst.MulRs2,Ret);
               ^ machine.adb:167:16:VC_DISCRIMINANT_CHECK" "GP_Id:17" "GP_Shape:L_1_while__case__C31b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C31b__assume = Machine__executeprogram__L_1__C31b.c31b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C31b.c31b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# ()) );
              ( "GP_Sloc:machine.adb:167:16" (#"machine.adb" 167 0 0# ()) );
              ( "GP_Sloc:machine.adb:71:7:inlined:machine.adb:167:16" (#"machine.adb" 71 0 0# (if (( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))) < 0) ) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) < (#"machine.adb" 71 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__div" "GP_Sloc:machine.adb:71:82:inlined:machine.adb:167:16" "GP_Id:22" "comment:      if (Regs(Rs1) < 0 and then Regs(Rs2) < 0 and then Regs(Rs1) < DataVal'Last / Regs(Rs2)) then
                                                                                 ^ machine.adb:71:82:inlined:machine.adb:167:16:VC_DIVISION_CHECK" (Int_Division.div_(2147483647) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))))) ))) )) then (
               ( "GP_Sloc:machine.adb:72:14:inlined:machine.adb:167:16" (#"machine.adb" 72 0 0# #"machine.adb" 72 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( "GP_Sloc:machine.adb:73:7:inlined:machine.adb:167:16" (if (( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))) > 0) ) && ((#"machine.adb" 73 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__div" "GP_Sloc:machine.adb:73:74:inlined:machine.adb:167:16" "GP_Id:21" "comment:      elsif (Regs(Rs1) < 0 and then Regs(Rs2) > 0 and then DataVal'First / Regs(Rs2) > Regs(Rs1)) then
                                                                         ^ machine.adb:73:74:inlined:machine.adb:167:16:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((#"machine.adb" 73 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__div" "GP_Sloc:machine.adb:73:74:inlined:machine.adb:167:16" "GP_Id:20" "comment:      elsif (Regs(Rs1) < 0 and then Regs(Rs2) > 0 and then DataVal'First / Regs(Rs2) > Regs(Rs1)) then
                                                                         ^ machine.adb:73:74:inlined:machine.adb:167:16:VC_DIVISION_CHECK" (Int_Division.div_(( -2147483648 )) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))))) )))) )) > (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b))))) )) then (
                ( "GP_Sloc:machine.adb:74:14:inlined:machine.adb:167:16" (#"machine.adb" 74 0 0# #"machine.adb" 74 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
                ( "GP_Sloc:machine.adb:75:7:inlined:machine.adb:167:16" (if (( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))) <> 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) > 0) ) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) > (#"machine.adb" 75 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:75:86:inlined:machine.adb:167:16" "GP_Reason:VC_DIVISION_CHECK" "GP_Id:19" "comment:      elsif (Regs(Rs2) /= 0 and then Regs(Rs1) > 0 and then Regs(Rs1) > DataVal'Last / Regs(Rs2)) then
                                                                                     ^ machine.adb:75:86:inlined:machine.adb:167:16:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b)))))) ))) )) then (
                 ( "GP_Sloc:machine.adb:76:14:inlined:machine.adb:167:16" (#"machine.adb" 76 0 0# #"machine.adb" 76 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
                 ( ( "GP_Sloc:machine.adb:78:18:inlined:machine.adb:167:16" (#"machine.adb" 78 0 0# #"machine.adb" 78 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C29b.c29b) ((Machine__dataval__rep.of_rep((#"machine.adb" 78 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:78:31:inlined:machine.adb:167:16" "GP_Id:18" "comment:        Regs(Rd) := Regs(Rs1) * Regs(Rs2);
                              ^ machine.adb:78:31:inlined:machine.adb:167:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__mult" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C30b.c30b)))) * (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C31b.c31b))))))) )))))) )) );
                 ( "GP_Sloc:machine.adb:79:13:inlined:machine.adb:167:16" (#"machine.adb" 79 0 0# #"machine.adb" 79 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) ))) ))) )))) );
              ( "GP_Sloc:machine.adb:168:16" (#"machine.adb" 168 0 0# ()) );
              ( "GP_Sloc:machine.adb:168:16" (#"machine.adb" 168 0 0# ()) );
              ( "GP_Sloc:machine.adb:168:16" (#"machine.adb" 168 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:168:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:168:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:168:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:168:16" "GP_Id:23" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:168:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:168:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:168:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 4)) then (
              ( ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# ()) );
              ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# (#"machine.adb" 170 0 0# ( (let machine__executeprogram__L_1__C36b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 170 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:170:16" "GP_Id:24" "comment:               DoDiv(Inst.DivRd,Inst.DivRs1,Inst.DivRs2,Ret);
               ^ machine.adb:170:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C36b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C36b__assume = Machine__executeprogram__L_1__C36b.c36b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C36b.c36b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# (#"machine.adb" 170 0 0# ( (let machine__executeprogram__L_1__C37b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 170 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:170:16" "comment:               DoDiv(Inst.DivRd,Inst.DivRs1,Inst.DivRs2,Ret);
               ^ machine.adb:170:16:VC_DISCRIMINANT_CHECK" "GP_Id:25" "GP_Shape:L_1_while__case__C37b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C37b__assume = Machine__executeprogram__L_1__C37b.c37b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C37b.c37b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# (#"machine.adb" 170 0 0# ( (let machine__executeprogram__L_1__C38b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 170 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:170:16" "comment:               DoDiv(Inst.DivRd,Inst.DivRs1,Inst.DivRs2,Ret);
               ^ machine.adb:170:16:VC_DISCRIMINANT_CHECK" "GP_Id:26" "GP_Shape:L_1_while__case__C38b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C38b__assume = Machine__executeprogram__L_1__C38b.c38b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C38b.c38b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# ()) );
              ( "GP_Sloc:machine.adb:170:16" (#"machine.adb" 170 0 0# ()) );
              ( "GP_Sloc:machine.adb:88:7:inlined:machine.adb:170:16" (#"machine.adb" 88 0 0# (if ((Boolean.orb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C38b.c38b)))) = 0)) ((Boolean.andb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C37b.c37b)))) = ( -2147483648 ))) (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C38b.c38b)))) = ( -1 ))))))) then (
               ( "GP_Sloc:machine.adb:89:14:inlined:machine.adb:170:16" (#"machine.adb" 89 0 0# #"machine.adb" 89 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( ( "GP_Sloc:machine.adb:91:19:inlined:machine.adb:170:16" (#"machine.adb" 91 0 0# #"machine.adb" 91 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C36b.c36b) ((Machine__dataval__rep.of_rep((#"machine.adb" 91 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:91:32:inlined:machine.adb:170:16" "GP_Shape:L_1_while__case__if__regs_assign__div" "GP_Id:28" "comment:         Regs(Rd) := Regs(Rs1) / Regs(Rs2);
                               ^ machine.adb:91:32:inlined:machine.adb:170:16:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((#"machine.adb" 91 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:91:32:inlined:machine.adb:170:16" "GP_Id:27" "comment:         Regs(Rd) := Regs(Rs1) / Regs(Rs2);
                               ^ machine.adb:91:32:inlined:machine.adb:170:16:VC_DIVISION_CHECK" "GP_Shape:L_1_while__case__if__regs_assign__div" (Int_Division.div_((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C37b.c37b))))) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C38b.c38b)))))) )))) )))))) )) );
               ( "GP_Sloc:machine.adb:92:14:inlined:machine.adb:170:16" (#"machine.adb" 92 0 0# #"machine.adb" 92 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )))) );
              ( "GP_Sloc:machine.adb:171:16" (#"machine.adb" 171 0 0# ()) );
              ( "GP_Sloc:machine.adb:171:16" (#"machine.adb" 171 0 0# ()) );
              ( "GP_Sloc:machine.adb:171:16" (#"machine.adb" 171 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:171:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:171:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:171:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:171:16" "GP_Id:29" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:171:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:171:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:171:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 6)) then (
              ( ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# ()) );
              ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# (#"machine.adb" 173 0 0# ( (let machine__executeprogram__L_1__C43b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 173 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:173:16" "GP_Id:30" "comment:               DoLdr(Inst.LdrRd,Inst.LdrRs,Inst.LdrOffs,Ret);
               ^ machine.adb:173:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C43b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C43b__assume = Machine__executeprogram__L_1__C43b.c43b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C43b.c43b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# (#"machine.adb" 173 0 0# ( (let machine__executeprogram__L_1__C44b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 173 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:173:16" "comment:               DoLdr(Inst.LdrRd,Inst.LdrRs,Inst.LdrOffs,Ret);
               ^ machine.adb:173:16:VC_DISCRIMINANT_CHECK" "GP_Id:31" "GP_Shape:L_1_while__case__C44b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C44b__assume = Machine__executeprogram__L_1__C44b.c44b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C44b.c44b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# (#"machine.adb" 173 0 0# ( (let machine__executeprogram__L_1__C45b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 173 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:173:16" "comment:               DoLdr(Inst.LdrRd,Inst.LdrRs,Inst.LdrOffs,Ret);
               ^ machine.adb:173:16:VC_DISCRIMINANT_CHECK" "GP_Id:32" "GP_Shape:L_1_while__case__C45b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C45b__assume = Machine__executeprogram__L_1__C45b.c45b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C45b.c45b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# ()) );
              ( "GP_Sloc:machine.adb:173:16" (#"machine.adb" 173 0 0# ( (#"machine.adb" 100 0 0# ( #"machine.adb" 100 0 0# abstract ensures {true}(let _ = () in (
               ()))
               end ;
              #"machine.adb" 100 0 0# assume { #"machine.adb" 100 0 0# (Instruction__addr___axiom.default_initial_assumption Machine__executeprogram__L_1__B47b__a.a.int__content False) };
              #"machine.adb" 100 0 0# assume { #"machine.adb" 100 0 0# (Instruction__addr___axiom.dynamic_invariant Machine__executeprogram__L_1__B47b__a.a.int__content False False True True) } ));
              ( "GP_Sloc:machine.adb:102:7:inlined:machine.adb:173:16" (#"machine.adb" 102 0 0# (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C44b.c44b)))) > (65535 - Machine__executeprogram__L_1__C45b.c45b))) then (
               ( "GP_Sloc:machine.adb:103:14:inlined:machine.adb:173:16" (#"machine.adb" 103 0 0# #"machine.adb" 103 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( "GP_Sloc:machine.adb:104:7:inlined:machine.adb:173:16" (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C44b.c44b)))) < (0 - Machine__executeprogram__L_1__C45b.c45b))) then (
                ( "GP_Sloc:machine.adb:105:14:inlined:machine.adb:173:16" (#"machine.adb" 105 0 0# #"machine.adb" 105 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
                ( ( "GP_Sloc:machine.adb:107:12:inlined:machine.adb:173:16" (#"machine.adb" 107 0 0# #"machine.adb" 107 0 0# Machine__executeprogram__L_1__B47b__a.a.int__content <- ( (#"machine.adb" 107 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:107:29:inlined:machine.adb:173:16" "GP_Shape:L_1_while__case__B47b_declblk__if__a_assign__typeconv__add" "GP_Id:34" "comment:         A := Addr(Regs(Rs) + DataVal(Offs));
                            ^ machine.adb:107:29:inlined:machine.adb:173:16:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 107 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:107:29:inlined:machine.adb:173:16" "GP_Id:33" "comment:         A := Addr(Regs(Rs) + DataVal(Offs));
                            ^ machine.adb:107:29:inlined:machine.adb:173:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__B47b_declblk__if__a_assign__typeconv__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C44b.c44b)))) + Machine__executeprogram__L_1__C45b.c45b))) )))) )) )) );
                ( "GP_Sloc:machine.adb:108:19:inlined:machine.adb:173:16" (#"machine.adb" 108 0 0# #"machine.adb" 108 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C43b.c43b) ((Machine__dataval__rep.of_rep((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__memory.memory.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__B47b__a.a.int__content)))))))) )) );
                ( "GP_Sloc:machine.adb:109:14:inlined:machine.adb:173:16" (#"machine.adb" 109 0 0# #"machine.adb" 109 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) ))) )))) ) )) );
              ( "GP_Sloc:machine.adb:174:16" (#"machine.adb" 174 0 0# ()) );
              ( "GP_Sloc:machine.adb:174:16" (#"machine.adb" 174 0 0# ()) );
              ( "GP_Sloc:machine.adb:174:16" (#"machine.adb" 174 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:174:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:174:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:174:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:174:16" "GP_Id:35" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:174:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:174:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:174:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 7)) then (
              ( ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# ()) );
              ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# (#"machine.adb" 176 0 0# ( (let machine__executeprogram__L_1__C50b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 176 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:176:16" "GP_Id:36" "comment:               DoStr(Inst.StrRa,Inst.StrOffs,Inst.StrRb,Ret);
               ^ machine.adb:176:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C50b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__strra_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C50b__assume = Machine__executeprogram__L_1__C50b.c50b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C50b.c50b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# (#"machine.adb" 176 0 0# ( (let machine__executeprogram__L_1__C51b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 176 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:176:16" "comment:               DoStr(Inst.StrRa,Inst.StrOffs,Inst.StrRb,Ret);
               ^ machine.adb:176:16:VC_DISCRIMINANT_CHECK" "GP_Id:37" "GP_Shape:L_1_while__case__C51b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__stroffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C51b__assume = Machine__executeprogram__L_1__C51b.c51b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C51b.c51b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# (#"machine.adb" 176 0 0# ( (let machine__executeprogram__L_1__C52b__assume = (Instruction__reg__rep.to_rep((#"machine.adb" 176 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:176:16" "comment:               DoStr(Inst.StrRa,Inst.StrOffs,Inst.StrRb,Ret);
               ^ machine.adb:176:16:VC_DISCRIMINANT_CHECK" "GP_Id:38" "GP_Shape:L_1_while__case__C52b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__strrb_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C52b__assume = Machine__executeprogram__L_1__C52b.c52b) }))
              ;
               assume {  (Instruction__reg___axiom.dynamic_invariant Machine__executeprogram__L_1__C52b.c52b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# ()) );
              ( "GP_Sloc:machine.adb:176:16" (#"machine.adb" 176 0 0# ( (#"machine.adb" 117 0 0# ( #"machine.adb" 117 0 0# abstract ensures {true}(let _ = () in (
               ()))
               end ;
              #"machine.adb" 117 0 0# assume { #"machine.adb" 117 0 0# (Instruction__addr___axiom.default_initial_assumption Machine__executeprogram__L_1__B54b__a.a.int__content False) };
              #"machine.adb" 117 0 0# assume { #"machine.adb" 117 0 0# (Instruction__addr___axiom.dynamic_invariant Machine__executeprogram__L_1__B54b__a.a.int__content False False True True) } ));
              ( "GP_Sloc:machine.adb:119:7:inlined:machine.adb:176:16" (#"machine.adb" 119 0 0# (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) > (65535 - Machine__executeprogram__L_1__C51b.c51b))) then (
               ( "GP_Sloc:machine.adb:120:14:inlined:machine.adb:176:16" (#"machine.adb" 120 0 0# #"machine.adb" 120 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
               ( "GP_Sloc:machine.adb:121:7:inlined:machine.adb:176:16" (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) < (0 - Machine__executeprogram__L_1__C51b.c51b))) then (
                ( "GP_Sloc:machine.adb:122:14:inlined:machine.adb:176:16" (#"machine.adb" 122 0 0# #"machine.adb" 122 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )) else (
                ( ( "GP_Sloc:machine.adb:124:12:inlined:machine.adb:176:16" (#"machine.adb" 124 0 0# #"machine.adb" 124 0 0# Machine__executeprogram__L_1__B54b__a.a.int__content <- ( (#"machine.adb" 124 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:124:29:inlined:machine.adb:176:16" "GP_Shape:L_1_while__case__B54b_declblk__if__a_assign__typeconv__add" "GP_Id:40" "comment:         A := Addr(Regs(Ra) + DataVal(Offs));   
                            ^ machine.adb:124:29:inlined:machine.adb:176:16:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 124 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:124:29:inlined:machine.adb:176:16" "GP_Id:39" "comment:         A := Addr(Regs(Ra) + DataVal(Offs));   
                            ^ machine.adb:124:29:inlined:machine.adb:176:16:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__case__B54b_declblk__if__a_assign__typeconv__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C50b.c50b)))) + Machine__executeprogram__L_1__C51b.c51b))) )))) )) )) );
                ( "GP_Sloc:machine.adb:125:20:inlined:machine.adb:176:16" (#"machine.adb" 125 0 0# #"machine.adb" 125 0 0# Machine__memory.memory.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__memory.memory.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__B54b__a.a.int__content) ((Machine__dataval__rep.of_rep((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__executeprogram__L_1__C52b.c52b)))))))) )) );
                ( "GP_Sloc:machine.adb:126:14:inlined:machine.adb:176:16" (#"machine.adb" 126 0 0# #"machine.adb" 126 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) ))) )))) ) )) );
              ( "GP_Sloc:machine.adb:177:16" (#"machine.adb" 177 0 0# ()) );
              ( "GP_Sloc:machine.adb:177:16" (#"machine.adb" 177 0 0# ()) );
              ( "GP_Sloc:machine.adb:177:16" (#"machine.adb" 177 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:177:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:177:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:177:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:177:16" "GP_Id:41" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:177:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:177:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:177:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 8)) then (
              ( ( "GP_Sloc:machine.adb:179:16" (#"machine.adb" 179 0 0# ()) );
              ( "GP_Sloc:machine.adb:179:16" (#"machine.adb" 179 0 0# ( (#"machine.adb" 179 0 0# ( "model_vc" "keep_on_simp" "GP_Sloc:machine.adb:179:16" "GP_Reason:VC_PRECONDITION" "GP_Id:44" "comment:               DoMov(Inst.MovRd,Inst.MovOffs,Ret);
               ^ machine.adb:179:16:VC_PRECONDITION" "GP_Shape:L_1_while__case__call_domov" (Machine__domov___axiom.domov((Instruction__reg__rep.to_rep((#"machine.adb" 179 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:179:26" "GP_Id:42" "comment:               DoMov(Inst.MovRd,Inst.MovOffs,Ret);
                         ^ machine.adb:179:26:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__call_domov__selectcomp" (Instruction__instr.rec__instruction__instr__movrd_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) ))))) ((Instruction__offset__rep.to_rep((#"machine.adb" 179 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__call_domov__selectcomp" "GP_Sloc:machine.adb:179:37" "GP_Id:43" "comment:               DoMov(Inst.MovRd,Inst.MovOffs,Ret);
                                    ^ machine.adb:179:37:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__movoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) ))))) (Machine__executeprogram__ret.ret)) )) )) );
              ( "GP_Sloc:machine.adb:180:16" (#"machine.adb" 180 0 0# ()) );
              ( "GP_Sloc:machine.adb:180:16" (#"machine.adb" 180 0 0# ()) );
              ( "GP_Sloc:machine.adb:180:16" (#"machine.adb" 180 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:180:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:180:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:180:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:180:16" "GP_Id:45" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:180:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:180:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:180:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 5)) then (
              ( ( "GP_Sloc:machine.adb:182:34" (#"machine.adb" 182 0 0# ()) );
              ( "GP_Sloc:machine.adb:182:39" (#"machine.adb" 182 0 0# ()) );
              ( "GP_Sloc:machine.adb:182:23" (#"machine.adb" 182 0 0# #"machine.adb" 182 0 0# Machine__executeprogram__result.result__.int__content <- ( (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 182 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:182:43" "GP_Id:46" "comment:               Result := Integer(Regs(Inst.RetRs));
                                          ^ machine.adb:182:43:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__result_assign__typeconv__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__retrs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))))))) )) );
              ( "GP_Sloc:machine.adb:183:20" (#"machine.adb" 183 0 0# #"machine.adb" 183 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) );
              ( "GP_Sloc:machine.adb:184:16" (#"machine.adb" 184 0 0# #"machine.adb" 184 0 0# raise Return__exc) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 9)) then (
              ( ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# (#"machine.adb" 186 0 0# ( (let machine__executeprogram__L_1__C61b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 186 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:186:16" "GP_Id:47" "comment:               IncPC(Ret,Inst.JmpOffs);
               ^ machine.adb:186:16:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__C61b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                assume {  (machine__executeprogram__L_1__C61b__assume = Machine__executeprogram__L_1__C61b.c61b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C61b.c61b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:186:16" (#"machine.adb" 186 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:186:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:186:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= (65536 - Machine__executeprogram__L_1__C61b.c61b))) ((Machine__pc.pc.int__content >= (1 - Machine__executeprogram__L_1__C61b.c61b))))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:186:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:186:16" "GP_Id:48" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:186:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + Machine__executeprogram__L_1__C61b.c61b))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:186:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:186:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })))))) = 10)) then (
              ( ( "GP_Sloc:machine.adb:188:19" (#"machine.adb" 188 0 0# ()) );
              ( "GP_Sloc:machine.adb:188:24" (#"machine.adb" 188 0 0# ()) );
              ( "GP_Sloc:machine.adb:188:16" (#"machine.adb" 188 0 0# (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 188 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:188:28" "GP_Id:52" "comment:               if Regs(Inst.JzRa) = 0 then
                           ^ machine.adb:188:28:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__if__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__jzra_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))))))) = 0)) then (
               ( ( "GP_Sloc:machine.adb:189:19" (#"machine.adb" 189 0 0# ()) );
               ( "GP_Sloc:machine.adb:189:19" (#"machine.adb" 189 0 0# ()) );
               ( "GP_Sloc:machine.adb:189:19" (#"machine.adb" 189 0 0# (#"machine.adb" 189 0 0# ( (let machine__executeprogram__L_1__C64b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 189 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:189:19" "GP_Id:50" "comment:                  IncPC(Ret,Inst.JzOffs);
                  ^ machine.adb:189:19:VC_DISCRIMINANT_CHECK" "GP_Shape:L_1_while__case__if__C64b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_({ Instruction__instr.__split_fields = Machine__executeprogram__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__executeprogram__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__executeprogram__inst.inst__attr__constrained })) )))) in (
                 assume {  (machine__executeprogram__L_1__C64b__assume = Machine__executeprogram__L_1__C64b.c64b) }))
               ;
                assume {  (Instruction__offset___axiom.dynamic_invariant Machine__executeprogram__L_1__C64b.c64b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:189:19" (#"machine.adb" 189 0 0# ()) );
               ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:189:19" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
                ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:189:19" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= (65536 - Machine__executeprogram__L_1__C64b.c64b))) ((Machine__pc.pc.int__content >= (1 - Machine__executeprogram__L_1__C64b.c64b))))) then (
                 ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:189:19" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:189:19" "GP_Id:51" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:189:19:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + Machine__executeprogram__L_1__C64b.c64b))) )) )) );
                 ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:189:19" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                 ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:189:19" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
                ()))) ) )) else (
               ( ( "GP_Sloc:machine.adb:191:19" (#"machine.adb" 191 0 0# ()) );
               ( "GP_Sloc:machine.adb:191:19" (#"machine.adb" 191 0 0# ()) );
               ( "GP_Sloc:machine.adb:191:19" (#"machine.adb" 191 0 0# ()) );
               ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:191:19" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
                ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:191:19" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                 ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:191:19" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:191:19" "GP_Id:49" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:191:19:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                 ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:191:19" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                 ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:191:19" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
                ()))) ) )))) ) )) else (
              ( ( "GP_Sloc:machine.adb:194:16" (#"machine.adb" 194 0 0# ()) );
              ( "GP_Sloc:machine.adb:194:16" (#"machine.adb" 194 0 0# ()) );
              ( "GP_Sloc:machine.adb:194:16" (#"machine.adb" 194 0 0# ()) );
              ( "GP_Sloc:machine.adb:26:7:inlined:machine.adb:194:16" (#"machine.adb" 26 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
               ( "GP_Sloc:machine.adb:27:10:inlined:machine.adb:194:16" (#"machine.adb" 27 0 0# (if ((Boolean.andb((Machine__pc.pc.int__content <= 65535)) ((Machine__pc.pc.int__content >= 0)))) then (
                ( ( "GP_Sloc:machine.adb:29:16:inlined:machine.adb:194:16" (#"machine.adb" 29 0 0# #"machine.adb" 29 0 0# Machine__pc.pc.int__content <- ( (#"machine.adb" 29 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:L_1_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:29:46:inlined:machine.adb:194:16" "GP_Id:53" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Offs));
                                             ^ machine.adb:29:46:inlined:machine.adb:194:16:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:30:17:inlined:machine.adb:194:16" (#"machine.adb" 30 0 0# #"machine.adb" 30 0 0# Machine__executeprogram__ret.ret.int__content <- ( 0 )) ) )) else (
                ( "GP_Sloc:machine.adb:32:17:inlined:machine.adb:194:16" (#"machine.adb" 32 0 0# #"machine.adb" 32 0 0# Machine__executeprogram__ret.ret.int__content <- ( 2 )) )))) )) else (
               ()))) ) )))) );
             ( "GP_Sloc:machine.adb:196:10" (#"machine.adb" 196 0 0# ()) );
             ( "GP_Sloc:machine.adb:196:24" (#"machine.adb" 196 0 0# ()) );
             ( "GP_Sloc:machine.adb:196:21" (#"machine.adb" 196 0 0# #"machine.adb" 196 0 0# Machine__executeprogram__cyclecount.cyclecount.int__content <- ( (#"machine.adb" 196 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:196:35" "GP_Id:54" "comment:         CycleCount := CycleCount + 1;
                                  ^ machine.adb:196:35:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__cyclecount_assign__add" (Standard__integer.range_check_((Machine__executeprogram__cyclecount.cyclecount.int__content + 1))) )) )) );
             () (* Check for the exit condition and loop statements appearing before the loop invariant of loop machine.adb:151 *)
             ;
             (if (not ( (Boolean.andb((Machine__executeprogram__cyclecount.cyclecount.int__content < Machine__executeprogram__cycles.cycles)) ((Machine__executeprogram__ret.ret.int__content = 0))) )) then (
               raise Machine__executeprogram__L_1.L_1)) )
            done )))
            )))
           )))
          )))
         )))
        )))
       )))
      )
    with
     Machine__executeprogram__L_1.L_1 -> ()
    end)) )) );
   ( "GP_Sloc:machine.adb:198:7" (#"machine.adb" 198 0 0# (if ((Machine__executeprogram__ret.ret.int__content = 0)) then (
    ( "GP_Sloc:machine.adb:200:14" (#"machine.adb" 200 0 0# #"machine.adb" 200 0 0# Machine__executeprogram__ret.ret.int__content <- ( 1 )) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for defining the value of the aggregate at machine.adb:392 instantiated at machine.adb:439, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__detectinvalidbehaviour__B359b__memory__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__memory__aggregate_def
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___951   : int.
   (let temp___950 = (Machine__detectinvalidbehaviour__B359b__memory__aggregate_def.machine__detectinvalidbehaviour__B359b__memory__aggregate_def temp___951) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___951 True True True True)) then (
     (forall temp___952   : int.
      ((Array__Int__Machine__dataval.get temp___950 temp___952) = ( 0 : Machine__dataval.dataval )))) else true)))
  )

end

(* Module for defining the value of the aggregate at machine.adb:391 instantiated at machine.adb:439, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Machine__detectinvalidbehaviour__B359b__regs__aggregate_def___axiom
 use import "_gnatprove_standard".Main
 use        Machine__dataval
 use        Machine__dataval___axiom
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__regs__aggregate_def
 use        Array__Int__Machine__dataval

 axiom def_axiom :
  (forall temp___954   : int.
   (let temp___953 = (Machine__detectinvalidbehaviour__B359b__regs__aggregate_def.machine__detectinvalidbehaviour__B359b__regs__aggregate_def temp___954) in (
    (if ((Machine__dataval___axiom.dynamic_invariant temp___954 True True True True)) then (
     (forall temp___955   : int.
      ((Array__Int__Machine__dataval.get temp___953 temp___955) = ( 0 : Machine__dataval.dataval )))) else true)))
  )

end

(* Module for checking contracts and absence of run-time errors in subprogram "detectinvalidbehaviour" defined at machine.ads:47, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Machine__detectinvalidbehaviour__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Int_Division
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__integer___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Instruction__opcode
 use        Instruction__opcode__rep
 use        Instruction__reg
 use        Instruction__reg__rep
 use        Instruction__addr
 use        Instruction__offset
 use        Instruction__offset___axiom
 use        Instruction__offset__rep
 use        Instruction__instr
 use        Instruction__instr___axiom
 use        Machine__programcounter
 use        Machine__programcounter___axiom
 use        Array__Int__Instruction__instr
 use        Machine__program___axiom
 use        Machine__detectinvalidbehaviour__prog
 use        Machine__detectinvalidbehaviour__cycles
 use        Machine__TdatavalB
 use        Machine__dataval
 use        Machine__dataval__rep
 use        Array__Int__Machine__dataval
 use        Machine__register___axiom
 use        Machine__mem___axiom
 use        Machine__detectinvalidbehaviour__C356b
 use        Machine__detectinvalidbehaviour__C357b
 use        Machine__detectinvalidbehaviour__B359b__cyclecount
 use        Machine__detectinvalidbehaviour__B359b__inst
 use        Machine__detectinvalidbehaviour__B359b__pc
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__regs
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__memory
 use        Machine__detectinvalidbehaviour__B359b__r
 use        Machine__detectinvalidbehaviour__B359b__L_2
 use        Machine__detectinvalidbehaviour__B359b__L_2__C364b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C378b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C392b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C406b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C420b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C435b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C450b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C463b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C464b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C467b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b
 use        Machine__detectinvalidbehaviour__B359b__L_2__C481b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b
 use        Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__memory__aggregate_def
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Machine__detectinvalidbehaviour__B359b__regs__aggregate_def
 use        Array__Int__Machine__dataval
 use        Standard__integer___axiom
 use        Standard__integer___axiom
 use        Machine__dataval___axiom
 use        Machine__register___axiom
 use        Machine__mem___axiom
 use        Machine__programcounter___axiom
 use        Machine__program___axiom
 use        Machine__detectinvalidbehaviour__prog___axiom
 use        Machine__detectinvalidbehaviour__cycles___axiom
 use        Instruction__opcode___axiom
 use        Instruction__reg___axiom
 use        Instruction__addr___axiom
 use        Instruction__offset___axiom
 use        Instruction__instr___axiom
 use        Instruction__debugprintinstr___axiom
 use        Debug__put__2___axiom
 use        Debug__new_line___axiom
 use        Debug__put__3___axiom
 use        Machine__TdatavalB___axiom
 use        Machine__detectinvalidbehaviour__B359b__cyclecount___axiom
 use        Machine__detectinvalidbehaviour__B359b__inst___axiom
 use        Machine__detectinvalidbehaviour__B359b__pc___axiom
 use        Machine__detectinvalidbehaviour__B359b__regs___axiom
 use        Machine__detectinvalidbehaviour__B359b__regs__aggregate_def___axiom
 use        Machine__detectinvalidbehaviour__B359b__memory___axiom
 use        Machine__detectinvalidbehaviour__B359b__memory__aggregate_def___axiom
 use        Machine__detectinvalidbehaviour__B359b__r___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2___axiom
 use        Machine__detectinvalidbehaviour__C356b___axiom
 use        Machine__detectinvalidbehaviour__C357b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C364b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C378b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C392b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C406b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C420b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C435b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C450b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C463b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C464b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C467b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__C481b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b___axiom
 use        Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b___axiom

 val machine__detectinvalidbehaviour__result "model_projected" "model_trace:5549@result" "name:DetectInvalidBehaviour"  : bool__ref 
 
 let def #"machine.ads" 47 0 0#"W:diverges:N" "GP_Subp:machine.ads:47" 
   (__void_param : unit)
  requires { #"machine.ads" 47 0 0# true }
  ensures { #"machine.ads" 47 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# (Machine__program___axiom.dynamic_invariant Machine__detectinvalidbehaviour__prog.prog True False True True) };
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__cycles.cycles True False True True) };
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# true };
  () (* Declarations introduced by the compiler at the beginning of the subprogram machine.ads:47 *)
  ;
  () (* Check for RTE in the Pre of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram machine.ads:47 *)
  ;
  #"machine.ads" 47 0 0# assume { #"machine.ads" 47 0 0# true };
  #"machine.ads" 47 0 0# try
   ( ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 439 0 0# ()) );
   ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 439 0 0# ()) );
   ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 439 0 0# (#"machine.adb" 439 0 0# ( (let machine__detectinvalidbehaviour__C356b__assume = Machine__detectinvalidbehaviour__cycles.cycles in (
    #"machine.adb" 439 0 0# assume { #"machine.adb" 439 0 0# (machine__detectinvalidbehaviour__C356b__assume = Machine__detectinvalidbehaviour__C356b.c356b) }))
   ;
   #"machine.adb" 439 0 0# assume { #"machine.adb" 439 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__C356b.c356b True False True True) } ))) );
   ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 439 0 0# (#"machine.adb" 439 0 0# ())) );
   ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 439 0 0# ( (#"machine.adb" 388 0 0# ( #"machine.adb" 388 0 0# Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content <- ( 0 );
   #"machine.adb" 388 0 0# assume { #"machine.adb" 388 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content True False True True) } ));
   (#"machine.adb" 389 0 0# ( #"machine.adb" 389 0 0# abstract ensures {true}(let _ = #"machine.adb" 389 0 0# abstract ensures {true}(let _ = (let temp___957 = 0 in (
    ()))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"machine.adb" 389 0 0# assume { #"machine.adb" 389 0 0# (Instruction__instr___axiom.default_initial_assumption { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } False) };
   #"machine.adb" 389 0 0# assume { #"machine.adb" 389 0 0# (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } False False True True) } ));
   (#"machine.adb" 390 0 0# ( #"machine.adb" 390 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( 1 );
   #"machine.adb" 390 0 0# assume { #"machine.adb" 390 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__pc.pc.int__content True False True True) } ));
   (#"machine.adb" 391 0 0# ( #"machine.adb" 391 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Machine__detectinvalidbehaviour__B359b__regs__aggregate_def.machine__detectinvalidbehaviour__B359b__regs__aggregate_def(0)) );
   #"machine.adb" 391 0 0# assume { #"machine.adb" 391 0 0# (Machine__register___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content True False True True) } ));
   (#"machine.adb" 392 0 0# ( #"machine.adb" 392 0 0# Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content <- ( (Machine__detectinvalidbehaviour__B359b__memory__aggregate_def.machine__detectinvalidbehaviour__B359b__memory__aggregate_def(0)) );
   #"machine.adb" 392 0 0# assume { #"machine.adb" 392 0 0# (Machine__mem___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content True False True True) } ));
   (#"machine.adb" 393 0 0# #"machine.adb" 393 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(1)) ));
   (#"machine.adb" 395 0 0# ());
   ( "GP_Sloc:machine.adb:395:35:inlined:machine.adb:439:14" (#"machine.adb" 395 0 0# ( () (* Translation of an Ada loop from machine.adb:395 instantiated at machine.adb:439 *)
   ;
   (if ((Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content < Machine__detectinvalidbehaviour__C356b.c356b)) then (
    #"machine.adb" 395 0 0# try
     ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content in (
      ()))
      end ;
     (let temp___948 = #"machine.adb" 395 0 0# (any Array__Int__Machine__dataval.map
     ensures {#"machine.adb" 395 0 0# (result = Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content)} 
     ) in (
      ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content in (
       ()))
       end ;
      (let temp___946 = #"machine.adb" 395 0 0# (any Array__Int__Machine__dataval.map
      ensures {#"machine.adb" 395 0 0# (result = Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content)} 
      ) in (
       ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
        ()))
        end ;
       (let temp___945 = #"machine.adb" 395 0 0# (any int
       ensures {#"machine.adb" 395 0 0# (result = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content)} 
       ) in (
        ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
         ()))
         end ;
        (let temp___944 = #"machine.adb" 395 0 0# (any Instruction__instr.instr
        ensures {#"machine.adb" 395 0 0# (result = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })} 
        ) in (
         ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__B359b__r.r.bool__content in (
          ()))
          end ;
         (let temp___943 = #"machine.adb" 395 0 0# (any bool
         ensures {#"machine.adb" 395 0 0# (result = Machine__detectinvalidbehaviour__B359b__r.r.bool__content)} 
         ) in (
          ( #"machine.adb" 395 0 0# abstract ensures {true}(let _ = Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content in (
           ()))
           end ;
          (let temp___942 = #"machine.adb" 395 0 0# (any int
          ensures {#"machine.adb" 395 0 0# (result = Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content)} 
          ) in (
           ( () (* First unroling of the loop statements appearing before the loop invariant of loop machine.adb:395 instantiated at machine.adb:439 *)
           ;
           () (* While loop translating the Ada loop from machine.adb:395 instantiated at machine.adb:439 *)
           ;
           #"machine.adb" 395 0 0# while True do
            ( () (* Assume implicit invariants from the loop machine.adb:395 instantiated at machine.adb:439 *)
            ;
            #"machine.adb" 395 0 0# assume { #"machine.adb" 395 0 0# (Boolean.andb(( ( ( ( ( ( ( ( ( ( ( ( true /\ (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content False True True True) ) /\ true ) /\ true ) /\ true ) /\ (Instruction__instr___axiom.dynamic_invariant { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } False True True True) ) /\ true ) /\ (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__pc.pc.int__content False True True True) ) /\ true ) /\ (Machine__register___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content False True True True) ) /\ (forall temp___947 #"machine.adb" 395 0 0#  : int.
             (if (( (Instruction__reg.first <= temp___947) /\ (temp___947 <= Instruction__reg.last) )) then (
              (if (( false /\ ( false /\ ( false /\ ( false /\ ( false /\ false ) ) ) ) )) then (
               ((Array__Int__Machine__dataval.get Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content temp___947) = (Array__Int__Machine__dataval.get temp___946 temp___947))) else (
               true))) else true)) ) /\ (Machine__mem___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content False True True True) ) /\ true )) ((Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content < Machine__detectinvalidbehaviour__C356b.c356b))) };
            () (* Check for absence of RTE in the invariant of loop machine.adb:395 instantiated at machine.adb:439 *)
            ;
            () (* Loop statements appearing after the loop invariant of loop machine.adb:395 instantiated at machine.adb:439 *)
            ;
            ( "GP_Sloc:machine.adb:396:15:inlined:machine.adb:439:14" (#"machine.adb" 396 0 0# (let temp___941 = { ( (let temp___939 = (Array__Int__Instruction__instr.get(Machine__detectinvalidbehaviour__prog.prog) (Machine__detectinvalidbehaviour__B359b__pc.pc.int__content)) in (
            (let temp___940 = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
             ( #"machine.adb" 396 0 0# assert { #"machine.adb" 396 0 0# (#"machine.adb" 396 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:396:15:inlined:machine.adb:439:14" "GP_Id:55" "comment:         Inst := Prog(PC);
              ^ machine.adb:396:15:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__inst_assign" (if ((Instruction__instr.attr__constrained temp___940)) then (
              ((Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___939)) = (Instruction__instr.rec__instruction__instr__op (Instruction__instr.__split_discrs temp___940)))) else true) )) };
             temp___939 )))
            ))
             ) with Instruction__instr.attr__constrained = (Instruction__instr.attr__constrained({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })) } in (
             (  Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content <- ( (Instruction__instr.__split_fields(temp___941)) );
              Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content <- ( (Instruction__instr.__split_discrs(temp___941)) ) )))
            ) );
            ( "GP_Sloc:machine.adb:397:10:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ()) );
            ( "GP_Sloc:machine.adb:397:10:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ( (Debug__put__2___axiom.put__2(Machine__detectinvalidbehaviour__B359b__pc.pc.int__content)) )) );
            ( "GP_Sloc:machine.adb:397:28:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ()) );
            ( "GP_Sloc:machine.adb:397:28:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ( (Debug__put__3___axiom.put__3(58)) )) );
            ( "GP_Sloc:machine.adb:397:38:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ()) );
            ( "GP_Sloc:machine.adb:397:38:inlined:machine.adb:439:14" (#"machine.adb" 397 0 0# ( (Debug__put__3___axiom.put__3(9)) )) );
            ( "GP_Sloc:machine.adb:398:10:inlined:machine.adb:439:14" (#"machine.adb" 398 0 0# ()) );
            ( "GP_Sloc:machine.adb:398:10:inlined:machine.adb:439:14" (#"machine.adb" 398 0 0# ( (Instruction__debugprintinstr___axiom.debugprintinstr({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })) )) );
            ( "GP_Sloc:machine.adb:399:10:inlined:machine.adb:439:14" (#"machine.adb" 399 0 0# ()) );
            ( "GP_Sloc:machine.adb:399:10:inlined:machine.adb:439:14" (#"machine.adb" 399 0 0# ( (Debug__new_line___axiom.new_line(())) )) );
            ( "GP_Sloc:machine.adb:400:12:inlined:machine.adb:439:14" (#"machine.adb" 400 0 0# #"machine.adb" 400 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(1)) )) );
            ( "GP_Sloc:machine.adb:401:10:inlined:machine.adb:439:14" (#"machine.adb" 401 0 0# (if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 1)) then (
             ( ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# ()) );
             ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# (#"machine.adb" 403 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C364b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 403 0 0# assume { #"machine.adb" 403 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C364b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b) }))
             ;
             #"machine.adb" 403 0 0# assume { #"machine.adb" 403 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# ()) );
             ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# ()) );
             ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# ()) );
             ( "GP_Sloc:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 403 0 0# ()) );
             ( "GP_Sloc:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 278 0 0# ()) );
             ( "GP_Sloc:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 278 0 0# (#"machine.adb" 278 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b in (
              #"machine.adb" 278 0 0# assume { #"machine.adb" 278 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b) }))
             ;
             #"machine.adb" 278 0 0# assume { #"machine.adb" 278 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 278 0 0# ()) );
             ( "GP_Sloc:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 278 0 0# ()) );
             ( "GP_Sloc:machine.adb:278:7:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 278 0 0# (if (not ( (Boolean.orb(( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 206 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:206:24:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:61" "comment:      return (Regs(Inst.AddRs2) > 0 and then Regs(Inst.AddRs1) > DataVal'Last - Regs(Inst.AddRs2)) or
                       ^ machine.adb:206:24:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) )))))))) > 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 206 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:206:55:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:62" "comment:      return (Regs(Inst.AddRs2) > 0 and then Regs(Inst.AddRs1) > DataVal'Last - Regs(Inst.AddRs2)) or
                                                      ^ machine.adb:206:55:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) )))))))) > (#"machine.adb" 206 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:206:79:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:64" "comment:      return (Regs(Inst.AddRs2) > 0 and then Regs(Inst.AddRs1) > DataVal'Last - Regs(Inst.AddRs2)) or
                                                                              ^ machine.adb:206:79:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__sub" (Machine__TdatavalB.range_check_((2147483647 - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 206 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:206:90:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:63" "comment:      return (Regs(Inst.AddRs2) > 0 and then Regs(Inst.AddRs1) > DataVal'Last - Regs(Inst.AddRs2)) or
                                                                                         ^ machine.adb:206:90:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__sub__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) ))))))))))) ))) )) (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 207 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:207:24:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:65" "comment:             (Regs(Inst.AddRs2) < 0 and then Regs(Inst.AddRs1) < DataVal'First - Regs(Inst.AddRs2));
                       ^ machine.adb:207:24:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) )))))))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 207 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:207:55:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:66" "comment:             (Regs(Inst.AddRs2) < 0 and then Regs(Inst.AddRs1) < DataVal'First - Regs(Inst.AddRs2));
                                                      ^ machine.adb:207:55:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) )))))))) < (#"machine.adb" 207 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__sub" "GP_Sloc:machine.adb:207:80:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:68" "comment:             (Regs(Inst.AddRs2) < 0 and then Regs(Inst.AddRs1) < DataVal'First - Regs(Inst.AddRs2));
                                                                               ^ machine.adb:207:80:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((( -2147483648 ) - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 207 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__sub__ixdcomp__selectcomp" "GP_Sloc:machine.adb:207:91:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:67" "comment:             (Regs(Inst.AddRs2) < 0 and then Regs(Inst.AddRs1) < DataVal'First - Regs(Inst.AddRs2));
                                                                                          ^ machine.adb:207:91:inlined:machine.adb:278:14:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B368b__C369b.c369b)) ))))))))))) ))) ))) )) then (
              ( ( "GP_Sloc:machine.adb:279:27:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 279 0 0# #"machine.adb" 279 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:279:19:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:59" "comment:         Regs(Inst.AddRd) := Regs(Inst.AddRs1) + Regs(Inst.AddRs2);
                  ^ machine.adb:279:19:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrd_(Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b)) ))))) ((Machine__dataval__rep.of_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:279:48:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:58" "comment:         Regs(Inst.AddRd) := Regs(Inst.AddRs1) + Regs(Inst.AddRs2);
                                               ^ machine.adb:279:48:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:279:39:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:56" "comment:         Regs(Inst.AddRd) := Regs(Inst.AddRs1) + Regs(Inst.AddRs2);
                                      ^ machine.adb:279:39:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__add__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__addrs1_(Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b)) )))))))) + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 279 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__add__ixdcomp__selectcomp" "GP_Sloc:machine.adb:279:59:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:57" "comment:         Regs(Inst.AddRd) := Regs(Inst.AddRs1) + Regs(Inst.AddRs2);
                                                          ^ machine.adb:279:59:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__addrs2_(Machine__detectinvalidbehaviour__B359b__L_2__C364b.c364b)) ))))))))))) )))))) )) );
              ( "GP_Sloc:machine.adb:280:17:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 280 0 0# ()) );
              ( "GP_Sloc:machine.adb:280:17:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 280 0 0# (#"machine.adb" 280 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 280 0 0# assume { #"machine.adb" 280 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b.c374b) }))
              ;
              #"machine.adb" 280 0 0# assume { #"machine.adb" 280 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b.c374b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:280:17:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 280 0 0# ()) );
              ( "GP_Sloc:machine.adb:280:10:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 280 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b.c374b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B368b__C374b.c374b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:281:16:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 281 0 0# #"machine.adb" 281 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 281 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:281:46:inlined:machine.adb:403:16:inlined:machine.adb:439:14" "GP_Id:60" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:281:46:inlined:machine.adb:403:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:282:17:inlined:machine.adb:403:16:inlined:machine.adb:439:14" (#"machine.adb" 282 0 0# #"machine.adb" 282 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) )) else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 2)) then (
             ( ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# ()) );
             ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# (#"machine.adb" 405 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C378b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 405 0 0# assume { #"machine.adb" 405 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C378b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b) }))
             ;
             #"machine.adb" 405 0 0# assume { #"machine.adb" 405 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# ()) );
             ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# ()) );
             ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# ()) );
             ( "GP_Sloc:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 405 0 0# ()) );
             ( "GP_Sloc:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 289 0 0# ()) );
             ( "GP_Sloc:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 289 0 0# (#"machine.adb" 289 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b in (
              #"machine.adb" 289 0 0# assume { #"machine.adb" 289 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b) }))
             ;
             #"machine.adb" 289 0 0# assume { #"machine.adb" 289 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 289 0 0# ()) );
             ( "GP_Sloc:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 289 0 0# ()) );
             ( "GP_Sloc:machine.adb:289:7:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 289 0 0# (if (not ( (Boolean.orb(( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 212 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:212:24:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:74" "comment:      return (Regs(Inst.SubRs2) < 0 and then (Regs(Inst.SubRs1) > DataVal'Last +  Regs(Inst.SubRs2))) or
                       ^ machine.adb:212:24:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) )))))))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 212 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:212:56:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:75" "comment:      return (Regs(Inst.SubRs2) < 0 and then (Regs(Inst.SubRs1) > DataVal'Last +  Regs(Inst.SubRs2))) or
                                                       ^ machine.adb:212:56:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) )))))))) > (#"machine.adb" 212 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:212:80:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:77" "comment:      return (Regs(Inst.SubRs2) < 0 and then (Regs(Inst.SubRs1) > DataVal'Last +  Regs(Inst.SubRs2))) or
                                                                               ^ machine.adb:212:80:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__add" (Machine__TdatavalB.range_check_((2147483647 + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 212 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:212:92:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:76" "comment:      return (Regs(Inst.SubRs2) < 0 and then (Regs(Inst.SubRs1) > DataVal'Last +  Regs(Inst.SubRs2))) or
                                                                                           ^ machine.adb:212:92:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__add__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) ))))))))))) ))) )) (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 213 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:213:24:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:78" "comment:             (Regs(Inst.SubRs2) > 0 and then (Regs(Inst.SubRs1) < DataVal'First + Regs(Inst.SubRs2)));
                       ^ machine.adb:213:24:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) )))))))) > 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 213 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:213:56:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:79" "comment:             (Regs(Inst.SubRs2) > 0 and then (Regs(Inst.SubRs1) < DataVal'First + Regs(Inst.SubRs2)));
                                                       ^ machine.adb:213:56:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) )))))))) < (#"machine.adb" 213 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__add" "GP_Sloc:machine.adb:213:81:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:81" "comment:             (Regs(Inst.SubRs2) > 0 and then (Regs(Inst.SubRs1) < DataVal'First + Regs(Inst.SubRs2)));
                                                                                ^ machine.adb:213:81:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((( -2147483648 ) + (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 213 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__add__ixdcomp__selectcomp" "GP_Sloc:machine.adb:213:92:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:80" "comment:             (Regs(Inst.SubRs2) > 0 and then (Regs(Inst.SubRs1) < DataVal'First + Regs(Inst.SubRs2)));
                                                                                           ^ machine.adb:213:92:inlined:machine.adb:289:14:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B382b__C383b.c383b)) ))))))))))) ))) ))) )) then (
              ( ( "GP_Sloc:machine.adb:290:27:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 290 0 0# #"machine.adb" 290 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 290 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:290:19:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:72" "comment:         Regs(Inst.SubRd) := Regs(Inst.SubRs1) - Regs(Inst.SubRs2);
                  ^ machine.adb:290:19:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrd_(Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b)) ))))) ((Machine__dataval__rep.of_rep((#"machine.adb" 290 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:290:48:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:71" "comment:         Regs(Inst.SubRd) := Regs(Inst.SubRs1) - Regs(Inst.SubRs2);
                                               ^ machine.adb:290:48:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__sub" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 290 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:290:39:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:69" "comment:         Regs(Inst.SubRd) := Regs(Inst.SubRs1) - Regs(Inst.SubRs2);
                                      ^ machine.adb:290:39:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__sub__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__subrs1_(Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b)) )))))))) - (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 290 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__sub__ixdcomp__selectcomp" "GP_Sloc:machine.adb:290:59:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:70" "comment:         Regs(Inst.SubRd) := Regs(Inst.SubRs1) - Regs(Inst.SubRs2);
                                                          ^ machine.adb:290:59:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__subrs2_(Machine__detectinvalidbehaviour__B359b__L_2__C378b.c378b)) ))))))))))) )))))) )) );
              ( "GP_Sloc:machine.adb:291:17:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 291 0 0# ()) );
              ( "GP_Sloc:machine.adb:291:17:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 291 0 0# (#"machine.adb" 291 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 291 0 0# assume { #"machine.adb" 291 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b.c388b) }))
              ;
              #"machine.adb" 291 0 0# assume { #"machine.adb" 291 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b.c388b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:291:17:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 291 0 0# ()) );
              ( "GP_Sloc:machine.adb:291:10:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 291 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b.c388b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B382b__C388b.c388b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:292:16:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 292 0 0# #"machine.adb" 292 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 292 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:292:46:inlined:machine.adb:405:16:inlined:machine.adb:439:14" "GP_Id:73" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:292:46:inlined:machine.adb:405:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:293:17:inlined:machine.adb:405:16:inlined:machine.adb:439:14" (#"machine.adb" 293 0 0# #"machine.adb" 293 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 3)) then (
             ( ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# ()) );
             ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# (#"machine.adb" 407 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C392b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 407 0 0# assume { #"machine.adb" 407 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C392b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b) }))
             ;
             #"machine.adb" 407 0 0# assume { #"machine.adb" 407 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# ()) );
             ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# ()) );
             ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# ()) );
             ( "GP_Sloc:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 407 0 0# ()) );
             ( "GP_Sloc:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 300 0 0# ()) );
             ( "GP_Sloc:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 300 0 0# (#"machine.adb" 300 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b in (
              #"machine.adb" 300 0 0# assume { #"machine.adb" 300 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b) }))
             ;
             #"machine.adb" 300 0 0# assume { #"machine.adb" 300 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 300 0 0# ()) );
             ( "GP_Sloc:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 300 0 0# ()) );
             ( "GP_Sloc:machine.adb:300:7:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 300 0 0# (if (not ( (Boolean.orb((Boolean.orb(( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:218:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:87" "comment:      return (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) < 0 and then Regs(Inst.MulRs1) < DataVal'Last / Regs(Inst.MulRs2)) or
                       ^ machine.adb:218:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__andthen__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:218:55:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:88" "comment:      return (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) < 0 and then Regs(Inst.MulRs1) < DataVal'Last / Regs(Inst.MulRs2)) or
                                                      ^ machine.adb:218:55:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) < 0) ) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:218:86:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:89" "comment:      return (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) < 0 and then Regs(Inst.MulRs1) < DataVal'Last / Regs(Inst.MulRs2)) or
                                                                                     ^ machine.adb:218:86:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) < (#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:218:110:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:91" "comment:      return (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) < 0 and then Regs(Inst.MulRs1) < DataVal'Last / Regs(Inst.MulRs2)) or
                                                                                                             ^ machine.adb:218:110:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DIVISION_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 218 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:218:121:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:90" "comment:      return (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) < 0 and then Regs(Inst.MulRs1) < DataVal'Last / Regs(Inst.MulRs2)) or
                                                                                                                        ^ machine.adb:218:121:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__div__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))))) ))) )) (( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:219:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:92" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                       ^ machine.adb:219:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) < 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:219:55:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:93" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                                                      ^ machine.adb:219:55:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) > 0) ) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:219:86:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:94" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                                                                                     ^ machine.adb:219:86:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) < (#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__div" "GP_Sloc:machine.adb:219:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:97" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                                                                                                              ^ machine.adb:219:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__div" "GP_Sloc:machine.adb:219:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:96" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                                                                                                              ^ machine.adb:219:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DIVISION_CHECK" (Int_Division.div_(( -2147483648 )) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 219 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__or__andthen__cmp__div__ixdcomp__selectcomp" "GP_Sloc:machine.adb:219:122:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:95" "comment:             (Regs(Inst.MulRs1) < 0 and then Regs(Inst.MulRs2) > 0 and then Regs(Inst.MulRs1) < DataVal'First / Regs(Inst.MulRs2)) or
                                                                                                                         ^ machine.adb:219:122:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))))) )))) ))) )))) (( ( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 220 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:220:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:98" "comment:             (Regs(Inst.MulRs2) /= 0 and then Regs(Inst.MulRs1) > 0 and then Regs(Inst.MulRs1) > DataVal'Last / Regs(Inst.MulRs2));
                       ^ machine.adb:220:24:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__andthen__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) <> 0) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 220 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:220:56:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:99" "comment:             (Regs(Inst.MulRs2) /= 0 and then Regs(Inst.MulRs1) > 0 and then Regs(Inst.MulRs1) > DataVal'Last / Regs(Inst.MulRs2));
                                                       ^ machine.adb:220:56:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) > 0) ) && ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 220 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:220:87:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:100" "comment:             (Regs(Inst.MulRs2) /= 0 and then Regs(Inst.MulRs1) > 0 and then Regs(Inst.MulRs1) > DataVal'Last / Regs(Inst.MulRs2));
                                                                                      ^ machine.adb:220:87:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))) > (#"machine.adb" 220 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:220:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:102" "comment:             (Regs(Inst.MulRs2) /= 0 and then Regs(Inst.MulRs1) > 0 and then Regs(Inst.MulRs1) > DataVal'Last / Regs(Inst.MulRs2));
                                                                                                              ^ machine.adb:220:111:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DIVISION_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__div" (Int_Division.div_(2147483647) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 220 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:220:122:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:101" "comment:             (Regs(Inst.MulRs2) /= 0 and then Regs(Inst.MulRs1) > 0 and then Regs(Inst.MulRs1) > DataVal'Last / Regs(Inst.MulRs2));
                                                                                                                         ^ machine.adb:220:122:inlined:machine.adb:300:14:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__div__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B396b__C397b.c397b)) )))))))))) ))) ))) )) then (
              ( ( "GP_Sloc:machine.adb:301:27:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 301 0 0# #"machine.adb" 301 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 301 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:301:19:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:85" "comment:         Regs(Inst.MulRd) := Regs(Inst.MulRs1) * Regs(Inst.MulRs2);
                  ^ machine.adb:301:19:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrd_(Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b)) ))))) ((Machine__dataval__rep.of_rep((#"machine.adb" 301 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:301:48:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:84" "comment:         Regs(Inst.MulRd) := Regs(Inst.MulRs1) * Regs(Inst.MulRs2);
                                               ^ machine.adb:301:48:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__mult" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 301 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:301:39:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:82" "comment:         Regs(Inst.MulRd) := Regs(Inst.MulRs1) * Regs(Inst.MulRs2);
                                      ^ machine.adb:301:39:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__mult__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__mulrs1_(Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b)) )))))))) * (Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 301 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__mult__ixdcomp__selectcomp" "GP_Sloc:machine.adb:301:59:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:83" "comment:         Regs(Inst.MulRd) := Regs(Inst.MulRs1) * Regs(Inst.MulRs2);
                                                          ^ machine.adb:301:59:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__mulrs2_(Machine__detectinvalidbehaviour__B359b__L_2__C392b.c392b)) ))))))))))) )))))) )) );
              ( "GP_Sloc:machine.adb:302:17:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 302 0 0# ()) );
              ( "GP_Sloc:machine.adb:302:17:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 302 0 0# (#"machine.adb" 302 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 302 0 0# assume { #"machine.adb" 302 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b.c402b) }))
              ;
              #"machine.adb" 302 0 0# assume { #"machine.adb" 302 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b.c402b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:302:17:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 302 0 0# ()) );
              ( "GP_Sloc:machine.adb:302:10:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 302 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b.c402b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B396b__C402b.c402b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:303:16:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 303 0 0# #"machine.adb" 303 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 303 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:303:46:inlined:machine.adb:407:16:inlined:machine.adb:439:14" "GP_Id:86" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:303:46:inlined:machine.adb:407:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:304:17:inlined:machine.adb:407:16:inlined:machine.adb:439:14" (#"machine.adb" 304 0 0# #"machine.adb" 304 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 4)) then (
             ( ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# ()) );
             ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# (#"machine.adb" 409 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C406b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 409 0 0# assume { #"machine.adb" 409 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C406b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b) }))
             ;
             #"machine.adb" 409 0 0# assume { #"machine.adb" 409 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# ()) );
             ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# ()) );
             ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# ()) );
             ( "GP_Sloc:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 409 0 0# ()) );
             ( "GP_Sloc:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 311 0 0# ()) );
             ( "GP_Sloc:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 311 0 0# (#"machine.adb" 311 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b in (
              #"machine.adb" 311 0 0# assume { #"machine.adb" 311 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b.c411b) }))
             ;
             #"machine.adb" 311 0 0# assume { #"machine.adb" 311 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b.c411b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 311 0 0# ()) );
             ( "GP_Sloc:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 311 0 0# ()) );
             ( "GP_Sloc:machine.adb:311:7:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 311 0 0# (if (not ( (Boolean.orb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 225 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:225:24:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:109" "comment:      return (Regs(Inst.DivRs2) = 0) or
                       ^ machine.adb:225:24:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b.c411b)) )))))))) = 0)) ((Boolean.andb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 226 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:226:24:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:110" "comment:             (Regs(Inst.DivRs1) = DataVal'First and Regs(Inst.DivRs2) = -1);
                       ^ machine.adb:226:24:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__and__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b.c411b)) )))))))) = ( -2147483648 ))) (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 226 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__and__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:226:62:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:111" "comment:             (Regs(Inst.DivRs1) = DataVal'First and Regs(Inst.DivRs2) = -1);
                                                             ^ machine.adb:226:62:inlined:machine.adb:311:14:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__B359b__L_2__B410b__C411b.c411b)) )))))))) = ( -1 )))))) )) then (
              ( ( "GP_Sloc:machine.adb:312:27:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 312 0 0# #"machine.adb" 312 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 312 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:312:19:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:107" "comment:         Regs(Inst.DivRd) := Regs(Inst.DivRs1) / Regs(Inst.DivRs2);
                  ^ machine.adb:312:19:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrd_(Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b)) ))))) ((Machine__dataval__rep.of_rep((#"machine.adb" 312 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:312:48:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__div" "GP_Id:106" "comment:         Regs(Inst.DivRd) := Regs(Inst.DivRs1) / Regs(Inst.DivRs2);
                                               ^ machine.adb:312:48:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" (Machine__TdatavalB.range_check_((#"machine.adb" 312 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:machine.adb:312:48:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:105" "comment:         Regs(Inst.DivRd) := Regs(Inst.DivRs1) / Regs(Inst.DivRs2);
                                               ^ machine.adb:312:48:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DIVISION_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__div" (Int_Division.div_((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 312 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:312:39:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:103" "comment:         Regs(Inst.DivRd) := Regs(Inst.DivRs1) / Regs(Inst.DivRs2);
                                      ^ machine.adb:312:39:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__div__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__divrs1_(Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b)) ))))))))) ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 312 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__div__ixdcomp__selectcomp" "GP_Sloc:machine.adb:312:59:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:104" "comment:         Regs(Inst.DivRd) := Regs(Inst.DivRs1) / Regs(Inst.DivRs2);
                                                          ^ machine.adb:312:59:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__divrs2_(Machine__detectinvalidbehaviour__B359b__L_2__C406b.c406b)) )))))))))) )))) )))))) )) );
              ( "GP_Sloc:machine.adb:313:17:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 313 0 0# ()) );
              ( "GP_Sloc:machine.adb:313:17:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 313 0 0# (#"machine.adb" 313 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 313 0 0# assume { #"machine.adb" 313 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b.c416b) }))
              ;
              #"machine.adb" 313 0 0# assume { #"machine.adb" 313 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b.c416b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:313:17:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 313 0 0# ()) );
              ( "GP_Sloc:machine.adb:313:10:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 313 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b.c416b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B410b__C416b.c416b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:314:16:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 314 0 0# #"machine.adb" 314 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 314 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:314:46:inlined:machine.adb:409:16:inlined:machine.adb:439:14" "GP_Id:108" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:314:46:inlined:machine.adb:409:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:315:17:inlined:machine.adb:409:16:inlined:machine.adb:439:14" (#"machine.adb" 315 0 0# #"machine.adb" 315 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 6)) then (
             ( ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# (#"machine.adb" 411 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C420b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 411 0 0# assume { #"machine.adb" 411 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C420b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b) }))
             ;
             #"machine.adb" 411 0 0# assume { #"machine.adb" 411 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 411 0 0# ()) );
             ( "GP_Sloc:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 322 0 0# ()) );
             ( "GP_Sloc:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 322 0 0# (#"machine.adb" 322 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b in (
              #"machine.adb" 322 0 0# assume { #"machine.adb" 322 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b) }))
             ;
             #"machine.adb" 322 0 0# assume { #"machine.adb" 322 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 322 0 0# ()) );
             ( "GP_Sloc:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 322 0 0# ()) );
             ( "GP_Sloc:machine.adb:322:7:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 322 0 0# (if (not ( (Boolean.orb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 231 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:231:24:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:118" "comment:      return (Regs(Inst.LdrRs) < 0 - DataVal(Inst.LdrOffs)) or
                       ^ machine.adb:231:24:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b)) )))))))) < (0 - (Instruction__offset__rep.to_rep((#"machine.adb" 231 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:231:50:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:119" "comment:      return (Regs(Inst.LdrRs) < 0 - DataVal(Inst.LdrOffs)) or
                                                 ^ machine.adb:231:50:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__sub__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b)) ))))))) (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 232 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:232:24:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:120" "comment:             (Regs(Inst.LdrRs) > 65535 - DataVal(Inst.LdrOffs));
                       ^ machine.adb:232:24:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b)) )))))))) > (65535 - (Instruction__offset__rep.to_rep((#"machine.adb" 232 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__sub__typeconv__selectcomp" "GP_Sloc:machine.adb:232:54:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:121" "comment:             (Regs(Inst.LdrRs) > 65535 - DataVal(Inst.LdrOffs));
                                                     ^ machine.adb:232:54:inlined:machine.adb:322:14:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__B359b__L_2__B425b__C426b.c426b)) )))))))) )) then (
              ( ( "GP_Sloc:machine.adb:323:27:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 323 0 0# #"machine.adb" 323 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:323:19:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:116" "comment:         Regs(Inst.LdrRd) := Memory(Addr(Regs(Inst.LdrRs) + DataVal(Inst.LdrOffs)));
                  ^ machine.adb:323:19:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__ldrrd_(Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b)) ))))) ((Machine__dataval__rep.of_rep((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:323:59:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__typeconv__add" "GP_Id:115" "comment:         Regs(Inst.LdrRd) := Memory(Addr(Regs(Inst.LdrRs) + DataVal(Inst.LdrOffs)));
                                                          ^ machine.adb:323:59:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:323:59:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:114" "comment:         Regs(Inst.LdrRd) := Memory(Addr(Regs(Inst.LdrRs) + DataVal(Inst.LdrOffs)));
                                                          ^ machine.adb:323:59:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__typeconv__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:323:51:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:112" "comment:         Regs(Inst.LdrRd) := Memory(Addr(Regs(Inst.LdrRs) + DataVal(Inst.LdrOffs)));
                                                  ^ machine.adb:323:51:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__typeconv__add__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__ldrrs_(Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b)) )))))))) + (Instruction__offset__rep.to_rep((#"machine.adb" 323 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:323:73:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:113" "comment:         Regs(Inst.LdrRd) := Memory(Addr(Regs(Inst.LdrRs) + DataVal(Inst.LdrOffs)));
                                                                        ^ machine.adb:323:73:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__ldroffs_(Machine__detectinvalidbehaviour__B359b__L_2__C420b.c420b)) ))))))) )))) )))))))))) )) );
              ( "GP_Sloc:machine.adb:324:17:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 324 0 0# ()) );
              ( "GP_Sloc:machine.adb:324:17:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 324 0 0# (#"machine.adb" 324 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 324 0 0# assume { #"machine.adb" 324 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b.c431b) }))
              ;
              #"machine.adb" 324 0 0# assume { #"machine.adb" 324 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b.c431b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:324:17:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 324 0 0# ()) );
              ( "GP_Sloc:machine.adb:324:10:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 324 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b.c431b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B425b__C431b.c431b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:325:16:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 325 0 0# #"machine.adb" 325 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 325 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:325:46:inlined:machine.adb:411:16:inlined:machine.adb:439:14" "GP_Id:117" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:325:46:inlined:machine.adb:411:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:326:17:inlined:machine.adb:411:16:inlined:machine.adb:439:14" (#"machine.adb" 326 0 0# #"machine.adb" 326 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 7)) then (
             ( ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# (#"machine.adb" 413 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C435b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 413 0 0# assume { #"machine.adb" 413 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C435b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b) }))
             ;
             #"machine.adb" 413 0 0# assume { #"machine.adb" 413 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 413 0 0# ()) );
             ( "GP_Sloc:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 333 0 0# ()) );
             ( "GP_Sloc:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 333 0 0# (#"machine.adb" 333 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b in (
              #"machine.adb" 333 0 0# assume { #"machine.adb" 333 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b) }))
             ;
             #"machine.adb" 333 0 0# assume { #"machine.adb" 333 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 333 0 0# ()) );
             ( "GP_Sloc:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 333 0 0# ()) );
             ( "GP_Sloc:machine.adb:333:7:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 333 0 0# (if (not ( (Boolean.orb(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 237 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:237:24:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:128" "comment:      return (Regs(Inst.StrRa) < 0 - DataVal(Inst.StrOffs)) or
                       ^ machine.adb:237:24:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b)) )))))))) < (0 - (Instruction__offset__rep.to_rep((#"machine.adb" 237 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__sub__typeconv__selectcomp" "GP_Sloc:machine.adb:237:50:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:129" "comment:      return (Regs(Inst.StrRa) < 0 - DataVal(Inst.StrOffs)) or
                                                 ^ machine.adb:237:50:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b)) ))))))) (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 238 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:238:24:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:130" "comment:             (Regs(Inst.StrRa) > 65535 - DataVal(Inst.StrOffs));
                       ^ machine.adb:238:24:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b)) )))))))) > (65535 - (Instruction__offset__rep.to_rep((#"machine.adb" 238 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__sub__typeconv__selectcomp" "GP_Sloc:machine.adb:238:54:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:131" "comment:             (Regs(Inst.StrRa) > 65535 - DataVal(Inst.StrOffs));
                                                     ^ machine.adb:238:54:inlined:machine.adb:333:14:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__B359b__L_2__B440b__C441b.c441b)) )))))))) )) then (
              ( ( "GP_Sloc:machine.adb:334:65:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 334 0 0# #"machine.adb" 334 0 0# Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__memory.memory.Array__Int__Machine__dataval.map__content) ((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:334:39:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Shape:B359b_declblk__L_2_while__case__if__memory_assign__ixdcomp__typeconv__add" "GP_Id:126" "comment:         Memory(Addr(Regs(Inst.StrRa) + DataVal(Inst.StrOffs))) := Regs(Inst.StrRb);
                                      ^ machine.adb:334:39:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Instruction__addr.range_check_((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:334:39:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:125" "comment:         Memory(Addr(Regs(Inst.StrRa) + DataVal(Inst.StrOffs))) := Regs(Inst.StrRb);
                                      ^ machine.adb:334:39:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__memory_assign__ixdcomp__typeconv__add" (Machine__TdatavalB.range_check_(((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:31:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:123" "comment:         Memory(Addr(Regs(Inst.StrRa) + DataVal(Inst.StrOffs))) := Regs(Inst.StrRb);
                              ^ machine.adb:334:31:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__memory_assign__ixdcomp__typeconv__add__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strra_(Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b)) )))))))) + (Instruction__offset__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:53:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:124" "comment:         Memory(Addr(Regs(Inst.StrRa) + DataVal(Inst.StrOffs))) := Regs(Inst.StrRb);
                                                    ^ machine.adb:334:53:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__memory_assign__ixdcomp__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__stroffs_(Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b)) ))))))) )))) ))) ((Machine__dataval__rep.of_rep((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 334 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:334:77:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:122" "comment:         Memory(Addr(Regs(Inst.StrRa) + DataVal(Inst.StrOffs))) := Regs(Inst.StrRb);
                                                                            ^ machine.adb:334:77:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__memory_assign__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__strrb_(Machine__detectinvalidbehaviour__B359b__L_2__C435b.c435b)) )))))))))))) )) );
              ( "GP_Sloc:machine.adb:335:17:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 335 0 0# ()) );
              ( "GP_Sloc:machine.adb:335:17:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 335 0 0# (#"machine.adb" 335 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 335 0 0# assume { #"machine.adb" 335 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b.c446b) }))
              ;
              #"machine.adb" 335 0 0# assume { #"machine.adb" 335 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b.c446b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:335:17:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 335 0 0# ()) );
              ( "GP_Sloc:machine.adb:335:10:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 335 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b.c446b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B440b__C446b.c446b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:336:16:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 336 0 0# #"machine.adb" 336 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 336 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:336:46:inlined:machine.adb:413:16:inlined:machine.adb:439:14" "GP_Id:127" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:336:46:inlined:machine.adb:413:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:337:17:inlined:machine.adb:413:16:inlined:machine.adb:439:14" (#"machine.adb" 337 0 0# #"machine.adb" 337 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 8)) then (
             ( ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# ()) );
             ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# (#"machine.adb" 415 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C450b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 415 0 0# assume { #"machine.adb" 415 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C450b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C450b.c450b) }))
             ;
             #"machine.adb" 415 0 0# assume { #"machine.adb" 415 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C450b.c450b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# ()) );
             ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# ()) );
             ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# ()) );
             ( "GP_Sloc:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 415 0 0# ()) );
             ( "GP_Sloc:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 344 0 0# ()) );
             ( "GP_Sloc:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 344 0 0# (#"machine.adb" 344 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C450b.c450b in (
              #"machine.adb" 344 0 0# assume { #"machine.adb" 344 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b.c455b) }))
             ;
             #"machine.adb" 344 0 0# assume { #"machine.adb" 344 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b.c455b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 344 0 0# ()) );
             ( "GP_Sloc:machine.adb:344:7:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 344 0 0# (if (not ( (Boolean.orb(((Instruction__offset__rep.to_rep((#"machine.adb" 243 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:243:19:inlined:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14" "GP_Id:135" "comment:      return (Inst.MovOffs < -(2**31)) or
                  ^ machine.adb:243:19:inlined:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__selectcomp" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b.c455b)) )))) < ( -2147483648 ))) (((Instruction__offset__rep.to_rep((#"machine.adb" 244 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__selectcomp" "GP_Sloc:machine.adb:244:19:inlined:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14" "GP_Id:136" "comment:             (Inst.MovOffs > (2**31 - 1));
                  ^ machine.adb:244:19:inlined:machine.adb:344:14:inlined:machine.adb:415:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B454b__C455b.c455b)) )))) > 2147483647))) )) then (
              ( ( "GP_Sloc:machine.adb:345:27:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 345 0 0# #"machine.adb" 345 0 0# Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 345 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__ixdcomp__selectcomp" "GP_Sloc:machine.adb:345:19:inlined:machine.adb:415:16:inlined:machine.adb:439:14" "GP_Id:133" "comment:         Regs(Inst.MovRd) := DataVal(Inst.MovOffs);
                  ^ machine.adb:345:19:inlined:machine.adb:415:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__movrd_(Machine__detectinvalidbehaviour__B359b__L_2__C450b.c450b)) ))))) ((Machine__dataval__rep.of_rep((Instruction__offset__rep.to_rep((#"machine.adb" 345 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:345:42:inlined:machine.adb:415:16:inlined:machine.adb:439:14" "GP_Id:132" "comment:         Regs(Inst.MovRd) := DataVal(Inst.MovOffs);
                                         ^ machine.adb:345:42:inlined:machine.adb:415:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__regs_assign__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__movoffs_(Machine__detectinvalidbehaviour__B359b__L_2__C450b.c450b)) )))))))) )) );
              ( "GP_Sloc:machine.adb:346:17:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 346 0 0# ()) );
              ( "GP_Sloc:machine.adb:346:17:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 346 0 0# (#"machine.adb" 346 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 346 0 0# assume { #"machine.adb" 346 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b.c459b) }))
              ;
              #"machine.adb" 346 0 0# assume { #"machine.adb" 346 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b.c459b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:346:17:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 346 0 0# ()) );
              ( "GP_Sloc:machine.adb:346:10:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 346 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b.c459b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B454b__C459b.c459b < 0))) )) then (
               ( ( "GP_Sloc:machine.adb:347:16:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 347 0 0# #"machine.adb" 347 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 347 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:347:46:inlined:machine.adb:415:16:inlined:machine.adb:439:14" "GP_Id:134" "comment:            PC := ProgramCounter(Integer(PC) + Integer(1));
                                             ^ machine.adb:347:46:inlined:machine.adb:415:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
               ( "GP_Sloc:machine.adb:348:17:inlined:machine.adb:415:16:inlined:machine.adb:439:14" (#"machine.adb" 348 0 0# #"machine.adb" 348 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 5)) then (
             ( ( "GP_Sloc:machine.adb:417:21:inlined:machine.adb:439:14" (#"machine.adb" 417 0 0# ()) );
             ( "GP_Sloc:machine.adb:417:21:inlined:machine.adb:439:14" (#"machine.adb" 417 0 0# (#"machine.adb" 417 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C463b__assume = Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content in (
              #"machine.adb" 417 0 0# assume { #"machine.adb" 417 0 0# (machine__detectinvalidbehaviour__B359b__L_2__C463b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C463b.c463b) }))
             ;
             #"machine.adb" 417 0 0# assume { #"machine.adb" 417 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C463b.c463b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:417:21:inlined:machine.adb:439:14" (#"machine.adb" 417 0 0# (#"machine.adb" 417 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C464b__assume = Machine__detectinvalidbehaviour__C356b.c356b in (
              #"machine.adb" 417 0 0# assume { #"machine.adb" 417 0 0# (machine__detectinvalidbehaviour__B359b__L_2__C464b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C464b.c464b) }))
             ;
             #"machine.adb" 417 0 0# assume { #"machine.adb" 417 0 0# (Standard__integer___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C464b.c464b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:417:18:inlined:machine.adb:439:14" (#"machine.adb" 417 0 0# #"machine.adb" 417 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( not ( (Machine__detectinvalidbehaviour__B359b__L_2__C463b.c463b < Machine__detectinvalidbehaviour__B359b__L_2__C464b.c464b) ) )) );
             ( "GP_Sloc:machine.adb:418:16:inlined:machine.adb:439:14" (#"machine.adb" 418 0 0# #"machine.adb" 418 0 0# raise Machine__detectinvalidbehaviour__B359b__L_2.L_2) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 9)) then (
             ( ( "GP_Sloc:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 420 0 0# (#"machine.adb" 420 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C467b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C467b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C467b.c467b) }))
             ;
             #"machine.adb" 420 0 0# assume { #"machine.adb" 420 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C467b.c467b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 420 0 0# ()) );
             ( "GP_Sloc:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 355 0 0# ()) );
             ( "GP_Sloc:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 355 0 0# (#"machine.adb" 355 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C467b.c467b in (
              #"machine.adb" 355 0 0# assume { #"machine.adb" 355 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b.c471b) }))
             ;
             #"machine.adb" 355 0 0# assume { #"machine.adb" 355 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b.c471b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 355 0 0# (#"machine.adb" 355 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
              #"machine.adb" 355 0 0# assume { #"machine.adb" 355 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b.c472b) }))
             ;
             #"machine.adb" 355 0 0# assume { #"machine.adb" 355 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b.c472b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 355 0 0# ()) );
             ( "GP_Sloc:machine.adb:355:7:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 355 0 0# (if (not ( (Boolean.orb(((Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b.c472b + (Instruction__offset__rep.to_rep((#"machine.adb" 249 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:249:41:inlined:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" "GP_Id:140" "comment:      return (Integer(PC) + Integer(Inst.JmpOffs) < 0) or
                                        ^ machine.adb:249:41:inlined:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b.c471b)) ))))) < 0)) (((Machine__detectinvalidbehaviour__B359b__L_2__B470b__C472b.c472b + (Instruction__offset__rep.to_rep((#"machine.adb" 250 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__cmp__add__typeconv__selectcomp" "GP_Sloc:machine.adb:250:41:inlined:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14" "GP_Id:141" "comment:             (Integer(PC) + Integer(Inst.JmpOffs) > 65535);
                                        ^ machine.adb:250:41:inlined:machine.adb:355:14:inlined:machine.adb:420:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B470b__C471b.c471b)) ))))) > 65535))) )) then (
              ( ( "GP_Sloc:machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 356 0 0# ()) );
              ( "GP_Sloc:machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 356 0 0# (#"machine.adb" 356 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
               #"machine.adb" 356 0 0# assume { #"machine.adb" 356 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b.c476b) }))
              ;
              #"machine.adb" 356 0 0# assume { #"machine.adb" 356 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b.c476b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 356 0 0# (#"machine.adb" 356 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 356 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" "GP_Id:137" "comment:         if not DetectInvalidPC(PC, Inst.JmpOffs) then
                ^ machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__C477b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__B359b__L_2__C467b.c467b)) )))) in (
                assume {  (machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b.c477b) }))
              ;
               assume {  (Instruction__offset___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b.c477b True False True True) } ))) );
              ( "GP_Sloc:machine.adb:356:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 356 0 0# ()) );
              ( "GP_Sloc:machine.adb:356:10:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 356 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b.c476b > (65536 - Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b.c477b))) ((Machine__detectinvalidbehaviour__B359b__L_2__B470b__C476b.c476b < (1 - Machine__detectinvalidbehaviour__B359b__L_2__B470b__C477b.c477b)))) )) then (
               ( ( "GP_Sloc:machine.adb:357:16:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 357 0 0# #"machine.adb" 357 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 357 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:357:46:inlined:machine.adb:420:16:inlined:machine.adb:439:14" "GP_Id:139" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Inst.JmpOffs));
                                             ^ machine.adb:357:46:inlined:machine.adb:420:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + (Instruction__offset__rep.to_rep((#"machine.adb" 357 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:357:60:inlined:machine.adb:420:16:inlined:machine.adb:439:14" "GP_Id:138" "comment:            PC := ProgramCounter(Integer(PC) + Integer(Inst.JmpOffs));
                                                           ^ machine.adb:357:60:inlined:machine.adb:420:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__pc_assign__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jmpoffs_(Machine__detectinvalidbehaviour__B359b__L_2__C467b.c467b)) ))))))) )) )) );
               ( "GP_Sloc:machine.adb:358:17:inlined:machine.adb:420:16:inlined:machine.adb:439:14" (#"machine.adb" 358 0 0# #"machine.adb" 358 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
               ()))) ) )) else (
              ()))) ) ))  else if (((Instruction__opcode__rep.to_rep((Instruction__instr.rec__instruction__instr__op((Instruction__instr.__split_discrs({ Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained })))))) = 10)) then (
             ( ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# ()) );
             ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# (#"machine.adb" 422 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__C481b__assume = { Instruction__instr.__split_fields = Machine__detectinvalidbehaviour__B359b__inst.inst__split_fields.Instruction__instr.__split_fields__content; Instruction__instr.__split_discrs = Machine__detectinvalidbehaviour__B359b__inst.inst__split_discrs.Instruction__instr.__split_discrs__content; Instruction__instr.attr__constrained = Machine__detectinvalidbehaviour__B359b__inst.inst__attr__constrained } in (
              #"machine.adb" 422 0 0# assume { #"machine.adb" 422 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__C481b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b) }))
             ;
             #"machine.adb" 422 0 0# assume { #"machine.adb" 422 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# ()) );
             ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# ()) );
             ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# ()) );
             ( "GP_Sloc:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 422 0 0# ()) );
             ( "GP_Sloc:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# ()) );
             ( "GP_Sloc:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# (#"machine.adb" 365 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b__assume = Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b in (
              #"machine.adb" 365 0 0# assume { #"machine.adb" 365 0 0# ({ ( machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b__assume ) with Instruction__instr.attr__constrained = False } = Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b) }))
             ;
             #"machine.adb" 365 0 0# assume { #"machine.adb" 365 0 0# (Instruction__instr___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# (#"machine.adb" 365 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
              #"machine.adb" 365 0 0# assume { #"machine.adb" 365 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b) }))
             ;
             #"machine.adb" 365 0 0# assume { #"machine.adb" 365 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# ()) );
             ( "GP_Sloc:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# ()) );
             ( "GP_Sloc:machine.adb:365:7:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 365 0 0# (if (not ( (Boolean.orb(( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 255 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:255:24:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:147" "comment:      return (Regs(Inst.JzRa) = 0 and then (
                       ^ machine.adb:255:24:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b)) )))))))) = 0) && (Boolean.orb(((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b + (Instruction__offset__rep.to_rep((#"machine.adb" 256 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:256:44:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:148" "comment:                (Integer(PC) + Integer(Inst.JzOffs) < 0) or
                                           ^ machine.adb:256:44:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__cmp__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b)) ))))) < 0)) (((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b + (Instruction__offset__rep.to_rep((#"machine.adb" 257 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__or__cmp__add__typeconv__selectcomp" "GP_Sloc:machine.adb:257:44:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:149" "comment:                (Integer(PC) + Integer(Inst.JzOffs) > 65535))
                                           ^ machine.adb:257:44:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b)) ))))) > 65535))) )) (( ((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 259 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__not__typeconv__or__andthen__cmp__ixdcomp__selectcomp" "GP_Sloc:machine.adb:259:24:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:150" "comment:             (Regs(Inst.JzRa) /= 0 and then (
                       ^ machine.adb:259:24:inlined:machine.adb:365:14:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__B359b__L_2__B485b__C486b.c486b)) )))))))) <> 0) && (Boolean.orb(((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b + 1) < 0)) (((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C487b.c487b + 1) > 65535))) ))) )) then (
              ( "GP_Sloc:machine.adb:366:10:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 366 0 0# (if (((Machine__dataval__rep.to_rep((Array__Int__Machine__dataval.get(Machine__detectinvalidbehaviour__B359b__regs.regs.Array__Int__Machine__dataval.map__content) ((Instruction__reg__rep.to_rep((#"machine.adb" 366 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:366:22:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:146" "comment:         if Regs(Inst.JzRa) = 0 then
                     ^ machine.adb:366:22:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__cmp__ixdcomp__selectcomp" (Instruction__instr.rec__instruction__instr__jzra_(Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b)) )))))))) = 0)) then (
               ( ( "GP_Sloc:machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 367 0 0# ()) );
               ( "GP_Sloc:machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 367 0 0# (#"machine.adb" 367 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
                #"machine.adb" 367 0 0# assume { #"machine.adb" 367 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b.c492b) }))
               ;
               #"machine.adb" 367 0 0# assume { #"machine.adb" 367 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b.c492b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 367 0 0# (#"machine.adb" 367 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b__assume = (Instruction__offset__rep.to_rep((#"machine.adb" 367 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:143" "comment:            if not DetectInvalidPC(PC, Inst.JzOffs) then
                   ^ machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__C493b_decl__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b)) )))) in (
                 assume {  (machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b.c493b) }))
               ;
                assume {  (Instruction__offset___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b.c493b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:367:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 367 0 0# ()) );
               ( "GP_Sloc:machine.adb:367:13:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 367 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b.c492b > (65536 - Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b.c493b))) ((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C492b.c492b < (1 - Machine__detectinvalidbehaviour__B359b__L_2__B485b__C493b.c493b)))) )) then (
                ( ( "GP_Sloc:machine.adb:368:19:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 368 0 0# #"machine.adb" 368 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 368 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" "GP_Sloc:machine.adb:368:49:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:145" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                ^ machine.adb:368:49:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + (Instruction__offset__rep.to_rep((#"machine.adb" 368 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_DISCRIMINANT_CHECK" "GP_Sloc:machine.adb:368:63:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:144" "comment:               PC := ProgramCounter(Integer(PC) + Integer(Inst.JzOffs));
                                                              ^ machine.adb:368:63:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_DISCRIMINANT_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add__typeconv__selectcomp" (Instruction__instr.rec__instruction__instr__jzoffs_(Machine__detectinvalidbehaviour__B359b__L_2__C481b.c481b)) ))))))) )) )) );
                ( "GP_Sloc:machine.adb:369:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 369 0 0# #"machine.adb" 369 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                ()))) ) )) else (
               ( ( "GP_Sloc:machine.adb:372:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 372 0 0# ()) );
               ( "GP_Sloc:machine.adb:372:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 372 0 0# (#"machine.adb" 372 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
                #"machine.adb" 372 0 0# assume { #"machine.adb" 372 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b.c497b) }))
               ;
               #"machine.adb" 372 0 0# assume { #"machine.adb" 372 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b.c497b True False True True) } ))) );
               ( "GP_Sloc:machine.adb:372:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 372 0 0# ()) );
               ( "GP_Sloc:machine.adb:372:13:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 372 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b.c497b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B485b__C497b.c497b < 0))) )) then (
                ( ( "GP_Sloc:machine.adb:373:19:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 373 0 0# #"machine.adb" 373 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 373 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:373:49:inlined:machine.adb:422:16:inlined:machine.adb:439:14" "GP_Id:142" "comment:               PC := ProgramCounter(Integer(PC) + Integer(1));
                                                ^ machine.adb:373:49:inlined:machine.adb:422:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__if__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) );
                ( "GP_Sloc:machine.adb:374:20:inlined:machine.adb:422:16:inlined:machine.adb:439:14" (#"machine.adb" 374 0 0# #"machine.adb" 374 0 0# Machine__detectinvalidbehaviour__B359b__r.r.bool__content <- ( (Boolean.of_int(0)) )) ) )) else (
                ()))) ) )))) )) else (
              ()))) ) )) else (
             ( ( "GP_Sloc:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 424 0 0# ()) );
             ( "GP_Sloc:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 424 0 0# ()) );
             ( "GP_Sloc:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 424 0 0# ()) );
             ( "GP_Sloc:machine.adb:382:14:inlined:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 382 0 0# ()) );
             ( "GP_Sloc:machine.adb:382:14:inlined:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 382 0 0# (#"machine.adb" 382 0 0# ( (let machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b__assume = Machine__detectinvalidbehaviour__B359b__pc.pc.int__content in (
              #"machine.adb" 382 0 0# assume { #"machine.adb" 382 0 0# (machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b__assume = Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b.c503b) }))
             ;
             #"machine.adb" 382 0 0# assume { #"machine.adb" 382 0 0# (Machine__programcounter___axiom.dynamic_invariant Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b.c503b True False True True) } ))) );
             ( "GP_Sloc:machine.adb:382:14:inlined:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 382 0 0# ()) );
             ( "GP_Sloc:machine.adb:382:7:inlined:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 382 0 0# (if (not ( (Boolean.orb((Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b.c503b > 65535)) ((Machine__detectinvalidbehaviour__B359b__L_2__B502b__C503b.c503b < 0))) )) then (
              ( "GP_Sloc:machine.adb:383:13:inlined:machine.adb:424:16:inlined:machine.adb:439:14" (#"machine.adb" 383 0 0# #"machine.adb" 383 0 0# Machine__detectinvalidbehaviour__B359b__pc.pc.int__content <- ( (#"machine.adb" 383 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:machine.adb:383:43:inlined:machine.adb:424:16:inlined:machine.adb:439:14" "GP_Id:151" "comment:         PC := ProgramCounter(Integer(PC) + Integer(1));
                                          ^ machine.adb:383:43:inlined:machine.adb:424:16:inlined:machine.adb:439:14:VC_RANGE_CHECK" "GP_Shape:B359b_declblk__L_2_while__case__if__pc_assign__typeconv__add" (Machine__programcounter.range_check_((Machine__detectinvalidbehaviour__B359b__pc.pc.int__content + 1))) )) )) )) else (
              ()))) ) )))) );
            ( "GP_Sloc:machine.adb:426:21:inlined:machine.adb:439:14" (#"machine.adb" 426 0 0# #"machine.adb" 426 0 0# Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content <- ( (#"machine.adb" 426 0 0# ( "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:machine.adb:426:35:inlined:machine.adb:439:14" "GP_Id:152" "comment:         CycleCount := CycleCount + 1;
                                  ^ machine.adb:426:35:inlined:machine.adb:439:14:VC_OVERFLOW_CHECK" "GP_Shape:B359b_declblk__L_2_while__cyclecount_assign__add" (Standard__integer.range_check_((Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content + 1))) )) )) );
            ( "GP_Sloc:machine.adb:427:10:inlined:machine.adb:439:14" (#"machine.adb" 427 0 0# (if (((Boolean.to_int(Machine__detectinvalidbehaviour__B359b__r.r.bool__content)) = (Boolean.to_int((Boolean.of_int(1)))))) then (
             ( "GP_Sloc:machine.adb:428:13:inlined:machine.adb:439:14" (#"machine.adb" 428 0 0# #"machine.adb" 428 0 0# raise Machine__detectinvalidbehaviour__B359b__L_2.L_2) )) else (
             ()))) );
            () (* Check for the exit condition and loop statements appearing before the loop invariant of loop machine.adb:395 instantiated at machine.adb:439 *)
            ;
            (if (not ( (Machine__detectinvalidbehaviour__B359b__cyclecount.cyclecount.int__content < Machine__detectinvalidbehaviour__C356b.c356b) )) then (
              raise Machine__detectinvalidbehaviour__B359b__L_2.L_2)) )
           done )))
           )))
          )))
         )))
        )))
       )))
      )
    with
     Machine__detectinvalidbehaviour__B359b__L_2.L_2 -> ()
    end)) )) );
   ( "GP_Sloc:machine.adb:439:14" (#"machine.adb" 431 0 0# #"machine.adb" 431 0 0# Machine__detectinvalidbehaviour__C357b.c357b.bool__content <- ( Machine__detectinvalidbehaviour__B359b__r.r.bool__content )) ) )) );
   ( "GP_Sloc:machine.adb:439:7" (#"machine.adb" 439 0 0# ( #"machine.adb" 439 0 0# machine__detectinvalidbehaviour__result.bool__content <- ( Machine__detectinvalidbehaviour__C357b.c357b.bool__content );
   #"machine.adb" 439 0 0# raise Return__exc )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   abstract ensures {true}(let _ = True in (
   ()))
   end ;
  machine__detectinvalidbehaviour__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "domov" defined at machine.adb:130, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Machine__domov__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Instruction__reg___axiom
 use        Instruction__offset___axiom
 use        Machine__returncode___axiom
 use        Machine__regs
 use        Machine__dataval
 use        Machine__dataval__rep
 use        Array__Int__Machine__dataval
 use        Array__Int__Machine__dataval
 use        Machine__domov__rd
 use        Machine__domov__offs
 use        Machine__domov__ret
 use        Machine__dataval___axiom
 use        Machine__regs___axiom
 use        Machine__domov__rd___axiom
 use        Machine__domov__offs___axiom
 use        Machine__domov__ret___axiom
 use        Machine__returncode___axiom
 use        Instruction__reg___axiom
 use        Instruction__offset___axiom

 let def #"machine.adb" 130 0 0#"W:diverges:N" "GP_Subp:machine.adb:130" 
   (__void_param : unit)
  requires { #"machine.adb" 130 0 0# true }
  ensures { #"machine.adb" 130 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram machine.adb:130 *)
  ;
  #"machine.adb" 130 0 0# assume { #"machine.adb" 130 0 0# (Instruction__reg___axiom.dynamic_invariant Machine__domov__rd.rd True False True True) };
  #"machine.adb" 130 0 0# assume { #"machine.adb" 130 0 0# (Instruction__offset___axiom.dynamic_invariant Machine__domov__offs.offs True False True True) };
  #"machine.adb" 130 0 0# assume { #"machine.adb" 130 0 0# (Machine__returncode___axiom.dynamic_invariant Machine__domov__ret.ret.int__content False False True True) };
  #"machine.adb" 130 0 0# assume { #"machine.adb" 130 0 0# true };
  () (* Declarations introduced by the compiler at the beginning of the subprogram machine.adb:130 *)
  ;
  () (* Check for RTE in the Pre of the subprogram machine.adb:130 *)
  ;
  #"machine.adb" 130 0 0# abstract ensures {true}(let _ = ( (Machine__domov__offs.offs >= ( -2147483648 )) && (Machine__domov__offs.offs <= 2147483647) ) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram machine.adb:130 *)
  ;
  #"machine.adb" 130 0 0# assume { #"machine.adb" 130 0 0# ( (Machine__domov__offs.offs >= ( -2147483648 )) /\ (Machine__domov__offs.offs <= 2147483647) ) };
  #"machine.adb" 130 0 0# try
   ( (#"machine.adb" 133 0 0# ());
   (#"machine.adb" 133 0 0# ());
   ( "GP_Sloc:machine.adb:136:7" (#"machine.adb" 136 0 0# ()) );
   ( "GP_Sloc:machine.adb:136:16" (#"machine.adb" 136 0 0# #"machine.adb" 136 0 0# Machine__regs.regs.Array__Int__Machine__dataval.map__content <- ( (Array__Int__Machine__dataval.set(Machine__regs.regs.Array__Int__Machine__dataval.map__content) (Machine__domov__rd.rd) ((Machine__dataval__rep.of_rep(Machine__domov__offs.offs)))) )) );
   ( "GP_Sloc:machine.adb:137:11" (#"machine.adb" 137 0 0# #"machine.adb" 137 0 0# Machine__domov__ret.ret.int__content <- ( 0 )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   abstract ensures {true}(let _ = True in (
   ()))
   end  )
end
